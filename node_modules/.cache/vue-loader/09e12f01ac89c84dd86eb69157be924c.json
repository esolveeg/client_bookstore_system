{"remainingRequest":"/root/ahmed/vueJs/systemfinal/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/root/ahmed/vueJs/systemfinal/node_modules/cache-loader/dist/cjs.js??ref--0-0!/root/ahmed/vueJs/systemfinal/node_modules/vue-loader/lib/index.js??vue-loader-options!/root/ahmed/vueJs/systemfinal/src/components/layouts/Breadcrumbs.vue?vue&type=template&id=744dd96c&scoped=true&","dependencies":[{"path":"/root/ahmed/vueJs/systemfinal/src/components/layouts/Breadcrumbs.vue","mtime":1582886839531},{"path":"/root/ahmed/vueJs/systemfinal/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/root/ahmed/vueJs/systemfinal/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/root/ahmed/vueJs/systemfinal/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/root/ahmed/vueJs/systemfinal/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}