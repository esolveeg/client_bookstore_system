{"remainingRequest":"/home/ahmed/ahmedashrafdevv/esolveeg/projects/bookstore_system/client/systemfinal/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ahmed/ahmedashrafdevv/esolveeg/projects/bookstore_system/client/systemfinal/src/views/Dashboard.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/ahmed/ahmedashrafdevv/esolveeg/projects/bookstore_system/client/systemfinal/src/views/Dashboard.vue","mtime":1622727075287},{"path":"/home/ahmed/ahmedashrafdevv/esolveeg/projects/bookstore_system/client/systemfinal/node_modules/css-loader/dist/cjs.js","mtime":1609793563666},{"path":"/home/ahmed/ahmedashrafdevv/esolveeg/projects/bookstore_system/client/systemfinal/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1609793558725},{"path":"/home/ahmed/ahmedashrafdevv/esolveeg/projects/bookstore_system/client/systemfinal/node_modules/postcss-loader/src/index.js","mtime":1609793563619},{"path":"/home/ahmed/ahmedashrafdevv/esolveeg/projects/bookstore_system/client/systemfinal/node_modules/cache-loader/dist/cjs.js","mtime":1609793563794},{"path":"/home/ahmed/ahmedashrafdevv/esolveeg/projects/bookstore_system/client/systemfinal/node_modules/vue-loader/lib/index.js","mtime":1609793558535}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCkBpbXBvcnQgdXJsKCIuLi9zYXNzL3ZpZXdzL19kYXNoYm9hcmQubWluLmNzcyIpOwo="},{"version":3,"sources":["Dashboard.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4TA","file":"Dashboard.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div id=\"main\">\n    <div class=\"row\">\n      <div class=\"content-wrapper-before\"></div>\n      <div class=\"col s12 mt-65\">\n        <div class=\"container\">\n          <!-- Current balance & total transactions cards-->\n          <div class=\"row mt-4\">\n            <div class=\"col s12 m12 l4\">\n              <!-- Current Balance -->\n              <div class=\"card animated  fadeInLeft \">\n                <div class=\"card-content\">\n                  <h4 class=\"card-title mb-0\">\n                    {{ $t(\"bestseller\") }}\n                    <i class=\"material-icons float-right\">more_vert</i>\n                  </h4>\n                  <p class=\"medium-small\">{{ $t(\"bestseller_month\") }}</p>\n                  <canvas id=\"bestseller-chart\" />\n                </div>\n              </div>\n            </div>\n            <div class=\"col s12 m12 l8 animated  fadeInRight\">\n              <!-- Total Transaction -->\n              <div class=\"card\">\n                <div class=\"card-content\">\n                  <h4 class=\"card-title mb-0\">\n                    {{ $t(\"revenue\") }}\n                    <i class=\"material-icons float-right\">more_vert</i>\n                  </h4>\n                  <p class=\"medium-small\">{{ $t(\"revenue_month\") }}</p>\n                  <canvas id=\"revenue-chart\" />\n                </div>\n              </div>\n            </div>\n            <!-- <div class=\"col s12 animated  fadeInRight\" v-if=\"!branch\">\n             \n              <div class=\"card\">\n                <div class=\"card-content\">\n                  <h4 class=\"card-title mb-0\">\n                    {{ $t(\"profit\") }}\n                    <i class=\"material-icons float-right\">more_vert</i>\n                  </h4>\n                  <p class=\"medium-small\">{{ $t(\"profit_month\") }}</p>\n                  <canvas id=\"profit-chart\" />\n                </div>\n              </div>\n            </div> -->\n\n            <div class=\"col s12 m8 l8 animated  fadeInLeft\" v-if=\"!branch\">\n              <div class=\"card\">\n                <div class=\"card-content\">\n                  <h4 class=\"card-title mb-0\">\n                    {{ $t(\"expenses\") }}\n                    <i class=\"material-icons float-right\">more_vert</i>\n                  </h4>\n                  <p class=\"medium-small\">{{ $t(\"expenses_month\") }}</p>\n                  <canvas id=\"expenses-chart\" />\n                </div>\n              </div>\n            </div>\n            <div class=\"col s12 m4 l4\" v-if=\"!branch\">\n              <div class=\"card animated  fadeInRight\">\n                <div class=\"card-content\">\n                  <h4 class=\"card-title mb-0\">\n                    {{ $t(\"revenue_branch\") }}\n                    <i class=\"material-icons float-right\">more_vert</i>\n                  </h4>\n                  <p class=\"medium-small\">{{ $t(\"revenue_branch_month\") }}</p>\n                  <canvas id=\"branches-chart\" />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport bestsellerChartData from \"@/charts/bestseller-chart-data.js\";\nimport revenueChartData from \"@/charts/revenue-chart-data.js\";\nimport profitChartData from \"@/charts/profit-chart-data.js\";\nimport expensesChartData from \"@/charts/expenses-chart-data.js\";\nimport branchesChartData from \"@/charts/branches-chart-data.js\";\nimport Chart from \"chart.js\";\nimport axios from \"axios\";\nimport { allBranches } from \"@/graphql/queries/queries.js\";\nimport { setTimeout } from \"timers\";\n\nexport default {\n  name: \"dashboard\",\n  apollo: {\n    allBranches() {\n      return {\n        query: allBranches\n      };\n    }\n  },\n  store: {\n    branch: \"branch_id\",\n    isPos: \"isPos\"\n  },\n  data() {\n    return {\n      bestsellerData: {\n        type: \"polarArea\",\n        data: {\n          labels: [],\n          datasets: []\n        },\n        options: {\n          responsive: true,\n          maintainAspectRatio: true,\n          aspectRatio: 0.92\n        }\n      },\n      expensesData: {\n        type: \"line\",\n        data: {\n          labels: [],\n          datasets: []\n        },\n        options: {\n          responsive: true,\n          lineTension: 1\n        }\n      },\n      revenueData: {\n        type: \"line\",\n        data: {\n          labels: [],\n          datasets: []\n        },\n        options: {\n          responsive: true,\n          lineTension: 1\n        }\n      },\n      allBranches: [],\n      bestsellerChartData,\n      revenueChartData,\n      profitChartData,\n      expensesChartData,\n      branchesChartData\n    };\n  },\n  //mixins:[meMixin],\n  mounted() {\n    this.getRevenueData();\n    this.getBestsellerData();\n    this.getExpensesData();\n    setTimeout(() => {\n      this.createChart(\"bestseller-chart\", this.bestsellerData);\n      this.createChart(\"revenue-chart\", this.revenueData);\n      this.createChart(\"profit-chart\", this.profitChartData);\n      this.createChart(\"branches-chart\", this.branchesChartData);\n    }, 5000);\n  },\n\n  methods: {\n    createChart(chartId, chartData) {\n      const ctx = document.getElementById(chartId);\n      new Chart(ctx, {\n        type: chartData.type,\n        data: chartData.data,\n        options: chartData.options\n      });\n    },\n    getRevenueData() {\n      if (this.isPos == false) {\n        axios\n          .get(\"http://35.242.186.11/readerscorner/api_bookstore_system/public/chart\", {}, {})\n          .then(response => {\n            let data = response.data;\n            let datasets = [];\n            let labels = [];\n            data.forEach(d => {\n              labels.push(`${d.month}/${d.day}`);\n              datasets.push(parseInt(d.total));\n            });\n            this.revenueData.data.labels = labels;\n            this.revenueData.data.datasets = [\n              {\n                // one line graph\n                label: \"Sales\",\n                backgroundColor: \"rgba(249, 86, 129, .8)\",\n                data: datasets\n              }\n            ];\n          });\n        setTimeout(() => {\n          this.allBranches.forEach(branch => {\n            axios\n              .get(\n                `http://35.242.186.11/readerscorner/api_bookstore_system/public/chart/${branch.id}`,\n                {},\n                {}\n              )\n              .then(response => {\n                let data = response.data;\n                let datasets = [];\n                let labels = [];\n                data.forEach(d => {\n                  labels.push(`${d.month}`);\n                  datasets.push(parseInt(d.total));\n                });\n                this.revenueData.data.datasets.push({\n                  // one line graph\n                  label: branch.name,\n                  backgroundColor: \"rgba(5, 169, 244 , .8)\",\n                  data: datasets\n                });\n              });\n          });\n        }, 3000);\n      } else {\n        axios\n          .get(\n            `http://35.242.186.11/readerscorner/api_bookstore_system/public/chart/${this.branch}`,\n            {},\n            {}\n          )\n          .then(response => {\n            let data = response.data;\n            let datasets = [];\n            let labels = [];\n            data.forEach(d => {\n              labels.push(`${d.month}`);\n              datasets.push(parseInt(d.total));\n            });\n\n            this.revenueData.data.datasets.push({\n              // one line graph\n              label: \"point 90\",\n              backgroundColor: \"rgba(5, 169, 244 , .8)\",\n              data: datasets\n            });\n          });\n      }\n    },\n    getBranchRevenueData(branch) {\n      axios\n        .get(`http://35.242.186.11/readerscorner/api_bookstore_system/public/chart/${branch.id}`, {}, {})\n        .then(response => {\n          let data = response.data;\n          let datasets = [];\n          let labels = [];\n          data.forEach(d => {\n            labels.push(`${d.month}`);\n            datasets.push(parseInt(d.total));\n          });\n\n          this.revenueData.data.datasets.push({\n            // one line graph\n            label: branch.name,\n            backgroundColor: \"rgba(5, 169, 244 , .8)\",\n            data: datasets\n          });\n        });\n    },\n    getBestsellerData() {\n      axios\n        .get(\"http://35.242.186.11/readerscorner/api_bookstore_system/public/bestseller\", {}, {})\n        .then(response => {\n          let data = response.data;\n          let datasets = [\n            {\n              // one line graph\n              label: \"Total Sales\",\n              backgroundColor: [\n                \"rgba(5, 169, 244 , .8)\",\n                \"rgba(249, 86, 129, .8)\",\n                \"rgba(159, 93, 176 , .8)\"\n              ],\n              data: []\n            }\n          ];\n          let labels = [];\n          data.forEach(d => {\n            labels.push(`${d.name}`);\n            datasets[0].data.push(parseInt(d.qty));\n          });\n\n          this.bestsellerData.data.labels = labels;\n          this.bestsellerData.data.datasets = datasets;\n        });\n    },\n    getExpensesData() {\n      axios\n        .get(\"http://35.242.186.11/readerscorner/api_bookstore_system/public/expenses\", {}, {})\n        .then(response => {\n          let data = response.data;\n          let datasets = [\n            {\n              // one line graph\n              label: \"Total Expenses\",\n              backgroundColor: [\"rgb(56, 84, 165, .8)\"],\n              data: []\n            }\n          ];\n          let labels = [];\n          data.forEach(d => {\n            labels.push(`${d.month}`);\n            datasets[0].data.push(parseInt(d.value));\n          });\n          this.expensesData.data.labels = labels;\n          this.expensesData.data.datasets = datasets;\n\n          this.createChart(\"expenses-chart\", this.expensesData);\n        });\n    }\n  }\n};\n</script>\n<style>\n@import url(\"../sass/views/_dashboard.min.css\");\n</style>\n"]}]}