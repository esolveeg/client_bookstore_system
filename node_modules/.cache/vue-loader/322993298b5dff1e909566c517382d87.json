{"remainingRequest":"/root/ahmed/vueJs/systemfinal/node_modules/vue-loader/lib/index.js??vue-loader-options!/root/ahmed/vueJs/systemfinal/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/root/ahmed/vueJs/systemfinal/src/App.vue","mtime":1604678924032},{"path":"/root/ahmed/vueJs/systemfinal/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/root/ahmed/vueJs/systemfinal/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/root/ahmed/vueJs/systemfinal/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/root/ahmed/vueJs/systemfinal/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/root/ahmed/vueJs/systemfinal/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkfile":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div>\n    <delete-modal2 />\n    <RefundModal />\n    <div\n      id=\"app\"\n      v-if=\"\n        $route.name !== 'login' &&\n          $route.name !== 'notfound' &&\n          $route.name !== 'notallowed' &&\n          $route.name !== 'localstorage' &&\n          $route.name !== 'login2'\n      \"\n    >\n      <delete-modal @submitted=\"submitDeleteModal\" />\n      <multi-delete-modal @submitted=\"submitMultiDeleteModal\" />\n\n      <app-header />\n      <Sidebar />\n      <div id=\"main\" class=\"main-full\">\n        <div class=\"row\">\n          <router-view />\n        </div>\n      </div>\n      <app-footer />\n    </div>\n\n    <div id=\"app\" v-else>\n      <router-view />\n    </div>\n  </div>\n</template>\n\n<script>\nimport AppHeader from \"@/components/layouts/AppHeader.vue\";\nimport AppFooter from \"@/components/layouts/AppFooter.vue\";\n// import Breadcrumbs from \"@/components/layouts/Breadcrumbs.vue\";\nimport Sidebar from \"@/components/layouts/Sidebar.vue\";\nimport DeleteModal from \"@/components/modals/DeleteModal.vue\";\nimport DeleteModal2 from \"@/components/modals/DeleteModal2.vue\";\nimport RefundModal from \"@/components/modals/RefundModal.vue\";\nimport MultiDeleteModal from \"@/components/modals/MultiDeleteModal.vue\";\nimport {\n  deleteRoles,\n  deleteRole,\n  deleteExpense,\n  deleteExpenses,\n  deleteBranch,\n  deleteOrder,\n  deleteOrders,\n  deleteTransaction,\n  deleteTransactions,\n  deleteEmployee,\n  deleteEmployees,\n  deleteBranches,\n  deleteProduct,\n  meQuery,\n  deleteProducts,\n  deleteRecord,\n  deleteRecords,\n  deleteDiscount,\n  deleteDiscounts,\n  deleteCustomer,\n  deleteCustomers,\n  deleteSupplier,\n  deleteSuppliers\n} from \"@/graphql/queries/queries.js\";\nimport M from \"materialize-css\";\nexport default {\n  name: \"app\",\n  store: {\n    id: \"deleted_id\",\n    isPos: \"isPos\",\n    model: \"deleted_model\",\n    ids: \"selected_ids\"\n  },\n  watch: {\n    $route() {\n      this.ids = [];\n      this.id = \"\";\n      this.model = \"\";\n      this.loadSelects();\n    }\n  },\n\n  data() {\n    return {\n      error: \"\",\n      deletedName: \"\",\n      deltedId: \"\"\n    };\n  },\n  computed: {\n    count() {\n      return this.ids.length;\n    }\n  },\n  apollo: {\n    query: meQuery,\n    result({ data: { me } }) {\n      // console.log(me)\n      me.roles.includes(\"pos\") ? this.isPos == true : false;\n      // me.roles.includes('pos') ? this.branch_id == me : false\n    }\n  },\n  methods: {\n    loadSelects() {\n      let selects = document.querySelectorAll(\"select\");\n      let select = document.querySelector(\"#show\");\n      setTimeout(() => {\n        M.FormSelect.init(selects, {});\n        M.FormSelect.init(select, {});\n      }, 2000);\n    },\n    submitDeleteModal() {\n      // //console.log(this.model)\n      // if (this.model == \"user\") {\n      //   this.deleteUser();\n      // }\n      // if (this.model == \"transaction\") {\n      //   this.deleteTransaction();\n      // }\n      // if (this.model == \"employee\") {\n      //   this.deleteEmployee();\n      // }\n      // if (this.model == \"order\") {\n      //   this.deleteOrder();\n      // }\n      // if (this.model == \"product\") {\n      //   this.deleteProduct();\n      // }\n\n      // if (this.model == \"supplier\") {\n      //   this.deleteSupplier();\n      // }\n\n      // if (this.model == \"customer\") {\n      //   this.deleteCustomer();\n      // }\n      // if (this.model == \"discount\") {\n      //   this.deleteDiscount();\n      // }\n      // if (this.model == \"role\") {\n      //   this.deleteRole();\n      //   //this.deleteUser();\n      // }\n      // if (this.model == \"expense\") {\n      //   this.deleteExpense();\n      //   //this.deleteUser();\n      // }\n      // if (this.model == \"branch\") {\n      //   this.deleteBranch();\n      //   //this.deleteUser();\n      // }\n      this.deleteRecord();\n      setTimeout(() => {\n        this.id = \"\";\n      }, 2000);\n    },\n    submitMultiDeleteModal() {\n      // if (this.model == \"user\") {\n      //   this.deleteUsers();\n      // }\n      // if (this.model == \"transaction\") {\n      //   this.deleteTransactions();\n      // }\n      // if (this.model == \"employee\") {\n      //   this.deleteEmployees();\n      // }\n      // if (this.model == \"order\") {\n      //   this.deleteOrders();\n      // }\n      // if (this.model == \"supplier\") {\n      //   this.deleteSuppliers();\n      // }\n\n      // if (this.model == \"customer\") {\n      //   this.deleteCustomers();\n      // }\n      // if (this.model == \"discount\") {\n      //   this.deleteDiscounts();\n      // }\n      // if (this.model == \"product\") {\n      //   this.deleteProducts();\n      // }\n      // if (this.model == \"role\") {\n      //   //console.log(\"888\");\n      //   this.deleteRoles();\n      // }\n      // if (this.model == \"expense\") {\n      //   this.deleteExpenses();\n      //   //this.deleteUser();\n      // }\n      // if (this.model == \"branch\") {\n      //   this.deleteBranches();\n      //   //this.deleteUser();\n      // }\n      this.deleteRecords();\n\n      setTimeout(() => {\n        this.ids = [];\n      }, 2000);\n    },\n    deleteRecord() {\n      this.$apollo\n        .mutate({\n          mutation: deleteRecord,\n          // Parameters\n          variables: {\n            id: this.id,\n            table: this.model\n          }\n        })\n        .then(() => {\n          M.toast({\n            html: this.$t(\"deleted_successfully\"),\n            classes: \"success toast\",\n            displayLength: 3000\n          });\n          this.id = \"\";\n          this.model = \"\";\n          this.ids = [];\n          this.deletedName = \"\";\n\n          //this.$router.go(-1);\n        });\n    },\n    deleteRecords() {\n      this.$apollo\n        .mutate({\n          mutation: deleteRecords,\n          // Parameters\n          variables: {\n            ids: this.ids,\n            table: this.model\n          }\n        })\n        .then(() => {\n          M.toast({\n            html: this.$t(\"deleted_successfully\"),\n            classes: \"success toast\",\n            displayLength: 3000\n          });\n          this.id = \"\";\n          this.model = \"\";\n          this.ids = [];\n          this.deletedName = \"\";\n\n          //this.$router.go(-1);\n        });\n    },\n    deleteUsers() {\n      this.$apollo\n        .mutate({\n          mutation: require(\"@/graphql/mutations/deleteUsers.gql\"),\n          // Parameters\n          variables: {\n            id: this.ids\n          }\n        })\n        .then(() => {\n          M.toast({\n            html:\n              this.$tc(\"plural_user\", this.count, {\n                n: this.count\n              }) +\n              \" \" +\n              this.$t(\"users_deleted_successfully\"),\n            classes: \"success toast\",\n            displayLength: 3000\n          });\n          this.id = \"\";\n          this.model = \"\";\n          this.ids = [];\n          this.deletedName = \"\";\n\n          //this.$router.go(-1);\n        });\n    },\n    deleteUser() {\n      this.$apollo\n        .mutate({\n          mutation: require(\"@/graphql/mutations/deleteUser.gql\"),\n          // Parameters\n          variables: {\n            id: parseInt(this.id)\n          }\n        })\n        .then(() => {\n          M.toast({\n            html: this.$t(\"deleted_successfully\"),\n            classes: \"success toast\",\n            displayLength: 3000\n          });\n          this.id = \"\";\n          this.model = \"\";\n          this.ids = [];\n          this.deletedName = \"\";\n\n          //this.$router.go(-1);\n        });\n    },\n    deleteRole() {\n      this.$apollo\n        .mutate({\n          mutation: deleteRole,\n          // Parameters\n          variables: {\n            id: parseInt(this.id)\n          }\n        })\n        .then(data => {\n          M.toast({\n            html: this.$t(\"deleted_successfully\", {\n              name: data.data.deleteRole.name\n            }),\n            classes: \"success toast\",\n            displayLength: 3000\n          });\n          this.id = \"\";\n          this.model = \"\";\n          this.ids = [];\n          this.deletedName = \"\";\n\n          //this.$router.go(-1);\n        });\n    },\n    deleteRoles() {\n      this.$apollo\n        .mutate({\n          mutation: deleteRoles,\n          // Parameters\n          variables: {\n            id: this.ids\n          }\n        })\n        .then(() => {\n          M.toast({\n            html:\n              this.$tc(\"plural_role\", this.count, {\n                n: this.count\n              }) +\n              \" \" +\n              this.$t(\"roles_deleted_successfully\"),\n            classes: \"success toast\",\n            displayLength: 3000\n          });\n          this.id = \"\";\n          this.model = \"\";\n          this.ids = [];\n          this.deletedName = \"\";\n\n          //this.$router.go(-1);\n        });\n    },\n    deleteExpense() {\n      this.$apollo\n        .mutate({\n          mutation: deleteExpense,\n          // Parameters\n          variables: {\n            id: parseInt(this.id)\n          }\n        })\n        .then(data => {\n          M.toast({\n            html: this.$t(\"deleted_successfully\", {\n              name: data.data.deleteexpense.name\n            }),\n            classes: \"success toast\",\n            displayLength: 3000\n          });\n\n          this.id = \"\";\n          this.model = \"\";\n          this.ids = [];\n          this.deletedName = \"\";\n        });\n    },\n    deleteExpenses() {\n      this.$apollo\n        .mutate({\n          mutation: deleteExpenses,\n          // Parameters\n          variables: {\n            id: this.ids\n          }\n        })\n        .then(() => {\n          M.toast({\n            html:\n              this.$tc(\"plural_expense\", this.count, {\n                n: this.count\n              }) +\n              \" \" +\n              this.$t(\"expenses_deleted_successfully\"),\n            classes: \"success toast\",\n            displayLength: 3000\n          });\n          this.id = \"\";\n          this.model = \"\";\n          this.ids = [];\n          this.deletedName = \"\";\n\n          //this.$router.go(-1);\n        });\n    },\n\n    deleteDiscount() {\n      this.$apollo\n        .mutate({\n          mutation: deleteDiscount,\n          // Parameters\n          variables: {\n            id: parseInt(this.id)\n          }\n        })\n        .then(data => {\n          M.toast({\n            html: this.$t(\"deleted_successfully\", {\n              name: data.data.deleteDiscount.name\n            }),\n            classes: \"success toast\",\n            displayLength: 3000\n          });\n\n          this.id = \"\";\n          this.model = \"\";\n          this.ids = [];\n          this.deletedName = \"\";\n        });\n    },\n    deleteDiscounts() {\n      this.$apollo\n        .mutate({\n          mutation: deleteDiscounts,\n          // Parameters\n          variables: {\n            id: this.ids\n          }\n        })\n        .then(() => {\n          M.toast({\n            html:\n              this.$tc(\"plural_discount\", this.count, {\n                n: this.count\n              }) +\n              \" \" +\n              this.$t(\"discounts_deleted_successfully\"),\n            classes: \"success toast\",\n            displayLength: 3000\n          });\n          this.id = \"\";\n          this.model = \"\";\n          this.ids = [];\n          this.deletedName = \"\";\n\n          //this.$router.go(-1);\n        });\n    },\n    deleteBranch() {\n      this.$apollo\n        .mutate({\n          mutation: deleteBranch,\n          // Parameters\n          variables: {\n            id: parseInt(this.id)\n          }\n        })\n        .then(data => {\n          M.toast({\n            html: this.$t(\"deleted_successfully\", {\n              name: data.data.deletebranch.name\n            }),\n            classes: \"success toast\",\n            displayLength: 3000\n          });\n\n          this.id = \"\";\n          this.model = \"\";\n          this.ids = [];\n          this.deletedName = \"\";\n        });\n    },\n    deleteBranches() {\n      this.$apollo\n        .mutate({\n          mutation: deleteBranches,\n          // Parameters\n          variables: {\n            id: this.ids\n          }\n        })\n        .then(() => {\n          M.toast({\n            html:\n              this.$tc(\"plural_expense\", this.count, {\n                n: this.count\n              }) +\n              \" \" +\n              this.$t(\"expenses_deleted_successfully\"),\n            classes: \"success toast\",\n            displayLength: 3000\n          });\n          this.id = \"\";\n          this.model = \"\";\n          this.ids = [];\n          this.deletedName = \"\";\n        });\n    },\n    deleteProduct() {\n      this.$apollo\n        .mutate({\n          mutation: deleteProduct,\n          // Parameters\n          variables: {\n            id: parseInt(this.id)\n          }\n        })\n        .then(data => {\n          M.toast({\n            html: this.$t(\"deleted_successfully\", {\n              name: data.data.deleteProduct.name\n            }),\n            classes: \"success toast\",\n            displayLength: 3000\n          });\n\n          this.id = \"\";\n          this.model = \"\";\n          this.ids = [];\n          this.deletedName = \"\";\n        });\n    },\n    deleteProducts() {\n      this.$apollo\n        .mutate({\n          mutation: deleteProducts,\n          // Parameters\n          variables: {\n            id: this.ids\n          }\n        })\n        .then(() => {\n          M.toast({\n            html:\n              this.$tc(\"plural_product\", this.count, {\n                n: this.count\n              }) +\n              \" \" +\n              this.$t(\"products_deleted_successfully\"),\n            classes: \"success toast\",\n            displayLength: 3000\n          });\n          this.id = \"\";\n          this.model = \"\";\n          this.ids = [];\n          this.deletedName = \"\";\n\n          //this.$router.go(-1);\n        });\n    },\n\n    deleteCustomer() {\n      this.$apollo\n        .mutate({\n          mutation: deleteCustomer,\n          // Parameters\n          variables: {\n            id: parseInt(this.id)\n          }\n        })\n        .then(data => {\n          M.toast({\n            html: this.$t(\"deleted_successfully\", {\n              name: data.data.deleteCustomer.name\n            }),\n            classes: \"success toast\",\n            displayLength: 3000\n          });\n\n          this.id = \"\";\n          this.model = \"\";\n          this.ids = [];\n          this.deletedName = \"\";\n        });\n    },\n    deleteCustomers() {\n      this.$apollo\n        .mutate({\n          mutation: deleteCustomers,\n          // Parameters\n          variables: {\n            id: this.ids\n          }\n        })\n        .then(() => {\n          M.toast({\n            html:\n              this.$tc(\"plural_customer\", this.count, {\n                n: this.count\n              }) +\n              \" \" +\n              this.$t(\"customers_deleted_successfully\"),\n            classes: \"success toast\",\n            displayLength: 3000\n          });\n          this.id = \"\";\n          this.model = \"\";\n          this.ids = [];\n          this.deletedName = \"\";\n\n          //this.$router.go(-1);\n        });\n    },\n    deleteSupplier() {\n      this.$apollo\n        .mutate({\n          mutation: deleteSupplier,\n          // Parameters\n          variables: {\n            id: parseInt(this.id)\n          }\n        })\n        .then(data => {\n          M.toast({\n            html: this.$t(\"deleted_successfully\", {\n              name: data.data.deleteSupplier.name\n            }),\n            classes: \"success toast\",\n            displayLength: 3000\n          });\n\n          this.id = \"\";\n          this.model = \"\";\n          this.ids = [];\n          this.deletedName = \"\";\n        });\n    },\n    deleteSuppliers() {\n      this.$apollo\n        .mutate({\n          mutation: deleteSuppliers,\n          // Parameters\n          variables: {\n            id: this.ids\n          }\n        })\n        .then(() => {\n          M.toast({\n            html:\n              this.$tc(\"plural_supplier\", this.count, {\n                n: this.count\n              }) +\n              \" \" +\n              this.$t(\"suppliers_deleted_successfully\"),\n            classes: \"success toast\",\n            displayLength: 3000\n          });\n          this.id = \"\";\n          this.model = \"\";\n          this.ids = [];\n          this.deletedName = \"\";\n\n          //this.$router.go(-1);\n        });\n    },\n    deleteEmployee() {\n      this.$apollo\n        .mutate({\n          mutation: deleteEmployee,\n          // Parameters\n          variables: {\n            id: parseInt(this.id)\n          }\n        })\n        .then(data => {\n          M.toast({\n            html: this.$t(\"deleted_successfully\", {\n              name: data.data.deleteEmployee.name\n            }),\n            classes: \"success toast\",\n            displayLength: 3000\n          });\n\n          this.id = \"\";\n          this.model = \"\";\n          this.ids = [];\n          this.deletedName = \"\";\n        });\n    },\n    deleteEmployees() {\n      this.$apollo\n        .mutate({\n          mutation: deleteEmployees,\n          // Parameters\n          variables: {\n            id: this.ids\n          }\n        })\n        .then(() => {\n          M.toast({\n            html:\n              this.$tc(\"plural_employee\", this.count, {\n                n: this.count\n              }) +\n              \" \" +\n              this.$t(\"suppliers_deleted_successfully\"),\n            classes: \"success toast\",\n            displayLength: 3000\n          });\n          this.id = \"\";\n          this.model = \"\";\n          this.ids = [];\n          this.deletedName = \"\";\n\n          //this.$router.go(-1);\n        });\n    },\n    deleteOrder() {\n      this.$apollo\n        .mutate({\n          mutation: deleteOrder,\n          // Parameters\n          variables: {\n            id: parseInt(this.id)\n          }\n        })\n        .then(() => {\n          M.toast({\n            html: this.$t(\"deleted_successfully\", {\n              name: \"order\"\n            }),\n            classes: \"success toast\",\n            displayLength: 3000\n          });\n\n          this.id = \"\";\n          this.model = \"\";\n          this.ids = [];\n          this.deletedName = \"\";\n        });\n    },\n    deleteOrders() {\n      this.$apollo\n        .mutate({\n          mutation: deleteOrders,\n          // Parameters\n          variables: {\n            id: this.ids\n          }\n        })\n        .then(() => {\n          M.toast({\n            html:\n              this.$tc(\"plural_orders\", this.count, {\n                n: this.count\n              }) +\n              \" \" +\n              this.$t(\"orders_deleted_successfully\"),\n            classes: \"success toast\",\n            displayLength: 3000\n          });\n          this.id = \"\";\n          this.model = \"\";\n          this.ids = [];\n          this.deletedName = \"\";\n\n          //this.$router.go(-1);\n        });\n    },\n    deleteTransaction() {\n      this.$apollo\n        .mutate({\n          mutation: deleteTransaction,\n          // Parameters\n          variables: {\n            id: parseInt(this.id)\n          }\n        })\n        .then(() => {\n          M.toast({\n            html: this.$t(\"deleted_successfully\", {\n              name: \"transaction\"\n            }),\n            classes: \"success toast\",\n            displayLength: 3000\n          });\n\n          this.id = \"\";\n          this.model = \"\";\n          this.ids = [];\n          this.deletedName = \"\";\n        });\n    },\n    deleteTransactions() {\n      this.$apollo\n        .mutate({\n          mutation: deleteTransactions,\n          // Parameters\n          variables: {\n            id: this.ids\n          }\n        })\n        .then(() => {\n          M.toast({\n            html:\n              this.$tc(\"plural_transaction\", this.count, {\n                n: this.count\n              }) +\n              \" \" +\n              this.$t(\"transactions_deleted_successfully\"),\n            classes: \"success toast\",\n            displayLength: 3000\n          });\n          this.id = \"\";\n          this.model = \"\";\n          this.ids = [];\n          this.deletedName = \"\";\n\n          //this.$router.go(-1);\n        });\n    }\n  },\n\n  components: {\n    //Breadcrumbs,\n    RefundModal,\n    Sidebar,\n    \"app-header\": AppHeader,\n    \"delete-modal\": DeleteModal,\n    \"delete-modal2\": DeleteModal2,\n    \"app-footer\": AppFooter,\n    \"multi-delete-modal\": MultiDeleteModal\n  },\n\n  mounted() {\n    let modals = document.querySelectorAll(\".modal\");\n    M.Modal.init(modals);\n    this.loadSelects();\n    const html = document.querySelector(\"html\");\n    if (localStorage.getItem(\"locale\")) {\n      localStorage.getItem(\"locale\") == \"ar\"\n        ? html.classList.add(\"rtl\")\n        : html.classList.remove(\"rtl\");\n    } else {\n      html.classList.add(\"rtl\");\n    }\n  }\n};\n</script>\n\n<style>\n@import url(\"sass/base/_variables.min.css\");\n@import url(\"sass/base/_base.min.css\");\n@import url(\"sass/base/_animations.min.css\");\n@import url(\"sass/base/_utilites.min.css\");\n@import url(\"sass/base/_rtl.min.css\");\nlabel {\n  font-size: 16px !important;\n}\n.is-danger {\n  color: red;\n}\n</style>\n"]}]}