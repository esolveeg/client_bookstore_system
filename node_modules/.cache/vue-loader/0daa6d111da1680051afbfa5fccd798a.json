{"remainingRequest":"/home/ahmed/ahmedashrafdevv/esolveeg/projects/bookstore_system/client/systemfinal/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ahmed/ahmedashrafdevv/esolveeg/projects/bookstore_system/client/systemfinal/src/views/products/Edit-add-multi.vue?vue&type=style&index=0&id=0d930849&lang=scss&scoped=true&","dependencies":[{"path":"/home/ahmed/ahmedashrafdevv/esolveeg/projects/bookstore_system/client/systemfinal/src/views/products/Edit-add-multi.vue","mtime":1609793656683},{"path":"/home/ahmed/ahmedashrafdevv/esolveeg/projects/bookstore_system/client/systemfinal/node_modules/css-loader/dist/cjs.js","mtime":1609793563666},{"path":"/home/ahmed/ahmedashrafdevv/esolveeg/projects/bookstore_system/client/systemfinal/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1609793558725},{"path":"/home/ahmed/ahmedashrafdevv/esolveeg/projects/bookstore_system/client/systemfinal/node_modules/postcss-loader/src/index.js","mtime":1609793563619},{"path":"/home/ahmed/ahmedashrafdevv/esolveeg/projects/bookstore_system/client/systemfinal/node_modules/sass-loader/dist/cjs.js","mtime":1609793534511},{"path":"/home/ahmed/ahmedashrafdevv/esolveeg/projects/bookstore_system/client/systemfinal/node_modules/cache-loader/dist/cjs.js","mtime":1609793563794},{"path":"/home/ahmed/ahmedashrafdevv/esolveeg/projects/bookstore_system/client/systemfinal/node_modules/vue-loader/lib/index.js","mtime":1609793558535}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5mb3JtLXRpdGxlIHsKICBmb250LXdlaWdodDogNzAwOwogIGxpbmUtaGVpZ2h0OiAzLjZyZW07CiAgZm9udC1zaXplOiAyLjY0cmVtOwogIG1hcmdpbi1ib3R0b206IDVyZW07CiAgJiBpIHsKICAgIGZvbnQtc2l6ZTogMy42cmVtOwogICAgdmVydGljYWwtYWxpZ246IGJvdHRvbTsKICB9Cn0KCmxhYmVsIHsKICBmb250LXNpemU6IDEuNnJlbSAhaW1wb3J0YW50Owp9CmlucHV0LAouY2hlY2tib3ggc3Bhbjpub3QoLmxldmVyKSwKdGV4dGFyZWEsCnNlbGVjdCB7CiAgZm9udC1zaXplOiAxLjZyZW0gIWltcG9ydGFudDsKICBoZWlnaHQ6IDQuMnJlbSAhaW1wb3J0YW50Owp9Ci5jaGVja2JveCB7CiAgcG9zaXRpb246IHJlbGF0aXZlOwp9Cg=="},{"version":3,"sources":["Edit-add-multi.vue"],"names":[],"mappingsfile":"Edit-add-multi.vue","sourceRoot":"src/views/products","sourcesContent":["<template>\n  <div class=\"row\">\n    <Breadcrumbs :title=\"title\" :path=\"path\" :fregment=\"fregment\" />\n    <div class=\"col s12 mt-65\">\n      <div class=\"container\">\n        <!-- Current balance & total transactions cards-->\n        <div class=\"row mt-4\">\n          <div class=\"col s12 m12 l12\">\n            <!-- Current Balance -->\n            <h5 class=\"form-title\">\n              <i class=\"material-icons app-header-icon text-top\"\n                >perm_identity</i\n              >\n              {{ $t(title, { fregment }) }}\n            </h5>\n\n            <div class=\"card animated  fadeInLeft \">\n              <div class=\"card-content\">\n                <form @submit.prevent=\"submitted()\">\n                  <div class=\"card-alert danger card\" v-if=\"validationError\">\n                    <div class=\"card-content\">\n                      <p>\n                        <i class=\"material-icons\">error</i>{{ validationError }}\n                      </p>\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col s12 l6\">\n                      <div class=\"row\">\n                        <div\n                          class=\"input-field col s12\"\n                          :class=\"{ error: validation.hasError('isbn') }\"\n                        >\n                          <i\n                            class=\"material-icons prefix isbn-clear active\"\n                            @click=\"isbn = ''\"\n                            >clear</i\n                          >\n                          <input\n                            v-model=\"product\"\n                            id=\"isbn\"\n                            type=\"text\"\n                            class=\"input-isbn autocomplete\"\n                            autocomplete=\"off\"\n                            autofocus\n                          />\n                          <label\n                            for=\"isbn\"\n                            class=\"label-isbn active\"\n                            :class=\"isbn ? 'active' : ''\"\n                            >{{ $t(\"product\") }}</label\n                          >\n                          <div class=\"message\">\n                            <span\n                              v-if=\"this.qtyIncreased\"\n                              class=\"success-text\"\n                              >{{ $t(\"qty_increased\") }}</span\n                            >\n                            <span\n                              v-if=\"this.productAlreadyAdded\"\n                              class=\"error-text\"\n                              >{{ $t(\"poduct_already_add\") }}</span\n                            >\n                            <span\n                              v-if=\"this.productAdded\"\n                              class=\"success-text\"\n                              >{{ $t(\"poduct_added_successfully\") }}</span\n                            >\n                            {{ validation.firstError(\"isbn\") }}\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"row\">\n                        <div\n                          class=\"input-field col s12\"\n                          :class=\"{ error: validation.hasError('branch') }\"\n                        >\n                          <select id=\"branch\" v-model=\"branch\">\n                            <option value=\"\" disabled=\"none\">{{\n                              $t(\"select_branch\")\n                            }}</option>\n                            <option\n                              v-for=\"branch in allBranches\"\n                              :key=\"branch.id\"\n                              :value=\"branch.id\"\n                              >{{ branch.name }}</option\n                            >\n                          </select>\n                          <label\n                            for=\"branches\"\n                            :class=\"branch ? 'active' : ''\"\n                            >{{ $t(\"branches\") }}</label\n                          >\n                          <div class=\"message\">\n                            {{ validation.firstError(\"branch\") }}\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"col s12 l6\">\n                      <div class=\"row\">\n                        <div class=\"input-field col s12\">\n                          <div class=\"products\">\n                            {{ $t(\"products\") }}\n                          </div>\n\n                          <div class=\"invoice__table\">\n                            <table class=\"highlight responsive-table\">\n                              <thead>\n                                <tr>\n                                  <th data-field=\"no\">{{ $t(\"no\") }}</th>\n                                  <th data-field=\"item\">{{ $t(\"item\") }}</th>\n                                  <th data-field=\"item\">{{ $t(\"price\") }}</th>\n                                  <th data-field=\"item\">\n                                    {{ $t(\"purchased_price\") }}\n                                  </th>\n                                  <th data-field=\"price\">{{ $t(\"qty\") }}</th>\n                                </tr>\n                              </thead>\n                              <tbody>\n                                <tr\n                                  v-for=\"(product, index) in products\"\n                                  :key=\"index\"\n                                >\n                                  <td>{{ index + 1 }}.</td>\n                                  <td>{{ product.name }}</td>\n                                  <td>{{ product.price }}</td>\n                                  <td>{{ product.purchased_price }}</td>\n                                  <td>\n                                    <div class=\"counter\">\n                                      <!-- <i class=\"material-icons\" @click=\"increaseQty(index)\">add</i>   -->\n                                      <input\n                                        class=\"border-none w2\"\n                                        v-model=\"qtys[index]\"\n                                      />\n                                      <!-- <i class=\"material-icons\" @click=\"decreaseQty(index)\">delete</i> -->\n                                    </div>\n                                  </td>\n                                  <td>\n                                    <i\n                                      class=\"material-icons\"\n                                      @click=\"removeProduct(index)\"\n                                      style=\"cursor:pointer\"\n                                      >delete</i\n                                    >\n                                  </td>\n                                </tr>\n                              </tbody>\n                            </table>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div class=\"row\">\n                    <div class=\"input-field col s12\">\n                      <button\n                        class=\"btn create cyan waves-effect waves-light left\"\n                        type=\"submit\"\n                        disabled=\"disabled\"\n                        name=\"action\"\n                      >\n                        {{ $t(\"save\") }}\n                        <i class=\"material-icons right\">send</i>\n                      </button>\n                    </div>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport Breadcrumbs from \"@/components/layouts/Breadcrumbs.vue\";\nimport M from \"materialize-css\";\n// import axios from \"axios\";\nimport SimpleVueValidation from \"simple-vue-validator\";\nimport { allBranches, allProducts } from \"@/graphql/queries/queries.js\";\nconst Validator = SimpleVueValidation.Validator;\nexport default {\n  components: {\n    Breadcrumbs\n  },\n  data() {\n    return {\n      path: [{ title: \"products\", route: \"products.index\" }],\n      qtyIncreased: false,\n      isbn: \"\",\n      product: \"\",\n      productsIds: [],\n      qtys: [],\n      newQtys: [],\n      names: [],\n      isbns: [],\n      prices: [],\n      purchased_prices: [],\n      productAlreadyAdded: false,\n      productAdded: false,\n      products: [],\n      id: null,\n      branch: \"\",\n      allBranches: [],\n      allProducts: [],\n      title: \"create_product\",\n      validationError: \"\",\n      fregment: \"\"\n    };\n  },\n  validators: {\n    products(value) {\n      return Validator.value(value).required();\n    }\n  },\n\n  apollo: {\n    allBranches() {\n      return {\n        query: allBranches\n      };\n    },\n\n    allProducts() {\n      return {\n        query: allProducts,\n        result({ data: { allProducts } }) {\n          let elems = document.querySelectorAll(\".autocomplete\");\n\n          let data = this.toObject(allProducts);\n          let options = { data };\n          options.onAutocomplete = val => {\n            this.product = val;\n          };\n          M.Autocomplete.init(elems, options);\n        }\n      };\n    }\n  },\n\n  watch: {\n    \"validation.errors\"() {\n      const btn = document.querySelector(\".input-field button\");\n      if (this.validation.errors.length > 0) {\n        btn.setAttribute(\"disabled\", \"disabled\");\n      } else {\n        if (!this.order) {\n          setTimeout(() => {\n            this.validation.touchedRecords.length > 1\n              ? btn.removeAttribute(\"disabled\")\n              : \"\";\n          }, 2000);\n        } else {\n          btn.removeAttribute(\"disabled\");\n        }\n      }\n    },\n    discount() {\n      if (this.discountType == \"value\") {\n        this.discountValue = this.discount;\n      } else if (this.discountType == \"percent\") {\n        this.discountValue = (this.total * this.discount) / 100;\n      }\n    },\n    product() {\n      let product = this.allProducts.filter(product => {\n        return product.isbn == this.product || product.name == this.product\n          ? product\n          : \"\";\n      });\n      const btn = document.querySelector(\".input-field button\");\n      btn.setAttribute(\"disabled\", \"disabled\");\n      if (product[0]) {\n        let elem = document.querySelector(\".autocomplete-content\");\n        if (elem) elem.style.opacity = 0;\n        if (this.productsIds.includes(product[0].id)) {\n          let index = this.productsIds.indexOf(product[0].id);\n          this.productAlreadyAdded = false;\n          this.qtyIncreased = true;\n          this.productAdded = false;\n          this.qtys[index] = this.qtys[index] + 1;\n          setTimeout(() => {\n            this.qtyIncreased = false;\n            this.product = \"\";\n          }, 1000);\n        } else {\n          this.qtys.push(1);\n          this.productAdded = true;\n          product[0].qty = this.qtys[this.qtys.length - 1];\n\n          this.products.push(product[0]);\n          this.productsIds.push(product[0].id);\n\n          setTimeout(() => {\n            this.productAdded = false;\n          }, 3000);\n          this.product = \"\";\n        }\n        setTimeout(() => {\n          this.validation.touchedRecords.length > 1\n            ? btn.removeAttribute(\"disabled\")\n            : \"\";\n        }, 4000);\n      }\n    }\n  },\n  methods: {\n    // async getAmazon() {\n    //  await axios\n    //     .get(\n    //       \"https://www.amazon.co.uk/\",\n    //       {},\n    //       {\n    //       }\n    //     )\n    //     .then(response => {\n    //       let data = response.data;\n    //       // console.log(data);\n    //     });\n    // },\n    removeProduct(index) {\n      this.products = this.products.filter(product => {\n        return product !== this.products[index] ? product : \"\";\n      });\n      this.qtys = this.qtys.filter(product => {\n        return product !== this.qtys[index] ? product : \"\";\n      });\n      this.productsIds = this.productsIds.filter(product => {\n        return product !== this.productsIds[index] ? product : \"\";\n      });\n    },\n    resetForm() {\n      this.isbn = \"\";\n      this.product = \"\";\n      this.branch = \"\";\n      this.productsIds = [];\n      this.qtys = [];\n      this.productAlreadyAdded = false;\n      this.productAdded = false;\n      this.products = [];\n      this.loadSelects();\n    },\n    increaseQty(index) {\n      this.qtys[index] = this.qtys[index] + 1;\n      this.qtys = this.qtys;\n    },\n    decreaseQty(index) {\n      this.qtys[index] = this.qtys[index] - 1;\n    },\n    toObject(arr) {\n      let rv = {};\n      for (var i = 0; i < arr.length; ++i) {\n        arr[i] !== undefined ? (rv[arr[i].name] = null) : \"\";\n        arr[i] !== undefined ? (rv[arr[i].isbn] = null) : \"\";\n      }\n      return rv;\n    },\n    loadSelects() {\n      let selects = document.querySelectorAll(\"select\");\n      setTimeout(() => {\n        M.FormSelect.init(selects, {});\n      }, 2000);\n    },\n    submitted() {\n      this.createMultiProducts();\n    }\n  },\n  mounted() {\n    this.loadSelects();\n    document.addEventListener(\"keydown\", event => {\n      if (event.isComposing || event.keyCode === 9 || event.keyCode === 13) {\n        return this.submitted();\n      }\n      // do something\n    });\n  }\n};\n</script>\n<style lang=\"scss\" scoped>\n.form-title {\n  font-weight: 700;\n  line-height: 3.6rem;\n  font-size: 2.64rem;\n  margin-bottom: 5rem;\n  & i {\n    font-size: 3.6rem;\n    vertical-align: bottom;\n  }\n}\n\nlabel {\n  font-size: 1.6rem !important;\n}\ninput,\n.checkbox span:not(.lever),\ntextarea,\nselect {\n  font-size: 1.6rem !important;\n  height: 4.2rem !important;\n}\n.checkbox {\n  position: relative;\n}\n</style>\n"]}]}