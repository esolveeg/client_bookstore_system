{"remainingRequest":"/root/ahmed/vueJs/systemfinal/node_modules/vue-loader/lib/index.js??vue-loader-options!/root/ahmed/vueJs/systemfinal/src/views/orders/Edit-add2.vue?vue&type=template&id=bfd34c38&","dependencies":[{"path":"/root/ahmed/vueJs/systemfinal/src/views/orders/Edit-add2.vue","mtime":1603957973912},{"path":"/root/ahmed/vueJs/systemfinal/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/root/ahmed/vueJs/systemfinal/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/root/ahmed/vueJs/systemfinal/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/root/ahmed/vueJs/systemfinal/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}