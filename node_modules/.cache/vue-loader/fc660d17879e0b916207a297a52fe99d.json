{"remainingRequest":"/root/ahmed/vueJs/systemfinal/node_modules/vue-loader/lib/index.js??vue-loader-options!/root/ahmed/vueJs/systemfinal/src/views/transactions/Approve.vue?vue&type=style&index=0&id=c47e0b0c&scoped=true&lang=css&","dependencies":[{"path":"/root/ahmed/vueJs/systemfinal/src/views/transactions/Approve.vue","mtime":1583679094464},{"path":"/root/ahmed/vueJs/systemfinal/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/root/ahmed/vueJs/systemfinal/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/root/ahmed/vueJs/systemfinal/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/root/ahmed/vueJs/systemfinal/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/root/ahmed/vueJs/systemfinal/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKQGltcG9ydCB1cmwoIi4uLy4uL3Nhc3MvY29tcG9uZW50cy9faW52b2ljZS5zY3NzIik7Ci5pc2JuLWNsZWFyIHsKICBsZWZ0OiBhdXRvOwogIHJpZ2h0OiAwOwogIGN1cnNvcjogcG9pbnRlcjsKfQouaW5wdXQtaXNibiB7CiAgbWFyZ2luLXJpZ2h0OiA0LjVyZW07CiAgbWFyZ2luLWxlZnQ6IDByZW0gIWltcG9ydGFudDsKfQoubGFiZWwtaXNibiB7CiAgbWFyZ2luLWxlZnQ6IDAgIWltcG9ydGFudDsKfQouY291bnRlciB7CiAgd2lkdGg6IDUwcHg7CiAgYm9yZGVyOiAxcHggc29saWQgI2RkZDsKICBwYWRkaW5nOiA1cHg7CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIGRpc3BsYXk6IGZsZXg7CiAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47Cn0KLmNvdW50ZXIgaSB7CiAgY3Vyc29yOiBwb2ludGVyOwp9Ci53MiB7CiAgd2lkdGg6IDMwcHg7Cn0K"},{"version":3,"sources":["Approve.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6gBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Approve.vue","sourceRoot":"src/views/transactions","sourcesContent":["<template>\n  <div class=\"row\">\n    <div id=\"approve-modal\" class=\"modal\">\n      <div class=\"modal-content\">\n        <h4>Warning</h4>\n        <p>A bunch of products found on transaction you weren't added</p>\n        <ul>\n          <li v-for=\"(product, index) in notApproved\" :key=\"index\">\n            {{ index + 1 }} . {{ product }} ({{ getName(product) }})\n          </li>\n        </ul>\n      </div>\n      <div class=\"modal-footer\">\n        <a class=\"modal-close waves-effect waves-green btn-flat\">Close</a>\n        <a\n          @click=\"updateTransaction()\"\n          class=\"modal-close waves-effect waves-green btn-flat\"\n          >Agree</a\n        >\n      </div>\n    </div>\n    <Breadcrumbs :title=\"title\" :path=\"path\" :fregment=\"fregment\" />\n\n    <div class=\"col s12 mt-65\">\n      <div class=\"container\">\n        <!-- Current balance & total transactions cards-->\n        <div class=\"row mt-4\">\n          <div class=\"col s12 m12 l12\">\n            <!-- Current Balance -->\n            <h5 class=\"form-title\">\n              <i class=\"material-icons app-header-icon text-top\"\n                >perm_identity</i\n              >\n              {{ $t(title, { fregment }) }}\n            </h5>\n\n            <div class=\"card animated  fadeInLeft \">\n              <div class=\"card-content\">\n                <form @submit.prevent=\"approve()\">\n                  <div class=\"row\">\n                    <div class=\"col s12 l6\">\n                      <div class=\"row\">\n                        <div\n                          class=\"input-field col s12\"\n                          :class=\"{ error: validation.hasError('product') }\"\n                        >\n                          <i\n                            class=\"material-icons prefix isbn-clear\"\n                            @click=\"product = ''\"\n                            >clear</i\n                          >\n                          <input\n                            v-model=\"product\"\n                            id=\"isbn\"\n                            type=\"text\"\n                            class=\"input-isbn autocomplete\"\n                            autocomplete=\"off\"\n                          />\n                          <label\n                            for=\"isbn\"\n                            class=\"label-isbn\"\n                            :class=\"isbn ? 'active' : ''\"\n                            >{{ $t(\"product\") }}</label\n                          >\n                          <div class=\"message\">\n                            <span\n                              v-if=\"this.productAlreadyAdded\"\n                              class=\"error-text\"\n                              >{{ $t(\"poduct_already_add\") }}</span\n                            >\n                            <span\n                              v-if=\"this.productAdded\"\n                              class=\"success-text\"\n                              >{{ $t(\"poduct_added_successfully\") }}</span\n                            >\n                            {{ validation.firstError(\"isbn\") }}\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"col s12 l6\">\n                      <div class=\"row\">\n                        <div class=\"input-field col s12\">\n                          <div class=\"products\">\n                            {{ $t(\"products\") }}\n                          </div>\n\n                          <div class=\"invoice__table\">\n                            <table class=\"highlight responsive-table\">\n                              <thead>\n                                <tr>\n                                  <th data-field=\"no\">No</th>\n                                  <th data-field=\"item\">Item</th>\n                                  <th data-field=\"price\">Qty</th>\n                                </tr>\n                              </thead>\n                              <tbody>\n                                <tr\n                                  v-for=\"(product, index) in products\"\n                                  :key=\"index\"\n                                >\n                                  <td>{{ index + 1 }}.</td>\n                                  <td>{{ product.name }}</td>\n                                  <td>\n                                    <div class=\"counter\">\n                                      <!-- <i class=\"material-icons\" @click=\"increaseQty(index)\">add</i>   -->\n                                      <input\n                                        class=\"border-none w2\"\n                                        v-model=\"product.qty\"\n                                      />\n                                      <!-- <i class=\"material-icons\" @click=\"decreaseQty(index)\">delete</i> -->\n                                    </div>\n                                  </td>\n                                  <td>\n                                    <i\n                                      class=\"material-icons\"\n                                      @click=\"removeProduct(product.id)\"\n                                      style=\"cursor:pointer\"\n                                      >delete</i\n                                    >\n                                  </td>\n                                </tr>\n                              </tbody>\n                            </table>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div class=\"row\">\n                    <div class=\"input-field col s12\">\n                      <button\n                        class=\"btn create cyan waves-effect waves-light left\"\n                        type=\"submit\"\n                        name=\"action\"\n                        disabled=\"disabled\"\n                      >\n                        {{ $t(\"approve\") }}\n                        <i class=\"material-icons right\">send</i>\n                      </button>\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col s12 l12\">\n                      <div class=\"row\">\n                        <div class=\"input-field col s12\">\n                          <div class=\"products\">\n                            {{ $t(\"report\") }}\n                          </div>\n\n                          <div class=\"invoice__table\">\n                            <table class=\"highlight responsive-table\">\n                              <thead>\n                                <tr>\n                                  <th data-field=\"no\">No</th>\n                                  <th data-field=\"isbn\">Isbn</th>\n                                  <th data-field=\"item\">Item</th>\n                                  <th data-field=\"qty\">Qty</th>\n                                  <th data-field=\"difference\">difference</th>\n                                  <th data-field=\"status\">status</th>\n                                </tr>\n                              </thead>\n                              <tbody>\n                                <tr\n                                  v-for=\"(product, index) in reportProducts\"\n                                  :key=\"index\"\n                                  :class=\"\n                                    getPivotQty(product.index) ==\n                                    getQty(product.isbn)\n                                      ? 'success'\n                                      : 'danger'\n                                  \"\n                                >\n                                  <td>{{ index + 1 }}.</td>\n                                  <td>{{ product.isbn }}</td>\n                                  <td>{{ product.name }}</td>\n                                  <td>{{ getQty(product.isbn) }}</td>\n\n                                  <td>\n                                    {{\n                                      getPivotQty(product.index) -\n                                        parseInt(getQty(product.isbn))\n                                    }}\n                                  </td>\n                                  <td>\n                                    <span\n                                      v-if=\"\n                                        getPivotQty(product.index) ==\n                                          getQty(product.isbn)\n                                      \"\n                                    >\n                                      {{ $t(\"approved\") }}\n                                    </span>\n                                    <span\n                                      v-else-if=\"\n                                        getPivotQty(product.index) >\n                                          getQty(product.isbn)\n                                      \"\n                                    >\n                                      {{ $t(\"plus\") }}\n                                    </span>\n                                    <span v-else>\n                                      {{ $t(\"minus\") }}\n                                    </span>\n                                  </td>\n                                </tr>\n                                <tr\n                                  v-for=\"(product, index) in notFoundProducts\"\n                                  :key=\"index\"\n                                  class=\"danger\"\n                                >\n                                  <td>\n                                    {{ reportProducts.length + index + 1 }}.\n                                  </td>\n                                  <td>{{ product.isbn }}</td>\n                                  <td>{{ product.name }}</td>\n                                  <td>{{ getQty(product.isbn) }}</td>\n\n                                  <td>{{ parseInt(getQty(product.isbn)) }}</td>\n                                  <td>\n                                    {{ $t(\"notfound_in_transaction\") }}\n                                  </td>\n                                </tr>\n                                <tr\n                                  v-for=\"(product, index) in notApproved\"\n                                  :key=\"index\"\n                                  class=\"danger\"\n                                >\n                                  <td>\n                                    {{\n                                      reportProducts.length +\n                                        notFoundProducts.length +\n                                        index +\n                                        1\n                                    }}.\n                                  </td>\n                                  <td>{{ product }}</td>\n                                  <td>{{ getName(product) }}</td>\n                                  <td>{{ getQty(product) }}</td>\n\n                                  <td>{{ parseInt(getQty(product)) }}</td>\n                                  <td>\n                                    {{ $t(\"notfound_in_check\") }}\n                                  </td>\n                                </tr>\n                              </tbody>\n                            </table>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport M from \"materialize-css\";\nimport Breadcrumbs from \"@/components/layouts/Breadcrumbs.vue\";\nimport SimpleVueValidation from \"simple-vue-validator\";\nimport {\n  transactionQuery,\n  allProducts,\n  updateTransactionProduct,\n  updateTransaction\n} from \"@/graphql/queries/queries.js\";\nconst Validator = SimpleVueValidation.Validator;\nexport default {\n  name: \"approve-transactions\",\n  data() {\n    return {\n      transaction: \"\",\n      allProducts: [],\n      product: \"\",\n      path: [],\n      isbn: \"\",\n      qtyIncreased: false,\n      currentProducts: [],\n      reportProducts: [],\n      notFoundProducts: [],\n      productsIds: [],\n      notApproved: [],\n      checkMe: \"\",\n      productAdded: false,\n      productAlreadyAdded: false,\n      fregment: \"\",\n      validationError: \"\",\n      qtys: [],\n      title: \"approve_transaction\",\n      products: []\n    };\n  },\n  components: {\n    Breadcrumbs\n  },\n  methods: {\n    removeProduct(id) {\n      this.products = this.products.filter(product => {\n        return product.id !== id ? product : \"\";\n      });\n      this.productsIds = this.productsIds.filter(product => {\n        return product.id !== id ? product : \"\";\n      });\n      this.reportProducts = this.reportProducts.filter(product => {\n        return product.id !== id ? product : \"\";\n      });\n      this.notFoundProducts = this.notFoundProducts.filter(product => {\n        return product.id !== id ? product : \"\";\n      });\n    },\n    approve() {\n      let isbns = [];\n      let transactionIsbns = [];\n      this.reportProducts.forEach(product => {\n        isbns.push(product.isbn);\n      });\n      this.transaction.products.forEach(product => {\n        transactionIsbns.push(product.isbn);\n      });\n      let intersection = transactionIsbns.filter(isbn => {\n        return isbns.includes(isbn) ? \"\" : isbn;\n      });\n      if (intersection.length > 0) {\n        this.notApproved = intersection;\n        let elems = document.querySelectorAll(\".modal\");\n        let elem = document.querySelector(\"#approve-modal\");\n        M.Modal.init(elems, {});\n        let instance = M.Modal.getInstance(elem);\n        instance.open();\n      } else {\n        this.updateTransaction();\n      }\n    },\n    updateTransaction() {\n      this.products.forEach(product => {\n        this.qtys.push(product.qty);\n      });\n      this.$apollo\n        .mutate({\n          mutation: updateTransactionProduct,\n          // Parameters\n          variables: {\n            transaction: parseInt(this.$route.params.id),\n            qtys: this.qtys,\n            branch: this.transaction.branch.id,\n            products: this.productsIds\n          }\n        })\n        .then(() => {\n          this.$apollo\n            .mutate({\n              mutation: updateTransaction,\n              // Parameters\n              variables: {\n                id: parseInt(this.$route.params.id),\n                branch: this.transaction.branch.id,\n                approved: true\n              }\n            })\n            .then(() => {\n              M.toast({\n                html: `${this.$t(\"updated_successfully\", {\n                  name: \"transaction\"\n                })}`,\n                classes: \"success toast\",\n                displayLength: 3000\n              });\n              this.$router.push({ name: \"transactions.index\" });\n            })\n            .catch(() => {\n              //console.log(e)\n              this.validationError = this.$t(\"branch_required\");\n            });\n        });\n    },\n    getQty(isbn) {\n      let product = this.allProducts.filter(product => {\n        return product.isbn == isbn ? product : \"\";\n      });\n      return product[0].qty;\n    },\n    getName(isbn) {\n      let product = this.allProducts.filter(product => {\n        return product.isbn == isbn ? product : \"\";\n      });\n      return product[0].name;\n    },\n    getPivotQty(index) {\n      return this.transaction.productsPivot[index].qty;\n    },\n    toObject(arr) {\n      let rv = {};\n      for (var i = 0; i < arr.length; ++i) {\n        arr[i] !== undefined ? (rv[arr[i].name] = null) : \"\";\n        arr[i] !== undefined ? (rv[arr[i].isbn] = null) : \"\";\n      }\n      return rv;\n    }\n  },\n  validators: {\n    products(value) {\n      return Validator.value(value).required();\n    }\n  },\n  watch: {\n    \"validation.errors\"() {\n      const btn = document.querySelector(\".input-field button\");\n      if (this.validation.errors.length > 1) {\n        btn.setAttribute(\"disabled\", \"disabled\");\n      } else {\n        if (!this.transaction) {\n          this.validation.touchedRecords.length > 1\n            ? btn.removeAttribute(\"disabled\")\n            : \"\";\n        } else {\n          btn.removeAttribute(\"disabled\");\n        }\n      }\n    },\n    product() {\n      let product = this.allProducts.filter(product => {\n        return product.isbn == this.product || product.name == this.product\n          ? product\n          : \"\";\n      });\n\n      if (product[0]) {\n        let elem = document.querySelector(\".autocomplete-content\");\n        if (elem) elem.style.opacity = 0;\n        if (this.productsIds.includes(product[0].id)) {\n          let index = this.productsIds.indexOf(product[0].id);\n          this.productAlreadyAdded = false;\n          this.qtyIncreased = true;\n          this.productAdded = false;\n          this.products[index].qty = this.products[index].qty + 1;\n          setTimeout(() => {\n            this.qtyIncreased = false;\n            this.product = \"\";\n          }, 1000);\n        } else {\n          this.productAdded = true;\n          product[0].qty = 1;\n\n          this.products.push(product[0]);\n          this.productsIds.push(product[0].id);\n\n          setTimeout(() => {\n            this.productAdded = false;\n          }, 3000);\n          this.product = \"\";\n        }\n\n        this.checkMe = product[0].id;\n        let transactionIds = [];\n        this.transaction.products.forEach(pro => {\n          transactionIds.push(pro[\"id\"]);\n        });\n        if (transactionIds.includes(this.checkMe)) {\n          let checkedProduct = {\n            id: product[0].id,\n            isbn: product[0].isbn,\n            name: product[0].name,\n            index: transactionIds.indexOf(this.checkMe)\n          };\n          let filter = this.reportProducts.filter(filterProduct => {\n            return filterProduct.isbn == product[0].isbn ? filterProduct : \"\";\n          });\n          filter.length > 0 ? \"\" : this.reportProducts.push(checkedProduct);\n        } else {\n          let filter = this.notFoundProducts.filter(filterProduct => {\n            return filterProduct.isbn == product[0].isbn ? filterProduct : \"\";\n          });\n          filter.length > 0\n            ? \"\"\n            : this.notFoundProducts.push({\n                id: product[0].id,\n                isbn: product[0].isbn,\n                name: product[0].name\n              });\n        }\n      }\n    }\n  },\n  apollo: {\n    transaction() {\n      return {\n        query: transactionQuery,\n        variables() {\n          return {\n            id: parseInt(this.$route.params.id)\n          };\n        },\n        result({ data: { transaction } }) {\n          this.branch = transaction.branch.id;\n        }\n      };\n    },\n\n    allProducts() {\n      return {\n        query: allProducts,\n        result({ data: { allProducts } }) {\n          let elems = document.querySelectorAll(\".autocomplete\");\n\n          let data = this.toObject(allProducts);\n\n          let options = { data };\n          options.onAutocomplete = val => {\n            this.product = val;\n          };\n\n          M.Autocomplete.init(elems, options);\n        }\n      };\n    }\n  }\n};\n</script>\n<style scoped>\n@import url(\"../../sass/components/_invoice.scss\");\n.isbn-clear {\n  left: auto;\n  right: 0;\n  cursor: pointer;\n}\n.input-isbn {\n  margin-right: 4.5rem;\n  margin-left: 0rem !important;\n}\n.label-isbn {\n  margin-left: 0 !important;\n}\n.counter {\n  width: 50px;\n  border: 1px solid #ddd;\n  padding: 5px;\n  text-align: center;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n.counter i {\n  cursor: pointer;\n}\n.w2 {\n  width: 30px;\n}\n</style>\n"]}]}