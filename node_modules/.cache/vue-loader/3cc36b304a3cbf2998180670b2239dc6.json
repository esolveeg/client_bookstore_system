{"remainingRequest":"/home/ahmed/ahmedashrafdevv/esolveeg/projects/bookstore_system/client/systemfinal/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ahmed/ahmedashrafdevv/esolveeg/projects/bookstore_system/client/systemfinal/src/views/orders/Edit-add.vue?vue&type=template&id=fdef9184&","dependencies":[{"path":"/home/ahmed/ahmedashrafdevv/esolveeg/projects/bookstore_system/client/systemfinal/src/views/orders/Edit-add.vue","mtime":1609793656588},{"path":"/home/ahmed/ahmedashrafdevv/esolveeg/projects/bookstore_system/client/systemfinal/node_modules/cache-loader/dist/cjs.js","mtime":1609793563794},{"path":"/home/ahmed/ahmedashrafdevv/esolveeg/projects/bookstore_system/client/systemfinal/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1609793558725},{"path":"/home/ahmed/ahmedashrafdevv/esolveeg/projects/bookstore_system/client/systemfinal/node_modules/cache-loader/dist/cjs.js","mtime":1609793563794},{"path":"/home/ahmed/ahmedashrafdevv/esolveeg/projects/bookstore_system/client/systemfinal/node_modules/vue-loader/lib/index.js","mtime":1609793558535}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}