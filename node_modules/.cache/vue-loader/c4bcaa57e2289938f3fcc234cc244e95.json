{"remainingRequest":"/home/ahmed/ahmedashrafdevv/esolveeg/projects/bookstore_system/client/systemfinal/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/ahmed/ahmedashrafdevv/esolveeg/projects/bookstore_system/client/systemfinal/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/ahmed/ahmedashrafdevv/esolveeg/projects/bookstore_system/client/systemfinal/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ahmed/ahmedashrafdevv/esolveeg/projects/bookstore_system/client/systemfinal/src/components/layouts/Sidebar.vue?vue&type=template&id=1ce768d6&scoped=true&","dependencies":[{"path":"/home/ahmed/ahmedashrafdevv/esolveeg/projects/bookstore_system/client/systemfinal/src/components/layouts/Sidebar.vue","mtime":1609793656383},{"path":"/home/ahmed/ahmedashrafdevv/esolveeg/projects/bookstore_system/client/systemfinal/node_modules/cache-loader/dist/cjs.js","mtime":1609793563794},{"path":"/home/ahmed/ahmedashrafdevv/esolveeg/projects/bookstore_system/client/systemfinal/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1609793558725},{"path":"/home/ahmed/ahmedashrafdevv/esolveeg/projects/bookstore_system/client/systemfinal/node_modules/cache-loader/dist/cjs.js","mtime":1609793563794},{"path":"/home/ahmed/ahmedashrafdevv/esolveeg/projects/bookstore_system/client/systemfinal/node_modules/vue-loader/lib/index.js","mtime":1609793558535}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF9jKAogICAgImFzaWRlIiwKICAgIHsgc3RhdGljQ2xhc3M6ICJzaWRlYmFyIGFuaW1hdGVkICBmYWRlSW5MZWZ0IiwgYXR0cnM6IHsgaWQ6ICJzaWRlYmFyIiB9IH0sCiAgICBbCiAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAic2lkZWJhcl9fbG9nbyIgfSwgWwogICAgICAgIF9jKAogICAgICAgICAgImgxIiwKICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJzaWRlYmFyX19sb2dvLS13cmFwcGVyIiB9LAogICAgICAgICAgWwogICAgICAgICAgICBfYygKICAgICAgICAgICAgICAicm91dGVyLWxpbmsiLAogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAic2lkZWJhcl9fbG9nby0tbGluayIsCiAgICAgICAgICAgICAgICBhdHRyczogeyB0bzogeyBuYW1lOiAiZGFzaGJvYXJkIiB9IH0KICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgIF9jKCJpbWciLCB7CiAgICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgICAgc3JjOgogICAgICAgICAgICAgICAgICAgICAgImh0dHBzOi8vcGl4aW52ZW50LmNvbS9tYXRlcmlhbGl6ZS1tYXRlcmlhbC1kZXNpZ24tYWRtaW4tdGVtcGxhdGUvYXBwLWFzc2V0cy9pbWFnZXMvbG9nby9tYXRlcmlhbGl6ZS1sb2dvLWNvbG9yLnBuZyIsCiAgICAgICAgICAgICAgICAgICAgYWx0OiAiaWJ1c2luZXNzIGxvZ28iCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgICAgX2MoInNwYW4iLCB7IHN0YXRpY0NsYXNzOiAic2lkZWJhcl9fbG9nby0tdGV4dCIgfSwgWwogICAgICAgICAgICAgICAgICBfdm0uX3YoIk1hdGVyaWFsaXplIikKICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgXQogICAgICAgICAgICApLAogICAgICAgICAgICBfYygKICAgICAgICAgICAgICAiYSIsCiAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJzaWRlYmFyX190b2dnbGVyIiwKICAgICAgICAgICAgICAgIG9uOiB7IGNsaWNrOiBfdm0udG9nZ2xlU2lkZWJhciB9CiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgInN2ZyIsCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgICAgeG1sbnM6ICJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIsCiAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogIjMyIiwKICAgICAgICAgICAgICAgICAgICAgIGhlaWdodDogIjMyIgogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgIF9jKCJwYXRoIiwgewogICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJ0b2dnbGVyX19pY29uLS1wYXRoIiwKICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgICAgICAgIGQ6CiAgICAgICAgICAgICAgICAgICAgICAgICAgIk0xNiAwQzcuMTYzIDAgMCA3LjE2MyAwIDE2czcuMTYzIDE2IDE2IDE2IDE2LTcuMTYzIDE2LTE2UzI0LjgzNyAwIDE2IDB6bTAgMjhDOS4zNzMgMjggNCAyMi42MjcgNCAxNlM5LjM3MyA0IDE2IDRzMTIgNS4zNzMgMTIgMTItNS4zNzMgMTItMTIgMTJ6bS02LTEyYTYgNiAwIDExMTIgMCA2IDYgMCAwMS0xMiAweiIKICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgXQogICAgICAgICAgICApCiAgICAgICAgICBdLAogICAgICAgICAgMQogICAgICAgICkKICAgICAgXSksCiAgICAgIF9jKAogICAgICAgICJ1bCIsCiAgICAgICAgeyBzdGF0aWNDbGFzczogInNpZGViYXJfX2xpc3QiIH0sCiAgICAgICAgX3ZtLl9sKF92bS5maWx0ZXJlZCwgZnVuY3Rpb24obGluaykgewogICAgICAgICAgcmV0dXJuIF9jKAogICAgICAgICAgICAibGkiLAogICAgICAgICAgICB7CiAgICAgICAgICAgICAga2V5OiBsaW5rLmlkLAogICAgICAgICAgICAgIGNsYXNzOiBsaW5rLmlzSGVhZAogICAgICAgICAgICAgICAgPyAic2lkZWJhcl9fbGlzdC0taGVhZCIKICAgICAgICAgICAgICAgIDogInNpZGViYXJfX2xpc3QtLWl0ZW0iLAogICAgICAgICAgICAgIG9uOiB7IGNsaWNrOiBfdm0udG9nZ2xlRHJvcERvd24gfQogICAgICAgICAgICB9LAogICAgICAgICAgICBbCiAgICAgICAgICAgICAgIWxpbmsuaXNIZWFkIHx8ICFfdm0ubGlua3MuaXNQYXJlbnQKICAgICAgICAgICAgICAgID8gX2MoCiAgICAgICAgICAgICAgICAgICAgInJvdXRlci1saW5rIiwKICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczoKICAgICAgICAgICAgICAgICAgICAgICAgInNpZGViYXJfX2xpc3QtLWxpbmsgIHdhdmVzLWVmZmVjdCB3YXZlcy1jeWFuIiwKICAgICAgICAgICAgICAgICAgICAgIGNsYXNzOgogICAgICAgICAgICAgICAgICAgICAgICBsaW5rLmNoaWxkcmVuICYmIGxpbmsuY2hpbGRyZW4uaW5jbHVkZXMoX3ZtLiRyb3V0ZS5uYW1lKQogICAgICAgICAgICAgICAgICAgICAgICAgID8gImFjdGl2ZSIKICAgICAgICAgICAgICAgICAgICAgICAgICA6ICIiLAogICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgdG86IHsgbmFtZTogbGluay5yb3V0ZSB9IH0KICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAgIF9jKCJpIiwgeyBzdGF0aWNDbGFzczogIm1hdGVyaWFsLWljb25zIiB9LCBbCiAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdihfdm0uX3MobGluay5pY29uKSkKICAgICAgICAgICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgICAgICAgICAgX2MoInNwYW4iLCB7IHN0YXRpY0NsYXNzOiAic2lkZWJhcl9fbGlzdC0tdGl0bGUiIH0sIFsKICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KF92bS5fcyhfdm0uJHQobGluay50aXRsZSkpKQogICAgICAgICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgIDogX2MoImEiLCB7IHN0YXRpY0NsYXNzOiAic2lkZWJhcl9fbGlzdC0taGVhZC1saW5rIiB9LCBbCiAgICAgICAgICAgICAgICAgICAgX3ZtLl92KF92bS5fcyhfdm0uJHQobGluay50aXRsZSkpKQogICAgICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICBsaW5rLmlzUGFyZW50CiAgICAgICAgICAgICAgICA/IF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAic2lkZWJhcl9fZHJvcGRvd24iIH0sIFsKICAgICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAgICJ1bCIsCiAgICAgICAgICAgICAgICAgICAgICB7IHN0YXRpY0NsYXNzOiAic2lkZWJhcl9fZHJvcGRvd24tLWxpc3QgIiB9LAogICAgICAgICAgICAgICAgICAgICAgX3ZtLl9sKF92bS5zdWJsaW5rcyhsaW5rLmlkKSwgZnVuY3Rpb24oc3ViKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfYygKICAgICAgICAgICAgICAgICAgICAgICAgICAibGkiLAogICAgICAgICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGtleTogc3ViLmlkLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJzaWRlYmFyX19kcm9wZG93bi0tbGlzdC1pdGVtICAiCiAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgInJvdXRlci1saW5rIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgInNpZGViYXJfX2Ryb3Bkb3duLS1saXN0LWxpbmsgIHdhdmVzLWVmZmVjdCB3YXZlcy1jeWFuIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyczogeyB0bzogeyBuYW1lOiBzdWIucm91dGUgfSB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYygiaSIsIHsgc3RhdGljQ2xhc3M6ICJtYXRlcmlhbC1pY29ucyIgfSwgWwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KCJyYWRpb19idXR0b25fdW5jaGVja2VkIikKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYygic3BhbiIsIFtfdm0uX3YoX3ZtLl9zKF92bS4kdChzdWIudGl0bGUpKSldKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgICAgICAgICAxCiAgICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgICAgICAgICAgMAogICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICAgIDogX3ZtLl9lKCkKICAgICAgICAgICAgXSwKICAgICAgICAgICAgMQogICAgICAgICAgKQogICAgICAgIH0pLAogICAgICAgIDAKICAgICAgKSwKICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJuYXZpZ2F0aW9uLWJhY2tncm91bmQiIH0pLAogICAgICBfYygKICAgICAgICAiYSIsCiAgICAgICAgewogICAgICAgICAgc3RhdGljQ2xhc3M6CiAgICAgICAgICAgICJzaWRlbmF2LXRyaWdnZXIgYnRuLXNpZGVuYXYtdG9nZ2xlIGJ0bi1mbG9hdGluZyBidG4tbWVkaXVtIHdhdmVzLWVmZmVjdCB3YXZlcy1saWdodCBoaWRlLW9uLWxhcmdlLW9ubHkiLAogICAgICAgICAgYXR0cnM6IHsgaHJlZjogIiMiLCAiZGF0YS10YXJnZXQiOiAic2xpZGUtb3V0IiB9LAogICAgICAgICAgb246IHsgY2xpY2s6IF92bS5tb2JpbGVUb2dnbGVTaWRlYmFyIH0KICAgICAgICB9LAogICAgICAgIFtfYygiaSIsIHsgc3RhdGljQ2xhc3M6ICJtYXRlcmlhbC1pY29ucyIgfSwgW192bS5fdigibWVudSIpXSldCiAgICAgICksCiAgICAgIF9jKCJkaXYiLCB7CiAgICAgICAgc3RhdGljQ2xhc3M6ICJzaWRlbmF2LW92ZXJsYXkiLAogICAgICAgIG9uOiB7IGNsaWNrOiBfdm0ubW9iaWxlVG9nZ2xlU2lkZWJhciB9CiAgICAgIH0pCiAgICBdCiAgKQp9CnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbXQpyZW5kZXIuX3dpdGhTdHJpcHBlZCA9IHRydWUKCmV4cG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0="}]}