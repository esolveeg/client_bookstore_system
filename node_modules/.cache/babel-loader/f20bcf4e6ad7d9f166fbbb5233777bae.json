{"remainingRequest":"/root/ahmed/vueJs/systemfinal/node_modules/thread-loader/dist/cjs.js!/root/ahmed/vueJs/systemfinal/node_modules/babel-loader/lib/index.js!/root/ahmed/vueJs/systemfinal/node_modules/eslint-loader/index.js??ref--13-0!/root/ahmed/vueJs/systemfinal/src/graphql/queries/queries.js","dependencies":[{"path":"/root/ahmed/vueJs/systemfinal/src/graphql/queries/queries.js","mtime":1603903913090},{"path":"/root/ahmed/vueJs/systemfinal/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/root/ahmed/vueJs/systemfinal/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/root/ahmed/vueJs/systemfinal/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/root/ahmed/vueJs/systemfinal/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF90YWdnZWRUZW1wbGF0ZUxpdGVyYWwgZnJvbSAiL3Jvb3QvYWhtZWQvdnVlSnMvc3lzdGVtZmluYWwvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lLWNvcmVqczMvaGVscGVycy9lc20vdGFnZ2VkVGVtcGxhdGVMaXRlcmFsIjsKCmZ1bmN0aW9uIF90ZW1wbGF0ZU9iamVjdDg3KCkgewogIHZhciBkYXRhID0gX3RhZ2dlZFRlbXBsYXRlTGl0ZXJhbChbIlxuICBxdWVyeSB7XG4gICAgYWxsUGVybWlzc2lvbnMge1xuICAgICAgbmFtZVxuICAgICAgaWRcbiAgICB9XG4gIH1cbiJdKTsKCiAgX3RlbXBsYXRlT2JqZWN0ODcgPSBmdW5jdGlvbiBfdGVtcGxhdGVPYmplY3Q4NygpIHsKICAgIHJldHVybiBkYXRhOwogIH07CgogIHJldHVybiBkYXRhOwp9CgpmdW5jdGlvbiBfdGVtcGxhdGVPYmplY3Q4NigpIHsKICB2YXIgZGF0YSA9IF90YWdnZWRUZW1wbGF0ZUxpdGVyYWwoWyJcbiAgcXVlcnkge1xuICAgIGFsbEN1c3RvbWVycyB7XG4gICAgICBuYW1lXG4gICAgICBpZFxuICAgIH1cbiAgfVxuIl0pOwoKICBfdGVtcGxhdGVPYmplY3Q4NiA9IGZ1bmN0aW9uIF90ZW1wbGF0ZU9iamVjdDg2KCkgewogICAgcmV0dXJuIGRhdGE7CiAgfTsKCiAgcmV0dXJuIGRhdGE7Cn0KCmZ1bmN0aW9uIF90ZW1wbGF0ZU9iamVjdDg1KCkgewogIHZhciBkYXRhID0gX3RhZ2dlZFRlbXBsYXRlTGl0ZXJhbChbIlxuICBxdWVyeSB7XG4gICAgYWxsUHJvZHVjdHMge1xuICAgICAgaXNiblxuICAgICAgbmFtZVxuICAgICAgcHJpY2VcbiAgICAgIHB1cmNoYXNlZF9wcmljZVxuICAgICAgcXR5XG4gICAgICBpZFxuICAgIH1cbiAgfVxuIl0pOwoKICBfdGVtcGxhdGVPYmplY3Q4NSA9IGZ1bmN0aW9uIF90ZW1wbGF0ZU9iamVjdDg1KCkgewogICAgcmV0dXJuIGRhdGE7CiAgfTsKCiAgcmV0dXJuIGRhdGE7Cn0KCmZ1bmN0aW9uIF90ZW1wbGF0ZU9iamVjdDg0KCkgewogIHZhciBkYXRhID0gX3RhZ2dlZFRlbXBsYXRlTGl0ZXJhbChbIlxuICBxdWVyeSB7XG4gICAgYWxsQnJhbmNoZXMge1xuICAgICAgbmFtZVxuICAgICAgaWRcbiAgICB9XG4gIH1cbiJdKTsKCiAgX3RlbXBsYXRlT2JqZWN0ODQgPSBmdW5jdGlvbiBfdGVtcGxhdGVPYmplY3Q4NCgpIHsKICAgIHJldHVybiBkYXRhOwogIH07CgogIHJldHVybiBkYXRhOwp9CgpmdW5jdGlvbiBfdGVtcGxhdGVPYmplY3Q4MygpIHsKICB2YXIgZGF0YSA9IF90YWdnZWRUZW1wbGF0ZUxpdGVyYWwoWyJcbiAgcXVlcnkge1xuICAgIGFsbFN1cHBsaWVycyB7XG4gICAgICBuYW1lXG4gICAgICBpZFxuICAgIH1cbiAgfVxuIl0pOwoKICBfdGVtcGxhdGVPYmplY3Q4MyA9IGZ1bmN0aW9uIF90ZW1wbGF0ZU9iamVjdDgzKCkgewogICAgcmV0dXJuIGRhdGE7CiAgfTsKCiAgcmV0dXJuIGRhdGE7Cn0KCmZ1bmN0aW9uIF90ZW1wbGF0ZU9iamVjdDgyKCkgewogIHZhciBkYXRhID0gX3RhZ2dlZFRlbXBsYXRlTGl0ZXJhbChbIlxuICBxdWVyeSB7XG4gICAgYWxsVXNlcnMge1xuICAgICAgbmFtZVxuICAgICAgaWRcbiAgICB9XG4gIH1cbiJdKTsKCiAgX3RlbXBsYXRlT2JqZWN0ODIgPSBmdW5jdGlvbiBfdGVtcGxhdGVPYmplY3Q4MigpIHsKICAgIHJldHVybiBkYXRhOwogIH07CgogIHJldHVybiBkYXRhOwp9CgpmdW5jdGlvbiBfdGVtcGxhdGVPYmplY3Q4MSgpIHsKICB2YXIgZGF0YSA9IF90YWdnZWRUZW1wbGF0ZUxpdGVyYWwoWyJcbiAgbXV0YXRpb24oJGlkOiBJRCEpIHtcbiAgICBkZWxldGVFeHBlbnNlKGlkOiAkaWQpIHtcbiAgICAgIGlkXG4gICAgfVxuICB9XG4iXSk7CgogIF90ZW1wbGF0ZU9iamVjdDgxID0gZnVuY3Rpb24gX3RlbXBsYXRlT2JqZWN0ODEoKSB7CiAgICByZXR1cm4gZGF0YTsKICB9OwoKICByZXR1cm4gZGF0YTsKfQoKZnVuY3Rpb24gX3RlbXBsYXRlT2JqZWN0ODAoKSB7CiAgdmFyIGRhdGEgPSBfdGFnZ2VkVGVtcGxhdGVMaXRlcmFsKFsiXG4gIG11dGF0aW9uKCRpZDogW0lEIV0hKSB7XG4gICAgZGVsZXRlRXhwZW5zZXMoaWQ6ICRpZCkge1xuICAgICAgaWRcbiAgICB9XG4gIH1cbiJdKTsKCiAgX3RlbXBsYXRlT2JqZWN0ODAgPSBmdW5jdGlvbiBfdGVtcGxhdGVPYmplY3Q4MCgpIHsKICAgIHJldHVybiBkYXRhOwogIH07CgogIHJldHVybiBkYXRhOwp9CgpmdW5jdGlvbiBfdGVtcGxhdGVPYmplY3Q3OSgpIHsKICB2YXIgZGF0YSA9IF90YWdnZWRUZW1wbGF0ZUxpdGVyYWwoWyJcbiAgbXV0YXRpb24oJGlkOiBJRCEpIHtcbiAgICBkZWxldGVQcm9kdWN0KGlkOiAkaWQpIHtcbiAgICAgIG5hbWVcbiAgICB9XG4gIH1cbiJdKTsKCiAgX3RlbXBsYXRlT2JqZWN0NzkgPSBmdW5jdGlvbiBfdGVtcGxhdGVPYmplY3Q3OSgpIHsKICAgIHJldHVybiBkYXRhOwogIH07CgogIHJldHVybiBkYXRhOwp9CgpmdW5jdGlvbiBfdGVtcGxhdGVPYmplY3Q3OCgpIHsKICB2YXIgZGF0YSA9IF90YWdnZWRUZW1wbGF0ZUxpdGVyYWwoWyJcbiAgbXV0YXRpb24oJGlkOiBbSUQhXSEpIHtcbiAgICBkZWxldGVQcm9kdWN0cyhpZDogJGlkKSB7XG4gICAgICBuYW1lXG4gICAgfVxuICB9XG4iXSk7CgogIF90ZW1wbGF0ZU9iamVjdDc4ID0gZnVuY3Rpb24gX3RlbXBsYXRlT2JqZWN0NzgoKSB7CiAgICByZXR1cm4gZGF0YTsKICB9OwoKICByZXR1cm4gZGF0YTsKfQoKZnVuY3Rpb24gX3RlbXBsYXRlT2JqZWN0NzcoKSB7CiAgdmFyIGRhdGEgPSBfdGFnZ2VkVGVtcGxhdGVMaXRlcmFsKFsiXG4gIG11dGF0aW9uKCRpZDogSUQhKSB7XG4gICAgZGVsZXRlQnJhbmNoKGlkOiAkaWQpIHtcbiAgICAgIG5hbWVcbiAgICB9XG4gIH1cbiJdKTsKCiAgX3RlbXBsYXRlT2JqZWN0NzcgPSBmdW5jdGlvbiBfdGVtcGxhdGVPYmplY3Q3NygpIHsKICAgIHJldHVybiBkYXRhOwogIH07CgogIHJldHVybiBkYXRhOwp9CgpmdW5jdGlvbiBfdGVtcGxhdGVPYmplY3Q3NigpIHsKICB2YXIgZGF0YSA9IF90YWdnZWRUZW1wbGF0ZUxpdGVyYWwoWyJcbiAgbXV0YXRpb24oJGlkOiBbSUQhXSEpIHtcbiAgICBkZWxldGVCcmFuY2hlcyhpZDogJGlkKSB7XG4gICAgICBuYW1lXG4gICAgfVxuICB9XG4iXSk7CgogIF90ZW1wbGF0ZU9iamVjdDc2ID0gZnVuY3Rpb24gX3RlbXBsYXRlT2JqZWN0NzYoKSB7CiAgICByZXR1cm4gZGF0YTsKICB9OwoKICByZXR1cm4gZGF0YTsKfQoKZnVuY3Rpb24gX3RlbXBsYXRlT2JqZWN0NzUoKSB7CiAgdmFyIGRhdGEgPSBfdGFnZ2VkVGVtcGxhdGVMaXRlcmFsKFsiXG4gIG11dGF0aW9uKCRpZDogSUQhKSB7XG4gICAgZGVsZXRlRGlzY291bnQoaWQ6ICRpZCkge1xuICAgICAgaWRcbiAgICB9XG4gIH1cbiJdKTsKCiAgX3RlbXBsYXRlT2JqZWN0NzUgPSBmdW5jdGlvbiBfdGVtcGxhdGVPYmplY3Q3NSgpIHsKICAgIHJldHVybiBkYXRhOwogIH07CgogIHJldHVybiBkYXRhOwp9CgpmdW5jdGlvbiBfdGVtcGxhdGVPYmplY3Q3NCgpIHsKICB2YXIgZGF0YSA9IF90YWdnZWRUZW1wbGF0ZUxpdGVyYWwoWyJcbiAgbXV0YXRpb24oJGlkOiBbSUQhXSEpIHtcbiAgICBkZWxldGVEaXNjb3VudHMoaWQ6ICRpZCkge1xuICAgICAgaWRcbiAgICB9XG4gIH1cbiJdKTsKCiAgX3RlbXBsYXRlT2JqZWN0NzQgPSBmdW5jdGlvbiBfdGVtcGxhdGVPYmplY3Q3NCgpIHsKICAgIHJldHVybiBkYXRhOwogIH07CgogIHJldHVybiBkYXRhOwp9CgpmdW5jdGlvbiBfdGVtcGxhdGVPYmplY3Q3MygpIHsKICB2YXIgZGF0YSA9IF90YWdnZWRUZW1wbGF0ZUxpdGVyYWwoWyJcbiAgbXV0YXRpb24oJGlkOiBJRCEpIHtcbiAgICBkZWxldGVDdXN0b21lcihpZDogJGlkKSB7XG4gICAgICBuYW1lXG4gICAgfVxuICB9XG4iXSk7CgogIF90ZW1wbGF0ZU9iamVjdDczID0gZnVuY3Rpb24gX3RlbXBsYXRlT2JqZWN0NzMoKSB7CiAgICByZXR1cm4gZGF0YTsKICB9OwoKICByZXR1cm4gZGF0YTsKfQoKZnVuY3Rpb24gX3RlbXBsYXRlT2JqZWN0NzIoKSB7CiAgdmFyIGRhdGEgPSBfdGFnZ2VkVGVtcGxhdGVMaXRlcmFsKFsiXG4gIG11dGF0aW9uKCRpZDogW0lEIV0hKSB7XG4gICAgZGVsZXRlQ3VzdG9tZXJzKGlkOiAkaWQpIHtcbiAgICAgIG5hbWVcbiAgICB9XG4gIH1cbiJdKTsKCiAgX3RlbXBsYXRlT2JqZWN0NzIgPSBmdW5jdGlvbiBfdGVtcGxhdGVPYmplY3Q3MigpIHsKICAgIHJldHVybiBkYXRhOwogIH07CgogIHJldHVybiBkYXRhOwp9CgpmdW5jdGlvbiBfdGVtcGxhdGVPYmplY3Q3MSgpIHsKICB2YXIgZGF0YSA9IF90YWdnZWRUZW1wbGF0ZUxpdGVyYWwoWyJcbiAgbXV0YXRpb24oJGlkOiBJRCEpIHtcbiAgICBkZWxldGVTdXBwbGllcihpZDogJGlkKSB7XG4gICAgICBuYW1lXG4gICAgfVxuICB9XG4iXSk7CgogIF90ZW1wbGF0ZU9iamVjdDcxID0gZnVuY3Rpb24gX3RlbXBsYXRlT2JqZWN0NzEoKSB7CiAgICByZXR1cm4gZGF0YTsKICB9OwoKICByZXR1cm4gZGF0YTsKfQoKZnVuY3Rpb24gX3RlbXBsYXRlT2JqZWN0NzAoKSB7CiAgdmFyIGRhdGEgPSBfdGFnZ2VkVGVtcGxhdGVMaXRlcmFsKFsiXG4gIG11dGF0aW9uKFxuICAgICRpZDogSUQhXG4gICAgJG5vdGU6IFN0cmluZ1xuICAgICRwYXltZW50OiBTdHJpbmchXG4gICAgJGRpc2NvdW50OiBJbnRcbiAgICAkdXBkYXRlZF9ieTogSUQhXG4gICAgJHRvdGFsOiBJbnQhXG4gICAgJGN1c3RvbWVyOiBJRFxuICAgICRicmFuY2g6IElEXG4gICkge1xuICAgIHVwZGF0ZU9yZGVyKFxuICAgICAgaW5wdXQ6IHtcbiAgICAgICAgaWQ6ICRpZFxuICAgICAgICBub3RlOiAkbm90ZVxuICAgICAgICBwYXltZW50OiAkcGF5bWVudFxuICAgICAgICB1cGRhdGVkX2J5OiAkdXBkYXRlZF9ieVxuICAgICAgICBkaXNjb3VudDogJGRpc2NvdW50XG4gICAgICAgIHRvdGFsOiAkdG90YWxcbiAgICAgICAgY3VzdG9tZXJfaWQ6ICRjdXN0b21lclxuICAgICAgICBicmFuY2hfaWQ6ICRicmFuY2hcbiAgICAgIH1cbiAgICApIHtcbiAgICAgIGlkXG4gICAgfVxuICB9XG4iXSk7CgogIF90ZW1wbGF0ZU9iamVjdDcwID0gZnVuY3Rpb24gX3RlbXBsYXRlT2JqZWN0NzAoKSB7CiAgICByZXR1cm4gZGF0YTsKICB9OwoKICByZXR1cm4gZGF0YTsKfQoKZnVuY3Rpb24gX3RlbXBsYXRlT2JqZWN0NjkoKSB7CiAgdmFyIGRhdGEgPSBfdGFnZ2VkVGVtcGxhdGVMaXRlcmFsKFsiXG4gIG11dGF0aW9uKFxuICAgICRpZDogSUQhXG4gICAgJG5vdGU6IFN0cmluZ1xuICAgICR1cGRhdGVkX2J5OiBJRCFcbiAgICAkdG90YWw6IEludCFcbiAgICAkc3VwcGxpZXI6IElEXG4gICAgJGJyYW5jaDogSURcbiAgKSB7XG4gICAgdXBkYXRlT3V0Y29taW5nT3JkZXIoXG4gICAgICBpbnB1dDoge1xuICAgICAgICBpZDogJGlkXG4gICAgICAgIG5vdGU6ICRub3RlXG4gICAgICAgIHVwZGF0ZWRfYnk6ICR1cGRhdGVkX2J5XG4gICAgICAgIHRvdGFsOiAkdG90YWxcbiAgICAgICAgc3VwcGxpZXJfaWQ6ICRzdXBwbGllclxuICAgICAgICBicmFuY2hfaWQ6ICRicmFuY2hcbiAgICAgIH1cbiAgICApIHtcbiAgICAgIGlkXG4gICAgfVxuICB9XG4iXSk7CgogIF90ZW1wbGF0ZU9iamVjdDY5ID0gZnVuY3Rpb24gX3RlbXBsYXRlT2JqZWN0NjkoKSB7CiAgICByZXR1cm4gZGF0YTsKICB9OwoKICByZXR1cm4gZGF0YTsKfQoKZnVuY3Rpb24gX3RlbXBsYXRlT2JqZWN0NjgoKSB7CiAgdmFyIGRhdGEgPSBfdGFnZ2VkVGVtcGxhdGVMaXRlcmFsKFsiXG4gIG11dGF0aW9uKFxuICAgICRub3RlOiBTdHJpbmdcbiAgICAkY3JlYXRlZF9ieTogSUQhXG4gICAgJHRvdGFsOiBJbnQhXG4gICAgJHN1cHBsaWVyOiBJRFxuICAgICRicmFuY2g6IElEXG4gICkge1xuICAgIGNyZWF0ZU91dGNvbWluZ09yZGVyKFxuICAgICAgaW5wdXQ6IHtcbiAgICAgICAgbm90ZTogJG5vdGVcbiAgICAgICAgY3JlYXRlZF9ieTogJGNyZWF0ZWRfYnlcbiAgICAgICAgdG90YWw6ICR0b3RhbFxuICAgICAgICBzdXBwbGllcl9pZDogJHN1cHBsaWVyXG4gICAgICAgIGJyYW5jaF9pZDogJGJyYW5jaFxuICAgICAgfVxuICAgICkge1xuICAgICAgaWRcbiAgICB9XG4gIH1cbiJdKTsKCiAgX3RlbXBsYXRlT2JqZWN0NjggPSBmdW5jdGlvbiBfdGVtcGxhdGVPYmplY3Q2OCgpIHsKICAgIHJldHVybiBkYXRhOwogIH07CgogIHJldHVybiBkYXRhOwp9CgpmdW5jdGlvbiBfdGVtcGxhdGVPYmplY3Q2NygpIHsKICB2YXIgZGF0YSA9IF90YWdnZWRUZW1wbGF0ZUxpdGVyYWwoWyJcbiAgbXV0YXRpb24oXG4gICAgJG5vdGU6IFN0cmluZ1xuICAgICRkaXNjb3VudDogSW50XG4gICAgJHBheW1lbnQ6IFN0cmluZyFcbiAgICAkY3JlYXRlZF9ieTogSUQhXG4gICAgJHRvdGFsOiBJbnQhXG4gICAgJGN1c3RvbWVyOiBJRFxuICAgICRicmFuY2g6IElEXG4gICkge1xuICAgIGNyZWF0ZU9yZGVyKFxuICAgICAgaW5wdXQ6IHtcbiAgICAgICAgbm90ZTogJG5vdGVcbiAgICAgICAgcGF5bWVudDogJHBheW1lbnRcbiAgICAgICAgY3JlYXRlZF9ieTogJGNyZWF0ZWRfYnlcbiAgICAgICAgZGlzY291bnQ6ICRkaXNjb3VudFxuICAgICAgICB0b3RhbDogJHRvdGFsXG4gICAgICAgIGN1c3RvbWVyX2lkOiAkY3VzdG9tZXJcbiAgICAgICAgYnJhbmNoX2lkOiAkYnJhbmNoXG4gICAgICB9XG4gICAgKSB7XG4gICAgICBpZFxuICAgIH1cbiAgfVxuIl0pOwoKICBfdGVtcGxhdGVPYmplY3Q2NyA9IGZ1bmN0aW9uIF90ZW1wbGF0ZU9iamVjdDY3KCkgewogICAgcmV0dXJuIGRhdGE7CiAgfTsKCiAgcmV0dXJuIGRhdGE7Cn0KCmZ1bmN0aW9uIF90ZW1wbGF0ZU9iamVjdDY2KCkgewogIHZhciBkYXRhID0gX3RhZ2dlZFRlbXBsYXRlTGl0ZXJhbChbIlxuICBtdXRhdGlvbigkdHJhbnNhY3Rpb246IElEISwgJGJyYW5jaDogSUQhLCAkcHJvZHVjdHM6IFtJRCFdISwgJHF0eXM6IFtJbnQhXSEpIHtcbiAgICB1cGRhdGVUcmFuc2FjdGlvblByb2R1Y3QoXG4gICAgICBpbnB1dDoge1xuICAgICAgICB0cmFuc2FjdGlvbjogJHRyYW5zYWN0aW9uXG4gICAgICAgIGJyYW5jaDogJGJyYW5jaFxuICAgICAgICBwcm9kdWN0czogJHByb2R1Y3RzXG4gICAgICAgIHF0eXM6ICRxdHlzXG4gICAgICB9XG4gICAgKSB7XG4gICAgICBpZFxuICAgIH1cbiAgfVxuIl0pOwoKICBfdGVtcGxhdGVPYmplY3Q2NiA9IGZ1bmN0aW9uIF90ZW1wbGF0ZU9iamVjdDY2KCkgewogICAgcmV0dXJuIGRhdGE7CiAgfTsKCiAgcmV0dXJuIGRhdGE7Cn0KCmZ1bmN0aW9uIF90ZW1wbGF0ZU9iamVjdDY1KCkgewogIHZhciBkYXRhID0gX3RhZ2dlZFRlbXBsYXRlTGl0ZXJhbChbIlxuICBtdXRhdGlvbigkYnJhbmNoOiBJRCEsICRmcm9tX2JyYW5jaDogSUQsICRwcm9kdWN0czogW0lEIV0hLCAkcXR5czogW0ludCFdISkge1xuICAgIGNyZWF0ZVRyYW5zYWN0aW9uUHJvZHVjdChcbiAgICAgIGlucHV0OiB7XG4gICAgICAgIHByb2R1Y3RzOiAkcHJvZHVjdHNcbiAgICAgICAgYnJhbmNoOiAkYnJhbmNoXG4gICAgICAgIHF0eXM6ICRxdHlzXG4gICAgICAgIGZyb21fYnJhbmNoOiAkZnJvbV9icmFuY2hcbiAgICAgIH1cbiAgICApIHtcbiAgICAgIGlkXG4gICAgfVxuICB9XG4iXSk7CgogIF90ZW1wbGF0ZU9iamVjdDY1ID0gZnVuY3Rpb24gX3RlbXBsYXRlT2JqZWN0NjUoKSB7CiAgICByZXR1cm4gZGF0YTsKICB9OwoKICByZXR1cm4gZGF0YTsKfQoKZnVuY3Rpb24gX3RlbXBsYXRlT2JqZWN0NjQoKSB7CiAgdmFyIGRhdGEgPSBfdGFnZ2VkVGVtcGxhdGVMaXRlcmFsKFsiXG4gIG11dGF0aW9uKFxuICAgICRvcmRlcjogSURcbiAgICAkcHJvZHVjdHM6IFtJRCFdIVxuICAgICRicmFuY2g6IElEXG4gICAgJHF0eXM6IFtJbnQhXSFcbiAgICAkbm90ZTogU3RyaW5nXG4gICAgJHBheW1lbnQ6IFN0cmluZyFcbiAgICAkZGlzY291bnQ6IEludFxuICAgICRjcmVhdGVkX2J5OiBJRCFcbiAgICAkdG90YWw6IEludCFcbiAgICAkY3VzdG9tZXI6IElEXG4gICkge1xuICAgIHVwZGF0ZU9yZGVyUHJvZHVjdChcbiAgICAgIGlucHV0OiB7XG4gICAgICAgIG9yZGVyOiAkb3JkZXJcbiAgICAgICAgYnJhbmNoOiAkYnJhbmNoXG4gICAgICAgIHByb2R1Y3RzOiAkcHJvZHVjdHNcbiAgICAgICAgcXR5czogJHF0eXNcbiAgICAgICAgbm90ZTogJG5vdGVcbiAgICAgICAgcGF5bWVudDogJHBheW1lbnRcbiAgICAgICAgZGlzY291bnQ6ICRkaXNjb3VudFxuICAgICAgICBjcmVhdGVkX2J5OiAkY3JlYXRlZF9ieVxuICAgICAgICB0b3RhbDogJHRvdGFsXG4gICAgICAgIGN1c3RvbWVyX2lkOiAkY3VzdG9tZXJcbiAgICAgIH1cbiAgICApIHtcbiAgICAgIHRvdGFsXG4gICAgfVxuICB9XG4iXSk7CgogIF90ZW1wbGF0ZU9iamVjdDY0ID0gZnVuY3Rpb24gX3RlbXBsYXRlT2JqZWN0NjQoKSB7CiAgICByZXR1cm4gZGF0YTsKICB9OwoKICByZXR1cm4gZGF0YTsKfQoKZnVuY3Rpb24gX3RlbXBsYXRlT2JqZWN0NjMoKSB7CiAgdmFyIGRhdGEgPSBfdGFnZ2VkVGVtcGxhdGVMaXRlcmFsKFsiXG4gIG11dGF0aW9uKFxuICAgICRvdXRjb21pbmdPcmRlcjogSUQhXG4gICAgJHByb2R1Y3RzOiBbSUQhXSFcbiAgICAkYnJhbmNoOiBJRFxuICAgICRxdHlzOiBbSW50IV0hXG4gICkge1xuICAgIHVwZGF0ZU91dGNvbWluZ09yZGVyUHJvZHVjdChcbiAgICAgIGlucHV0OiB7XG4gICAgICAgIG91dGNvbWluZ09yZGVyOiAkb3V0Y29taW5nT3JkZXJcbiAgICAgICAgYnJhbmNoOiAkYnJhbmNoXG4gICAgICAgIHByb2R1Y3RzOiAkcHJvZHVjdHNcbiAgICAgICAgcXR5czogJHF0eXNcbiAgICAgIH1cbiAgICApIHtcbiAgICAgIHRvdGFsXG4gICAgfVxuICB9XG4iXSk7CgogIF90ZW1wbGF0ZU9iamVjdDYzID0gZnVuY3Rpb24gX3RlbXBsYXRlT2JqZWN0NjMoKSB7CiAgICByZXR1cm4gZGF0YTsKICB9OwoKICByZXR1cm4gZGF0YTsKfQoKZnVuY3Rpb24gX3RlbXBsYXRlT2JqZWN0NjIoKSB7CiAgdmFyIGRhdGEgPSBfdGFnZ2VkVGVtcGxhdGVMaXRlcmFsKFsiXG4gIG11dGF0aW9uKFxuICAgICRvdXRjb21pbmdPcmRlcjogSUQhXG4gICAgJHByb2R1Y3RzOiBbSUQhXSFcbiAgICAkYnJhbmNoOiBJRFxuICAgICRxdHlzOiBbSW50IV0hXG4gICkge1xuICAgIGNyZWF0ZU91dGNvbWluZ09yZGVyUHJvZHVjdChcbiAgICAgIGlucHV0OiB7XG4gICAgICAgIG91dGNvbWluZ09yZGVyOiAkb3V0Y29taW5nT3JkZXJcbiAgICAgICAgYnJhbmNoOiAkYnJhbmNoXG4gICAgICAgIHByb2R1Y3RzOiAkcHJvZHVjdHNcbiAgICAgICAgcXR5czogJHF0eXNcbiAgICAgIH1cbiAgICApIHtcbiAgICAgIHRvdGFsXG4gICAgfVxuICB9XG4iXSk7CgogIF90ZW1wbGF0ZU9iamVjdDYyID0gZnVuY3Rpb24gX3RlbXBsYXRlT2JqZWN0NjIoKSB7CiAgICByZXR1cm4gZGF0YTsKICB9OwoKICByZXR1cm4gZGF0YTsKfQoKZnVuY3Rpb24gX3RlbXBsYXRlT2JqZWN0NjEoKSB7CiAgdmFyIGRhdGEgPSBfdGFnZ2VkVGVtcGxhdGVMaXRlcmFsKFsiXG4gIG11dGF0aW9uKFxuICAgICRjcmVhdGVkX2J5OiBJRCFcbiAgICAkbm90ZTogU3RyaW5nXG4gICAgJHBheW1lbnQ6IFN0cmluZyFcbiAgICAkZGlzY291bnQ6IEludFxuICAgICR0b3RhbDogSW50IVxuICAgICRjdXN0b21lcjogSURcbiAgICAkcHJvZHVjdHM6IFtJRCFdIVxuICAgICRicmFuY2g6IElEXG4gICAgJHF0eXM6IFtJbnQhXSFcbiAgKSB7XG4gICAgY3JlYXRlT3JkZXJQcm9kdWN0KFxuICAgICAgaW5wdXQ6IHtcbiAgICAgICAgYnJhbmNoOiAkYnJhbmNoXG4gICAgICAgIHByb2R1Y3RzOiAkcHJvZHVjdHNcbiAgICAgICAgcXR5czogJHF0eXNcbiAgICAgICAgY3JlYXRlZF9ieTogJGNyZWF0ZWRfYnlcbiAgICAgICAgbm90ZTogJG5vdGVcbiAgICAgICAgcGF5bWVudDogJHBheW1lbnRcbiAgICAgICAgZGlzY291bnQ6ICRkaXNjb3VudFxuICAgICAgICB0b3RhbDogJHRvdGFsXG4gICAgICAgIGN1c3RvbWVyX2lkOiAkY3VzdG9tZXJcbiAgICAgIH1cbiAgICApIHtcbiAgICAgIHRvdGFsXG4gICAgfVxuICB9XG4iXSk7CgogIF90ZW1wbGF0ZU9iamVjdDYxID0gZnVuY3Rpb24gX3RlbXBsYXRlT2JqZWN0NjEoKSB7CiAgICByZXR1cm4gZGF0YTsKICB9OwoKICByZXR1cm4gZGF0YTsKfQoKZnVuY3Rpb24gX3RlbXBsYXRlT2JqZWN0NjAoKSB7CiAgdmFyIGRhdGEgPSBfdGFnZ2VkVGVtcGxhdGVMaXRlcmFsKFsiXG4gIG11dGF0aW9uKCRpZDogW0lEIV0hKSB7XG4gICAgZGVsZXRlU3VwcGxpZXJzKGlkOiAkaWQpIHtcbiAgICAgIG5hbWVcbiAgICB9XG4gIH1cbiJdKTsKCiAgX3RlbXBsYXRlT2JqZWN0NjAgPSBmdW5jdGlvbiBfdGVtcGxhdGVPYmplY3Q2MCgpIHsKICAgIHJldHVybiBkYXRhOwogIH07CgogIHJldHVybiBkYXRhOwp9CgpmdW5jdGlvbiBfdGVtcGxhdGVPYmplY3Q1OSgpIHsKICB2YXIgZGF0YSA9IF90YWdnZWRUZW1wbGF0ZUxpdGVyYWwoWyJcbiAgbXV0YXRpb24oJGlkOiBJRCEpIHtcbiAgICBkZWxldGVFbXBsb3llZShpZDogJGlkKSB7XG4gICAgICBuYW1lXG4gICAgfVxuICB9XG4iXSk7CgogIF90ZW1wbGF0ZU9iamVjdDU5ID0gZnVuY3Rpb24gX3RlbXBsYXRlT2JqZWN0NTkoKSB7CiAgICByZXR1cm4gZGF0YTsKICB9OwoKICByZXR1cm4gZGF0YTsKfQoKZnVuY3Rpb24gX3RlbXBsYXRlT2JqZWN0NTgoKSB7CiAgdmFyIGRhdGEgPSBfdGFnZ2VkVGVtcGxhdGVMaXRlcmFsKFsiXG4gIG11dGF0aW9uKCRpZDogW0lEIV0hKSB7XG4gICAgZGVsZXRlRW1wbG95ZWVzKGlkOiAkaWQpIHtcbiAgICAgIG5hbWVcbiAgICB9XG4gIH1cbiJdKTsKCiAgX3RlbXBsYXRlT2JqZWN0NTggPSBmdW5jdGlvbiBfdGVtcGxhdGVPYmplY3Q1OCgpIHsKICAgIHJldHVybiBkYXRhOwogIH07CgogIHJldHVybiBkYXRhOwp9CgpmdW5jdGlvbiBfdGVtcGxhdGVPYmplY3Q1NygpIHsKICB2YXIgZGF0YSA9IF90YWdnZWRUZW1wbGF0ZUxpdGVyYWwoWyJcbiAgbXV0YXRpb24oJGlkOiBJRCEpIHtcbiAgICBkZWxldGVUcmFuc2FjdGlvbihpZDogJGlkKSB7XG4gICAgICBpZFxuICAgIH1cbiAgfVxuIl0pOwoKICBfdGVtcGxhdGVPYmplY3Q1NyA9IGZ1bmN0aW9uIF90ZW1wbGF0ZU9iamVjdDU3KCkgewogICAgcmV0dXJuIGRhdGE7CiAgfTsKCiAgcmV0dXJuIGRhdGE7Cn0KCmZ1bmN0aW9uIF90ZW1wbGF0ZU9iamVjdDU2KCkgewogIHZhciBkYXRhID0gX3RhZ2dlZFRlbXBsYXRlTGl0ZXJhbChbIlxuICBtdXRhdGlvbigkaWQ6IFtJRCFdISkge1xuICAgIGRlbGV0ZVRyYW5zYWN0aW9ucyhpZDogJGlkKSB7XG4gICAgICBpZFxuICAgIH1cbiAgfVxuIl0pOwoKICBfdGVtcGxhdGVPYmplY3Q1NiA9IGZ1bmN0aW9uIF90ZW1wbGF0ZU9iamVjdDU2KCkgewogICAgcmV0dXJuIGRhdGE7CiAgfTsKCiAgcmV0dXJuIGRhdGE7Cn0KCmZ1bmN0aW9uIF90ZW1wbGF0ZU9iamVjdDU1KCkgewogIHZhciBkYXRhID0gX3RhZ2dlZFRlbXBsYXRlTGl0ZXJhbChbIlxuICBtdXRhdGlvbigkaWQ6IElEISkge1xuICAgIGRlbGV0ZU9yZGVyKGlkOiAkaWQpIHtcbiAgICAgIGlkXG4gICAgfVxuICB9XG4iXSk7CgogIF90ZW1wbGF0ZU9iamVjdDU1ID0gZnVuY3Rpb24gX3RlbXBsYXRlT2JqZWN0NTUoKSB7CiAgICByZXR1cm4gZGF0YTsKICB9OwoKICByZXR1cm4gZGF0YTsKfQoKZnVuY3Rpb24gX3RlbXBsYXRlT2JqZWN0NTQoKSB7CiAgdmFyIGRhdGEgPSBfdGFnZ2VkVGVtcGxhdGVMaXRlcmFsKFsiXG4gIG11dGF0aW9uKCRpZDogW0lEIV0hKSB7XG4gICAgZGVsZXRlT3JkZXJzKGlkOiAkaWQpIHtcbiAgICAgIGlkXG4gICAgfVxuICB9XG4iXSk7CgogIF90ZW1wbGF0ZU9iamVjdDU0ID0gZnVuY3Rpb24gX3RlbXBsYXRlT2JqZWN0NTQoKSB7CiAgICByZXR1cm4gZGF0YTsKICB9OwoKICByZXR1cm4gZGF0YTsKfQoKZnVuY3Rpb24gX3RlbXBsYXRlT2JqZWN0NTMoKSB7CiAgdmFyIGRhdGEgPSBfdGFnZ2VkVGVtcGxhdGVMaXRlcmFsKFsiXG4gIG11dGF0aW9uKCRpZHM6IFtJRCFdISwgJHRhYmxlOiBTdHJpbmchKSB7XG4gICAgZGVsZXRlUmVjb3JkcyhpZHM6ICRpZHMsIHRhYmxlOiAkdGFibGUpXG4gIH1cbiJdKTsKCiAgX3RlbXBsYXRlT2JqZWN0NTMgPSBmdW5jdGlvbiBfdGVtcGxhdGVPYmplY3Q1MygpIHsKICAgIHJldHVybiBkYXRhOwogIH07CgogIHJldHVybiBkYXRhOwp9CgpmdW5jdGlvbiBfdGVtcGxhdGVPYmplY3Q1MigpIHsKICB2YXIgZGF0YSA9IF90YWdnZWRUZW1wbGF0ZUxpdGVyYWwoWyJcbiAgbXV0YXRpb24oJGlkOiBJRCEsICR0YWJsZTogU3RyaW5nISkge1xuICAgIGRlbGV0ZVJlY29yZChpZDogJGlkLCB0YWJsZTogJHRhYmxlKVxuICB9XG4iXSk7CgogIF90ZW1wbGF0ZU9iamVjdDUyID0gZnVuY3Rpb24gX3RlbXBsYXRlT2JqZWN0NTIoKSB7CiAgICByZXR1cm4gZGF0YTsKICB9OwoKICByZXR1cm4gZGF0YTsKfQoKZnVuY3Rpb24gX3RlbXBsYXRlT2JqZWN0NTEoKSB7CiAgdmFyIGRhdGEgPSBfdGFnZ2VkVGVtcGxhdGVMaXRlcmFsKFsiXG4gIG11dGF0aW9uKCRpZDogSUQhKSB7XG4gICAgZGVsZXRlUm9sZShpZDogJGlkKSB7XG4gICAgICBuYW1lXG4gICAgfVxuICB9XG4iXSk7CgogIF90ZW1wbGF0ZU9iamVjdDUxID0gZnVuY3Rpb24gX3RlbXBsYXRlT2JqZWN0NTEoKSB7CiAgICByZXR1cm4gZGF0YTsKICB9OwoKICByZXR1cm4gZGF0YTsKfQoKZnVuY3Rpb24gX3RlbXBsYXRlT2JqZWN0NTAoKSB7CiAgdmFyIGRhdGEgPSBfdGFnZ2VkVGVtcGxhdGVMaXRlcmFsKFsiXG4gIG11dGF0aW9uKCRpZDogSUQhKSB7XG4gICAgcG9zRGF0YShpZDogJGlkKSB7XG4gICAgICB0YXJnZXRcbiAgICAgIG92ZXJcbiAgICAgIHJlc3RcbiAgICAgIHNhbGVzXG4gICAgfVxuICB9XG4iXSk7CgogIF90ZW1wbGF0ZU9iamVjdDUwID0gZnVuY3Rpb24gX3RlbXBsYXRlT2JqZWN0NTAoKSB7CiAgICByZXR1cm4gZGF0YTsKICB9OwoKICByZXR1cm4gZGF0YTsKfQoKZnVuY3Rpb24gX3RlbXBsYXRlT2JqZWN0NDkoKSB7CiAgdmFyIGRhdGEgPSBfdGFnZ2VkVGVtcGxhdGVMaXRlcmFsKFsiXG4gIG11dGF0aW9uKCRpZDogW0lEIV0hKSB7XG4gICAgZGVsZXRlUm9sZXMoaWQ6ICRpZCkge1xuICAgICAgbmFtZVxuICAgIH1cbiAgfVxuIl0pOwoKICBfdGVtcGxhdGVPYmplY3Q0OSA9IGZ1bmN0aW9uIF90ZW1wbGF0ZU9iamVjdDQ5KCkgewogICAgcmV0dXJuIGRhdGE7CiAgfTsKCiAgcmV0dXJuIGRhdGE7Cn0KCmZ1bmN0aW9uIF90ZW1wbGF0ZU9iamVjdDQ4KCkgewogIHZhciBkYXRhID0gX3RhZ2dlZFRlbXBsYXRlTGl0ZXJhbChbIlxuICBtdXRhdGlvbihcbiAgICAkaWQ6IElEIVxuICAgICRuYW1lOiBTdHJpbmchXG4gICAgJHNsdWc6IFN0cmluZyFcbiAgICAkcGVybWlzc2lvbnM6IFtJRCFdIVxuICAgICR1c2VyczogW0lEIV0hXG4gICAgJGRlc2NyaXB0aW9uOiBTdHJpbmdcbiAgKSB7XG4gICAgdXBkYXRlUm9sZShcbiAgICAgIGlucHV0OiB7XG4gICAgICAgIGlkOiAkaWRcbiAgICAgICAgbmFtZTogJG5hbWVcbiAgICAgICAgc2x1ZzogJHNsdWdcbiAgICAgICAgcGVybWlzc2lvbnM6ICRwZXJtaXNzaW9uc1xuICAgICAgICBsZXZlbDogMVxuICAgICAgICB1c2VyczogJHVzZXJzXG4gICAgICAgIGRlc2NyaXB0aW9uOiAkZGVzY3JpcHRpb25cbiAgICAgIH1cbiAgICApIHtcbiAgICAgIGlkXG4gICAgICBuYW1lXG4gICAgfVxuICB9XG4iXSk7CgogIF90ZW1wbGF0ZU9iamVjdDQ4ID0gZnVuY3Rpb24gX3RlbXBsYXRlT2JqZWN0NDgoKSB7CiAgICByZXR1cm4gZGF0YTsKICB9OwoKICByZXR1cm4gZGF0YTsKfQoKZnVuY3Rpb24gX3RlbXBsYXRlT2JqZWN0NDcoKSB7CiAgdmFyIGRhdGEgPSBfdGFnZ2VkVGVtcGxhdGVMaXRlcmFsKFsiXG4gIG11dGF0aW9uKCRub3RlOiBTdHJpbmchLCAkZGF0ZTogRGF0ZSEsICRicmFuY2g6IElELCAkaWQ6IElEISwgJHZhbHVlOiBJbnQhKSB7XG4gICAgdXBkYXRlRXhwZW5zZShcbiAgICAgIGlucHV0OiB7XG4gICAgICAgIGRhdGU6ICRkYXRlXG4gICAgICAgIGlkOiAkaWRcbiAgICAgICAgbm90ZTogJG5vdGVcbiAgICAgICAgYnJhbmNoX2lkOiAkYnJhbmNoXG4gICAgICAgIHZhbHVlOiAkdmFsdWVcbiAgICAgIH1cbiAgICApIHtcbiAgICAgIGlkXG4gICAgICB2YWx1ZVxuICAgIH1cbiAgfVxuIl0pOwoKICBfdGVtcGxhdGVPYmplY3Q0NyA9IGZ1bmN0aW9uIF90ZW1wbGF0ZU9iamVjdDQ3KCkgewogICAgcmV0dXJuIGRhdGE7CiAgfTsKCiAgcmV0dXJuIGRhdGE7Cn0KCmZ1bmN0aW9uIF90ZW1wbGF0ZU9iamVjdDQ2KCkgewogIHZhciBkYXRhID0gX3RhZ2dlZFRlbXBsYXRlTGl0ZXJhbChbIlxuICBtdXRhdGlvbihcbiAgICAkbmFtZTogU3RyaW5nIVxuICAgICRpZDogSUQhXG4gICAgJGJyYW5jaDogSURcbiAgICAkdGFyZ2V0OiBJbnRcbiAgICAkc2FsYXJ5OiBJbnQhXG4gICAgJGVtYWlsOiBTdHJpbmdcbiAgICAkcGhvbmU6IFN0cmluZ1xuICApIHtcbiAgICB1cGRhdGVFbXBsb3llZShcbiAgICAgIGlucHV0OiB7XG4gICAgICAgIGlkOiAkaWRcbiAgICAgICAgbmFtZTogJG5hbWVcbiAgICAgICAgdGFyZ2V0OiAkdGFyZ2V0XG4gICAgICAgIGJyYW5jaF9pZDogJGJyYW5jaFxuICAgICAgICBzYWxhcnk6ICRzYWxhcnlcbiAgICAgICAgZW1haWw6ICRlbWFpbFxuICAgICAgICBwaG9uZTogJHBob25lXG4gICAgICB9XG4gICAgKSB7XG4gICAgICBpZFxuICAgICAgbmFtZVxuICAgIH1cbiAgfVxuIl0pOwoKICBfdGVtcGxhdGVPYmplY3Q0NiA9IGZ1bmN0aW9uIF90ZW1wbGF0ZU9iamVjdDQ2KCkgewogICAgcmV0dXJuIGRhdGE7CiAgfTsKCiAgcmV0dXJuIGRhdGE7Cn0KCmZ1bmN0aW9uIF90ZW1wbGF0ZU9iamVjdDQ1KCkgewogIHZhciBkYXRhID0gX3RhZ2dlZFRlbXBsYXRlTGl0ZXJhbChbIlxuICBtdXRhdGlvbihcbiAgICAkbmFtZTogU3RyaW5nIVxuICAgICRicmFuY2g6IElEXG4gICAgJHRhcmdldDogSW50XG4gICAgJHNhbGFyeTogSW50IVxuICAgICRlbWFpbDogU3RyaW5nXG4gICAgJHBob25lOiBTdHJpbmdcbiAgKSB7XG4gICAgY3JlYXRlRW1wbG95ZWUoXG4gICAgICBpbnB1dDoge1xuICAgICAgICBuYW1lOiAkbmFtZVxuICAgICAgICB0YXJnZXQ6ICR0YXJnZXRcbiAgICAgICAgYnJhbmNoX2lkOiAkYnJhbmNoXG4gICAgICAgIHNhbGFyeTogJHNhbGFyeVxuICAgICAgICBlbWFpbDogJGVtYWlsXG4gICAgICAgIHBob25lOiAkcGhvbmVcbiAgICAgIH1cbiAgICApIHtcbiAgICAgIGlkXG4gICAgICBuYW1lXG4gICAgfVxuICB9XG4iXSk7CgogIF90ZW1wbGF0ZU9iamVjdDQ1ID0gZnVuY3Rpb24gX3RlbXBsYXRlT2JqZWN0NDUoKSB7CiAgICByZXR1cm4gZGF0YTsKICB9OwoKICByZXR1cm4gZGF0YTsKfQoKZnVuY3Rpb24gX3RlbXBsYXRlT2JqZWN0NDQoKSB7CiAgdmFyIGRhdGEgPSBfdGFnZ2VkVGVtcGxhdGVMaXRlcmFsKFsiXG4gIG11dGF0aW9uKCRub3RlOiBTdHJpbmchLCAkZGF0ZTogRGF0ZSEsICRicmFuY2g6IElELCAkdmFsdWU6IEludCEpIHtcbiAgICBjcmVhdGVFeHBlbnNlKFxuICAgICAgaW5wdXQ6IHsgZGF0ZTogJGRhdGUsIG5vdGU6ICRub3RlLCBicmFuY2hfaWQ6ICRicmFuY2gsIHZhbHVlOiAkdmFsdWUgfVxuICAgICkge1xuICAgICAgaWRcbiAgICB9XG4gIH1cbiJdKTsKCiAgX3RlbXBsYXRlT2JqZWN0NDQgPSBmdW5jdGlvbiBfdGVtcGxhdGVPYmplY3Q0NCgpIHsKICAgIHJldHVybiBkYXRhOwogIH07CgogIHJldHVybiBkYXRhOwp9CgpmdW5jdGlvbiBfdGVtcGxhdGVPYmplY3Q0MygpIHsKICB2YXIgZGF0YSA9IF90YWdnZWRUZW1wbGF0ZUxpdGVyYWwoWyJcbiAgbXV0YXRpb24oXG4gICAgJGlkOiBJRCFcbiAgICAkbmFtZTogU3RyaW5nIVxuICAgICRpc2JuOiBTdHJpbmchXG4gICAgJHB1cmNoYXNlZF9wcmljZTogSW50IVxuICAgICRwcmljZTogSW50IVxuICApIHtcbiAgICB1cGRhdGVQcm9kdWN0KFxuICAgICAgaW5wdXQ6IHtcbiAgICAgICAgaWQ6ICRpZFxuICAgICAgICBuYW1lOiAkbmFtZVxuICAgICAgICBpc2JuOiAkaXNiblxuICAgICAgICBwdXJjaGFzZWRfcHJpY2U6ICRwdXJjaGFzZWRfcHJpY2VcbiAgICAgICAgcHJpY2U6ICRwcmljZVxuICAgICAgfVxuICAgICkge1xuICAgICAgaWRcbiAgICAgIG5hbWVcbiAgICB9XG4gIH1cbiJdKTsKCiAgX3RlbXBsYXRlT2JqZWN0NDMgPSBmdW5jdGlvbiBfdGVtcGxhdGVPYmplY3Q0MygpIHsKICAgIHJldHVybiBkYXRhOwogIH07CgogIHJldHVybiBkYXRhOwp9CgpmdW5jdGlvbiBfdGVtcGxhdGVPYmplY3Q0MigpIHsKICB2YXIgZGF0YSA9IF90YWdnZWRUZW1wbGF0ZUxpdGVyYWwoWyJcbiAgbXV0YXRpb24oJHByb2R1Y3Q6IElEISwgJHF0eTogSW50ISwgJGJyYW5jaDogSUQpIHtcbiAgICBjcmVhdGVTdG9jayhcbiAgICAgIGlucHV0OiB7IHByb2R1Y3RfaWQ6ICRwcm9kdWN0LCBxdHk6ICRxdHksIGJyYW5jaF9pZDogJGJyYW5jaCB9XG4gICAgKSB7XG4gICAgICBpZFxuICAgIH1cbiAgfVxuIl0pOwoKICBfdGVtcGxhdGVPYmplY3Q0MiA9IGZ1bmN0aW9uIF90ZW1wbGF0ZU9iamVjdDQyKCkgewogICAgcmV0dXJuIGRhdGE7CiAgfTsKCiAgcmV0dXJuIGRhdGE7Cn0KCmZ1bmN0aW9uIF90ZW1wbGF0ZU9iamVjdDQxKCkgewogIHZhciBkYXRhID0gX3RhZ2dlZFRlbXBsYXRlTGl0ZXJhbChbIlxuICBtdXRhdGlvbigkYnJhbmNoOiBJRCEsICRpZDogSUQhLCAkYXBwcm92ZWQ6IEJvb2xlYW4pIHtcbiAgICB1cGRhdGVUcmFuc2FjdGlvbihcbiAgICAgIGlucHV0OiB7IGlkOiAkaWQsIGJyYW5jaF9pZDogJGJyYW5jaCwgYXBwcm92ZWQ6ICRhcHByb3ZlZCB9XG4gICAgKSB7XG4gICAgICBpZFxuICAgIH1cbiAgfVxuIl0pOwoKICBfdGVtcGxhdGVPYmplY3Q0MSA9IGZ1bmN0aW9uIF90ZW1wbGF0ZU9iamVjdDQxKCkgewogICAgcmV0dXJuIGRhdGE7CiAgfTsKCiAgcmV0dXJuIGRhdGE7Cn0KCmZ1bmN0aW9uIF90ZW1wbGF0ZU9iamVjdDQwKCkgewogIHZhciBkYXRhID0gX3RhZ2dlZFRlbXBsYXRlTGl0ZXJhbChbIlxuICBtdXRhdGlvbigkYnJhbmNoOiBJRCEpIHtcbiAgICBjcmVhdGVUcmFuc2FjdGlvbihpbnB1dDogeyBicmFuY2hfaWQ6ICRicmFuY2ggfSkge1xuICAgICAgaWRcbiAgICB9XG4gIH1cbiJdKTsKCiAgX3RlbXBsYXRlT2JqZWN0NDAgPSBmdW5jdGlvbiBfdGVtcGxhdGVPYmplY3Q0MCgpIHsKICAgIHJldHVybiBkYXRhOwogIH07CgogIHJldHVybiBkYXRhOwp9CgpmdW5jdGlvbiBfdGVtcGxhdGVPYmplY3QzOSgpIHsKICB2YXIgZGF0YSA9IF90YWdnZWRUZW1wbGF0ZUxpdGVyYWwoWyJcbiAgbXV0YXRpb24oXG4gICAgJG5hbWU6IFN0cmluZyFcbiAgICAkaXNibjogU3RyaW5nIVxuICAgICRwdXJjaGFzZWRfcHJpY2U6IEludCFcbiAgICAkcHJpY2U6IEludCFcbiAgKSB7XG4gICAgY3JlYXRlUHJvZHVjdChcbiAgICAgIGlucHV0OiB7XG4gICAgICAgIG5hbWU6ICRuYW1lXG4gICAgICAgIGlzYm46ICRpc2JuXG4gICAgICAgIHB1cmNoYXNlZF9wcmljZTogJHB1cmNoYXNlZF9wcmljZVxuICAgICAgICBwcmljZTogJHByaWNlXG4gICAgICB9XG4gICAgKSB7XG4gICAgICBpZFxuICAgICAgbmFtZVxuICAgIH1cbiAgfVxuIl0pOwoKICBfdGVtcGxhdGVPYmplY3QzOSA9IGZ1bmN0aW9uIF90ZW1wbGF0ZU9iamVjdDM5KCkgewogICAgcmV0dXJuIGRhdGE7CiAgfTsKCiAgcmV0dXJuIGRhdGE7Cn0KCmZ1bmN0aW9uIF90ZW1wbGF0ZU9iamVjdDM4KCkgewogIHZhciBkYXRhID0gX3RhZ2dlZFRlbXBsYXRlTGl0ZXJhbChbIlxuICBtdXRhdGlvbihcbiAgICAkaWQ6IElEIVxuICAgICRuYW1lOiBTdHJpbmchXG4gICAgJGVtYWlsOiBTdHJpbmdcbiAgICAkaW50ZXJzdHM6IFN0cmluZ1xuICAgICRicmFuY2g6IEludFxuICAgICRwaG9uZTogU3RyaW5nXG4gICkge1xuICAgIHVwZGF0ZUN1c3RvbWVyKFxuICAgICAgaW5wdXQ6IHtcbiAgICAgICAgaWQ6ICRpZFxuICAgICAgICBuYW1lOiAkbmFtZVxuICAgICAgICBlbWFpbDogJGVtYWlsXG4gICAgICAgIGludGVyc3RzOiAkaW50ZXJzdHNcbiAgICAgICAgYnJhbmNoX2lkOiAkYnJhbmNoXG4gICAgICAgIHBob25lOiAkcGhvbmVcbiAgICAgIH1cbiAgICApIHtcbiAgICAgIGlkXG4gICAgICBuYW1lXG4gICAgfVxuICB9XG4iXSk7CgogIF90ZW1wbGF0ZU9iamVjdDM4ID0gZnVuY3Rpb24gX3RlbXBsYXRlT2JqZWN0MzgoKSB7CiAgICByZXR1cm4gZGF0YTsKICB9OwoKICByZXR1cm4gZGF0YTsKfQoKZnVuY3Rpb24gX3RlbXBsYXRlT2JqZWN0MzcoKSB7CiAgdmFyIGRhdGEgPSBfdGFnZ2VkVGVtcGxhdGVMaXRlcmFsKFsiXG4gIG11dGF0aW9uKFxuICAgICRuYW1lOiBTdHJpbmchXG4gICAgJGVtYWlsOiBTdHJpbmdcbiAgICAkaW50ZXJzdHM6IFN0cmluZ1xuICAgICRicmFuY2g6IEludFxuICAgICRwaG9uZTogU3RyaW5nXG4gICkge1xuICAgIGNyZWF0ZUN1c3RvbWVyKFxuICAgICAgaW5wdXQ6IHtcbiAgICAgICAgbmFtZTogJG5hbWVcbiAgICAgICAgZW1haWw6ICRlbWFpbFxuICAgICAgICBpbnRlcnN0czogJGludGVyc3RzXG4gICAgICAgIGJyYW5jaF9pZDogJGJyYW5jaFxuICAgICAgICBwaG9uZTogJHBob25lXG4gICAgICB9XG4gICAgKSB7XG4gICAgICBpZFxuICAgICAgbmFtZVxuICAgIH1cbiAgfVxuIl0pOwoKICBfdGVtcGxhdGVPYmplY3QzNyA9IGZ1bmN0aW9uIF90ZW1wbGF0ZU9iamVjdDM3KCkgewogICAgcmV0dXJuIGRhdGE7CiAgfTsKCiAgcmV0dXJuIGRhdGE7Cn0KCmZ1bmN0aW9uIF90ZW1wbGF0ZU9iamVjdDM2KCkgewogIHZhciBkYXRhID0gX3RhZ2dlZFRlbXBsYXRlTGl0ZXJhbChbIlxuICBtdXRhdGlvbigkaWQ6IElEISwgJG5hbWU6IFN0cmluZyEsICRlbWFpbDogU3RyaW5nLCAkcGhvbmU6IFN0cmluZykge1xuICAgIHVwZGF0ZVN1cHBsaWVyKFxuICAgICAgaW5wdXQ6IHsgaWQ6ICRpZCwgbmFtZTogJG5hbWUsIGVtYWlsOiAkZW1haWwsIHBob25lOiAkcGhvbmUgfVxuICAgICkge1xuICAgICAgaWRcbiAgICAgIG5hbWVcbiAgICB9XG4gIH1cbiJdKTsKCiAgX3RlbXBsYXRlT2JqZWN0MzYgPSBmdW5jdGlvbiBfdGVtcGxhdGVPYmplY3QzNigpIHsKICAgIHJldHVybiBkYXRhOwogIH07CgogIHJldHVybiBkYXRhOwp9CgpmdW5jdGlvbiBfdGVtcGxhdGVPYmplY3QzNSgpIHsKICB2YXIgZGF0YSA9IF90YWdnZWRUZW1wbGF0ZUxpdGVyYWwoWyJcbiAgbXV0YXRpb24oJG5hbWU6IFN0cmluZyEsICRlbWFpbDogU3RyaW5nLCAkcGhvbmU6IFN0cmluZykge1xuICAgIGNyZWF0ZVN1cHBsaWVyKGlucHV0OiB7IG5hbWU6ICRuYW1lLCBlbWFpbDogJGVtYWlsLCBwaG9uZTogJHBob25lIH0pIHtcbiAgICAgIGlkXG4gICAgICBuYW1lXG4gICAgfVxuICB9XG4iXSk7CgogIF90ZW1wbGF0ZU9iamVjdDM1ID0gZnVuY3Rpb24gX3RlbXBsYXRlT2JqZWN0MzUoKSB7CiAgICByZXR1cm4gZGF0YTsKICB9OwoKICByZXR1cm4gZGF0YTsKfQoKZnVuY3Rpb24gX3RlbXBsYXRlT2JqZWN0MzQoKSB7CiAgdmFyIGRhdGEgPSBfdGFnZ2VkVGVtcGxhdGVMaXRlcmFsKFsiXG4gIG11dGF0aW9uKCRkaXNjb3VudDogSUQhLCAkcHJvZHVjdHM6IFtJRCFdISkge1xuICAgIGNyZWF0ZURpc2NvdW50UHJvZHVjdChpbnB1dDogeyBkaXNjb3VudDogJGRpc2NvdW50LCBwcm9kdWN0czogJHByb2R1Y3RzIH0pIHtcbiAgICAgIGlkXG4gICAgICB0aXRsZVxuICAgIH1cbiAgfVxuIl0pOwoKICBfdGVtcGxhdGVPYmplY3QzNCA9IGZ1bmN0aW9uIF90ZW1wbGF0ZU9iamVjdDM0KCkgewogICAgcmV0dXJuIGRhdGE7CiAgfTsKCiAgcmV0dXJuIGRhdGE7Cn0KCmZ1bmN0aW9uIF90ZW1wbGF0ZU9iamVjdDMzKCkgewogIHZhciBkYXRhID0gX3RhZ2dlZFRlbXBsYXRlTGl0ZXJhbChbIlxuICBtdXRhdGlvbihcbiAgICAkdHlwZTogU3RyaW5nIVxuICAgICR2YWx1ZTogSW50XG4gICAgJHRpdGxlOiBTdHJpbmdcbiAgICAkcGVyY2VudDogSW50XG4gICAgJGJyYW5jaDogSURcbiAgKSB7XG4gICAgY3JlYXRlRGlzY291bnQoXG4gICAgICBpbnB1dDoge1xuICAgICAgICB0eXBlOiAkdHlwZVxuICAgICAgICB2YWx1ZTogJHZhbHVlXG4gICAgICAgIHRpdGxlOiAkdGl0bGVcbiAgICAgICAgcGVyY2VudDogJHBlcmNlbnRcbiAgICAgICAgYnJhbmNoX2lkOiAkYnJhbmNoXG4gICAgICB9XG4gICAgKSB7XG4gICAgICBpZFxuICAgICAgdGl0bGVcbiAgICB9XG4gIH1cbiJdKTsKCiAgX3RlbXBsYXRlT2JqZWN0MzMgPSBmdW5jdGlvbiBfdGVtcGxhdGVPYmplY3QzMygpIHsKICAgIHJldHVybiBkYXRhOwogIH07CgogIHJldHVybiBkYXRhOwp9CgpmdW5jdGlvbiBfdGVtcGxhdGVPYmplY3QzMigpIHsKICB2YXIgZGF0YSA9IF90YWdnZWRUZW1wbGF0ZUxpdGVyYWwoWyJcbiAgbXV0YXRpb24oXG4gICAgJGlkOiBJRCFcbiAgICAkdHlwZTogU3RyaW5nIVxuICAgICR2YWx1ZTogSW50XG4gICAgJHRpdGxlOiBTdHJpbmdcbiAgICAkcGVyY2VudDogSW50XG4gICAgJGJyYW5jaDogSURcbiAgKSB7XG4gICAgdXBkYXRlRGlzY291bnQoXG4gICAgICBpbnB1dDoge1xuICAgICAgICBpZDogJGlkXG4gICAgICAgIHR5cGU6ICR0eXBlXG4gICAgICAgIHZhbHVlOiAkdmFsdWVcbiAgICAgICAgdGl0bGU6ICR0aXRsZVxuICAgICAgICBwZXJjZW50OiAkcGVyY2VudFxuICAgICAgICBicmFuY2hfaWQ6ICRicmFuY2hcbiAgICAgIH1cbiAgICApIHtcbiAgICAgIGlkXG4gICAgICB0aXRsZVxuICAgIH1cbiAgfVxuIl0pOwoKICBfdGVtcGxhdGVPYmplY3QzMiA9IGZ1bmN0aW9uIF90ZW1wbGF0ZU9iamVjdDMyKCkgewogICAgcmV0dXJuIGRhdGE7CiAgfTsKCiAgcmV0dXJuIGRhdGE7Cn0KCmZ1bmN0aW9uIF90ZW1wbGF0ZU9iamVjdDMxKCkgewogIHZhciBkYXRhID0gX3RhZ2dlZFRlbXBsYXRlTGl0ZXJhbChbIlxuICBtdXRhdGlvbihcbiAgICAkaWQ6IElEIVxuICAgICRuYW1lOiBTdHJpbmchXG4gICAgJGVtYWlsOiBTdHJpbmchXG4gICAgJGFkZHJlc3M6IFN0cmluZ1xuICAgICRwaG9uZTogU3RyaW5nXG4gICAgJHJlbnQ6IEludFxuICAgICRiaWxsczogSW50XG4gICkge1xuICAgIHVwZGF0ZUJyYW5jaChcbiAgICAgIGlucHV0OiB7XG4gICAgICAgIGlkOiAkaWRcbiAgICAgICAgbmFtZTogJG5hbWVcbiAgICAgICAgZW1haWw6ICRlbWFpbFxuICAgICAgICBhZGRyZXNzOiAkYWRkcmVzc1xuICAgICAgICBwaG9uZTogJHBob25lXG4gICAgICAgIHJlbnQ6ICRyZW50XG4gICAgICAgIGJpbGxzOiAkYmlsbHNcbiAgICAgIH1cbiAgICApIHtcbiAgICAgIGlkXG4gICAgICBuYW1lXG4gICAgfVxuICB9XG4iXSk7CgogIF90ZW1wbGF0ZU9iamVjdDMxID0gZnVuY3Rpb24gX3RlbXBsYXRlT2JqZWN0MzEoKSB7CiAgICByZXR1cm4gZGF0YTsKICB9OwoKICByZXR1cm4gZGF0YTsKfQoKZnVuY3Rpb24gX3RlbXBsYXRlT2JqZWN0MzAoKSB7CiAgdmFyIGRhdGEgPSBfdGFnZ2VkVGVtcGxhdGVMaXRlcmFsKFsiXG4gIG11dGF0aW9uKCRicmFuY2g6IElEISwgJGJhbGFuY2U6IEludCEpIHtcbiAgICBjcmVhdGVCYWxhbmNlKGlucHV0OiB7IGJyYW5jaF9pZDogJGJyYW5jaCwgYmFsYW5jZTogJGJhbGFuY2UgfSkge1xuICAgICAgaWRcbiAgICB9XG4gIH1cbiJdKTsKCiAgX3RlbXBsYXRlT2JqZWN0MzAgPSBmdW5jdGlvbiBfdGVtcGxhdGVPYmplY3QzMCgpIHsKICAgIHJldHVybiBkYXRhOwogIH07CgogIHJldHVybiBkYXRhOwp9CgpmdW5jdGlvbiBfdGVtcGxhdGVPYmplY3QyOSgpIHsKICB2YXIgZGF0YSA9IF90YWdnZWRUZW1wbGF0ZUxpdGVyYWwoWyJcbiAgbXV0YXRpb24oXG4gICAgJG5hbWU6IFN0cmluZyFcbiAgICAkZW1haWw6IFN0cmluZ1xuICAgICRhZGRyZXNzOiBTdHJpbmdcbiAgICAkcGhvbmU6IFN0cmluZ1xuICAgICRyZW50OiBJbnRcbiAgICAkYmlsbHM6IEludFxuICApIHtcbiAgICBjcmVhdGVCcmFuY2goXG4gICAgICBpbnB1dDoge1xuICAgICAgICBuYW1lOiAkbmFtZVxuICAgICAgICBlbWFpbDogJGVtYWlsXG4gICAgICAgIGFkZHJlc3M6ICRhZGRyZXNzXG4gICAgICAgIHBob25lOiAkcGhvbmVcbiAgICAgICAgcmVudDogJHJlbnRcbiAgICAgICAgYmlsbHM6ICRiaWxsc1xuICAgICAgfVxuICAgICkge1xuICAgICAgaWRcbiAgICAgIG5hbWVcbiAgICB9XG4gIH1cbiJdKTsKCiAgX3RlbXBsYXRlT2JqZWN0MjkgPSBmdW5jdGlvbiBfdGVtcGxhdGVPYmplY3QyOSgpIHsKICAgIHJldHVybiBkYXRhOwogIH07CgogIHJldHVybiBkYXRhOwp9CgpmdW5jdGlvbiBfdGVtcGxhdGVPYmplY3QyOCgpIHsKICB2YXIgZGF0YSA9IF90YWdnZWRUZW1wbGF0ZUxpdGVyYWwoWyJcbiAgbXV0YXRpb24oXG4gICAgJG5hbWU6IFN0cmluZyFcbiAgICAkc2x1ZzogU3RyaW5nIVxuICAgICRwZXJtaXNzaW9uczogW0lEIV0hXG4gICAgJHVzZXJzOiBbSUQhXVxuICAgICRkZXNjcmlwdGlvbjogU3RyaW5nXG4gICkge1xuICAgIGNyZWF0ZVJvbGUoXG4gICAgICBpbnB1dDoge1xuICAgICAgICBuYW1lOiAkbmFtZVxuICAgICAgICBzbHVnOiAkc2x1Z1xuICAgICAgICBwZXJtaXNzaW9uczogJHBlcm1pc3Npb25zXG4gICAgICAgIGxldmVsOiAxXG4gICAgICAgIHVzZXJzOiAkdXNlcnNcbiAgICAgICAgZGVzY3JpcHRpb246ICRkZXNjcmlwdGlvblxuICAgICAgfVxuICAgICkge1xuICAgICAgaWRcbiAgICAgIG5hbWVcbiAgICB9XG4gIH1cbiJdKTsKCiAgX3RlbXBsYXRlT2JqZWN0MjggPSBmdW5jdGlvbiBfdGVtcGxhdGVPYmplY3QyOCgpIHsKICAgIHJldHVybiBkYXRhOwogIH07CgogIHJldHVybiBkYXRhOwp9CgpmdW5jdGlvbiBfdGVtcGxhdGVPYmplY3QyNygpIHsKICB2YXIgZGF0YSA9IF90YWdnZWRUZW1wbGF0ZUxpdGVyYWwoWyJcbiAgcXVlcnkoJGlkOiBJRCEpIHtcbiAgICByb2xlQnlJZChpZDogJGlkKSB7XG4gICAgICBpZFxuICAgICAgbmFtZVxuICAgICAgc2x1Z1xuICAgICAgZGVzY3JpcHRpb25cbiAgICAgIHVzZXJzIHtcbiAgICAgICAgbmFtZVxuICAgICAgICBpZFxuICAgICAgfVxuICAgICAgcGVybWlzc2lvbnMge1xuICAgICAgICBuYW1lXG4gICAgICAgIGlkXG4gICAgICB9XG4gICAgICBjcmVhdGVkX2F0XG4gICAgfVxuICB9XG4iXSk7CgogIF90ZW1wbGF0ZU9iamVjdDI3ID0gZnVuY3Rpb24gX3RlbXBsYXRlT2JqZWN0MjcoKSB7CiAgICByZXR1cm4gZGF0YTsKICB9OwoKICByZXR1cm4gZGF0YTsKfQoKZnVuY3Rpb24gX3RlbXBsYXRlT2JqZWN0MjYoKSB7CiAgdmFyIGRhdGEgPSBfdGFnZ2VkVGVtcGxhdGVMaXRlcmFsKFsiXG4gIHF1ZXJ5KCRpZDogSUQhKSB7XG4gICAgZXhwZW5zZShpZDogJGlkKSB7XG4gICAgICBpZFxuICAgICAgZGF0ZVxuICAgICAgYnJhbmNoIHtcbiAgICAgICAgbmFtZVxuICAgICAgICBpZFxuICAgICAgfVxuICAgICAgdmFsdWVcbiAgICAgIG5vdGVcbiAgICB9XG4gIH1cbiJdKTsKCiAgX3RlbXBsYXRlT2JqZWN0MjYgPSBmdW5jdGlvbiBfdGVtcGxhdGVPYmplY3QyNigpIHsKICAgIHJldHVybiBkYXRhOwogIH07CgogIHJldHVybiBkYXRhOwp9CgpmdW5jdGlvbiBfdGVtcGxhdGVPYmplY3QyNSgpIHsKICB2YXIgZGF0YSA9IF90YWdnZWRUZW1wbGF0ZUxpdGVyYWwoWyJcbiAgcXVlcnkoJGlkOiBJRCEsICRicmFuY2g6IElEKSB7XG4gICAgcHJvZHVjdChpZDogJGlkLCBicmFuY2g6ICRicmFuY2gpIHtcbiAgICAgIGlkXG4gICAgICBpc2JuXG4gICAgICBuYW1lXG4gICAgICBwdXJjaGFzZWRfcHJpY2VcbiAgICAgIHByaWNlXG4gICAgICBxdHlcbiAgICAgIG9yZGVycyB7XG4gICAgICAgIGlkXG4gICAgICB9XG4gICAgfVxuICB9XG4iXSk7CgogIF90ZW1wbGF0ZU9iamVjdDI1ID0gZnVuY3Rpb24gX3RlbXBsYXRlT2JqZWN0MjUoKSB7CiAgICByZXR1cm4gZGF0YTsKICB9OwoKICByZXR1cm4gZGF0YTsKfQoKZnVuY3Rpb24gX3RlbXBsYXRlT2JqZWN0MjQoKSB7CiAgdmFyIGRhdGEgPSBfdGFnZ2VkVGVtcGxhdGVMaXRlcmFsKFsiXG4gIHF1ZXJ5KCRpZDogSUQhKSB7XG4gICAgc3VwcGxpZXIoaWQ6ICRpZCkge1xuICAgICAgaWRcbiAgICAgIG5hbWVcbiAgICAgIGVtYWlsXG4gICAgICBwaG9uZVxuICAgIH1cbiAgfVxuIl0pOwoKICBfdGVtcGxhdGVPYmplY3QyNCA9IGZ1bmN0aW9uIF90ZW1wbGF0ZU9iamVjdDI0KCkgewogICAgcmV0dXJuIGRhdGE7CiAgfTsKCiAgcmV0dXJuIGRhdGE7Cn0KCmZ1bmN0aW9uIF90ZW1wbGF0ZU9iamVjdDIzKCkgewogIHZhciBkYXRhID0gX3RhZ2dlZFRlbXBsYXRlTGl0ZXJhbChbIlxuICBxdWVyeSgkaWQ6IElEISkge1xuICAgIHRyYW5zYWN0aW9uKGlkOiAkaWQpIHtcbiAgICAgIGlkXG4gICAgICBhcHByb3ZlZFxuICAgICAgYnJhbmNoIHtcbiAgICAgICAgbmFtZVxuICAgICAgICBpZFxuICAgICAgfVxuICAgICAgcHJvZHVjdHNQaXZvdCB7XG4gICAgICAgIHF0eVxuICAgICAgfVxuICAgICAgcHJvZHVjdHMge1xuICAgICAgICBpZFxuICAgICAgICBuYW1lXG4gICAgICAgIGlzYm5cbiAgICAgICAgcHJpY2VcbiAgICAgICAgcHVyY2hhc2VkX3ByaWNlXG4gICAgICB9XG4gICAgfVxuICB9XG4iXSk7CgogIF90ZW1wbGF0ZU9iamVjdDIzID0gZnVuY3Rpb24gX3RlbXBsYXRlT2JqZWN0MjMoKSB7CiAgICByZXR1cm4gZGF0YTsKICB9OwoKICByZXR1cm4gZGF0YTsKfQoKZnVuY3Rpb24gX3RlbXBsYXRlT2JqZWN0MjIoKSB7CiAgdmFyIGRhdGEgPSBfdGFnZ2VkVGVtcGxhdGVMaXRlcmFsKFsiXG4gIHF1ZXJ5KCRpZDogSUQhKSB7XG4gICAgYnJhbmNoKGlkOiAkaWQpIHtcbiAgICAgIGlkXG4gICAgICBuYW1lXG4gICAgICBlbWFpbFxuICAgICAgYWRkcmVzc1xuICAgICAgcGhvbmVcbiAgICAgIHJlbnRcbiAgICAgIGJpbGxzXG4gICAgICBlbXBsb3llZXMge1xuICAgICAgICBpZFxuICAgICAgICBuYW1lXG4gICAgICB9XG4gICAgICBvcmRlcnMge1xuICAgICAgICBpZFxuICAgICAgICB0b3RhbFxuICAgICAgfVxuICAgICAgZXhwZW5zZXMge1xuICAgICAgICB2YWx1ZVxuICAgICAgfVxuICAgIH1cbiAgfVxuIl0pOwoKICBfdGVtcGxhdGVPYmplY3QyMiA9IGZ1bmN0aW9uIF90ZW1wbGF0ZU9iamVjdDIyKCkgewogICAgcmV0dXJuIGRhdGE7CiAgfTsKCiAgcmV0dXJuIGRhdGE7Cn0KCmZ1bmN0aW9uIF90ZW1wbGF0ZU9iamVjdDIxKCkgewogIHZhciBkYXRhID0gX3RhZ2dlZFRlbXBsYXRlTGl0ZXJhbChbIlxuICBxdWVyeSgkaWQ6IElEISkge1xuICAgIGN1c3RvbWVyKGlkOiAkaWQpIHtcbiAgICAgIGlkXG4gICAgICBuYW1lXG4gICAgICBlbWFpbFxuICAgICAgaW50ZXJzdHNcbiAgICAgIHBob25lXG4gICAgICBicmFuY2gge1xuICAgICAgICBpZFxuICAgICAgICBuYW1lXG4gICAgICB9XG4gICAgfVxuICB9XG4iXSk7CgogIF90ZW1wbGF0ZU9iamVjdDIxID0gZnVuY3Rpb24gX3RlbXBsYXRlT2JqZWN0MjEoKSB7CiAgICByZXR1cm4gZGF0YTsKICB9OwoKICByZXR1cm4gZGF0YTsKfQoKZnVuY3Rpb24gX3RlbXBsYXRlT2JqZWN0MjAoKSB7CiAgdmFyIGRhdGEgPSBfdGFnZ2VkVGVtcGxhdGVMaXRlcmFsKFsiXG4gIHF1ZXJ5KCRpZDogSUQhKSB7XG4gICAgb3V0Y29taW5nT3JkZXIoaWQ6ICRpZCkge1xuICAgICAgaWRcbiAgICAgIG5vdGVcbiAgICAgIHRvdGFsXG4gICAgICBwcm9kdWN0c1Bpdm90IHtcbiAgICAgICAgcXR5XG4gICAgICAgIHByb2R1Y3Qge1xuICAgICAgICAgIG5hbWVcbiAgICAgICAgICBpZFxuICAgICAgICAgIHB1cmNoYXNlZF9wcmljZVxuICAgICAgICB9XG4gICAgICB9XG4gICAgICBicmFuY2gge1xuICAgICAgICBpZFxuICAgICAgICBuYW1lXG4gICAgICB9XG4gICAgICBzdXBwbGllciB7XG4gICAgICAgIGlkXG4gICAgICAgIG5hbWVcbiAgICAgIH1cblxuICAgICAgcHJvZHVjdHMge1xuICAgICAgICBpZFxuICAgICAgICBuYW1lXG4gICAgICAgIHB1cmNoYXNlZF9wcmljZVxuICAgICAgfVxuICAgICAgY3JlYXRlZF9hdFxuICAgIH1cbiAgfVxuIl0pOwoKICBfdGVtcGxhdGVPYmplY3QyMCA9IGZ1bmN0aW9uIF90ZW1wbGF0ZU9iamVjdDIwKCkgewogICAgcmV0dXJuIGRhdGE7CiAgfTsKCiAgcmV0dXJuIGRhdGE7Cn0KCmZ1bmN0aW9uIF90ZW1wbGF0ZU9iamVjdDE5KCkgewogIHZhciBkYXRhID0gX3RhZ2dlZFRlbXBsYXRlTGl0ZXJhbChbIlxuICBxdWVyeSgkaXNibjogU3RyaW5nISkge1xuICAgIHByb2R1Y3RCeUlzYm4oaXNibjogJGlzYm4pIHtcbiAgICAgIGlkXG4gICAgICBwcmljZVxuICAgIH1cbiAgfVxuIl0pOwoKICBfdGVtcGxhdGVPYmplY3QxOSA9IGZ1bmN0aW9uIF90ZW1wbGF0ZU9iamVjdDE5KCkgewogICAgcmV0dXJuIGRhdGE7CiAgfTsKCiAgcmV0dXJuIGRhdGE7Cn0KCmZ1bmN0aW9uIF90ZW1wbGF0ZU9iamVjdDE4KCkgewogIHZhciBkYXRhID0gX3RhZ2dlZFRlbXBsYXRlTGl0ZXJhbChbIlxuICBxdWVyeSgkaWQ6IElEISkge1xuICAgIG9yZGVyKGlkOiAkaWQpIHtcbiAgICAgIGlkXG4gICAgICBwcm9kdWN0c1Bpdm90IHtcbiAgICAgICAgcXR5XG4gICAgICAgIHByb2R1Y3Qge1xuICAgICAgICAgIGlzYm5cbiAgICAgICAgICBuYW1lXG4gICAgICAgICAgaWRcbiAgICAgICAgICBwcmljZVxuICAgICAgICB9XG4gICAgICB9XG4gICAgICBicmFuY2gge1xuICAgICAgICBpZFxuICAgICAgICBuYW1lXG4gICAgICB9XG4gICAgICBjdXN0b21lciB7XG4gICAgICAgIG5hbWVcbiAgICAgICAgaWRcbiAgICAgIH1cbiAgICAgIHByb2R1Y3RzIHtcbiAgICAgICAgbmFtZVxuICAgICAgICBpZFxuICAgICAgICBwcmljZVxuICAgICAgfVxuICAgICAgZGlzY291bnRcbiAgICAgIHBheW1lbnRcbiAgICAgIHRvdGFsXG4gICAgICBub3RlXG4gICAgICBjcmVhdGVkX2F0XG4gICAgfVxuICB9XG4iXSk7CgogIF90ZW1wbGF0ZU9iamVjdDE4ID0gZnVuY3Rpb24gX3RlbXBsYXRlT2JqZWN0MTgoKSB7CiAgICByZXR1cm4gZGF0YTsKICB9OwoKICByZXR1cm4gZGF0YTsKfQoKZnVuY3Rpb24gX3RlbXBsYXRlT2JqZWN0MTcoKSB7CiAgdmFyIGRhdGEgPSBfdGFnZ2VkVGVtcGxhdGVMaXRlcmFsKFsiXG4gIHF1ZXJ5KCRpZDogSUQhKSB7XG4gICAgZGlzY291bnQoaWQ6ICRpZCkge1xuICAgICAgaWRcbiAgICAgIHRpdGxlXG4gICAgICB0eXBlXG4gICAgICB2YWx1ZVxuICAgICAgcGVyY2VudFxuICAgICAgcHJvZHVjdHMge1xuICAgICAgICBpZFxuICAgICAgICBuYW1lXG4gICAgICB9XG4gICAgICBicmFuY2gge1xuICAgICAgICBpZFxuICAgICAgICBuYW1lXG4gICAgICB9XG4gICAgfVxuICB9XG4iXSk7CgogIF90ZW1wbGF0ZU9iamVjdDE3ID0gZnVuY3Rpb24gX3RlbXBsYXRlT2JqZWN0MTcoKSB7CiAgICByZXR1cm4gZGF0YTsKICB9OwoKICByZXR1cm4gZGF0YTsKfQoKZnVuY3Rpb24gX3RlbXBsYXRlT2JqZWN0MTYoKSB7CiAgdmFyIGRhdGEgPSBfdGFnZ2VkVGVtcGxhdGVMaXRlcmFsKFsiXG4gIHF1ZXJ5KCRpZDogSUQhKSB7XG4gICAgcmViYXRlKGlkOiAkaWQpIHtcbiAgICAgIGNhdXNlXG4gICAgICB2YWx1ZVxuICAgICAgZW1wbG95ZWUge1xuICAgICAgICBuYW1lXG4gICAgICAgIGlkXG4gICAgICB9XG4gICAgfVxuICB9XG4iXSk7CgogIF90ZW1wbGF0ZU9iamVjdDE2ID0gZnVuY3Rpb24gX3RlbXBsYXRlT2JqZWN0MTYoKSB7CiAgICByZXR1cm4gZGF0YTsKICB9OwoKICByZXR1cm4gZGF0YTsKfQoKZnVuY3Rpb24gX3RlbXBsYXRlT2JqZWN0MTUoKSB7CiAgdmFyIGRhdGEgPSBfdGFnZ2VkVGVtcGxhdGVMaXRlcmFsKFsiXG4gIHF1ZXJ5KCRpZDogSUQhKSB7XG4gICAgZW1wbG95ZWUoaWQ6ICRpZCkge1xuICAgICAgbmFtZVxuICAgICAgZW1haWxcbiAgICAgIHBob25lXG4gICAgICBzYWxhcnlcbiAgICAgIHRhcmdldFxuICAgICAgcmViYXRlcyB7XG4gICAgICAgIGlkXG4gICAgICAgIHZhbHVlXG4gICAgICB9XG4gICAgICBicmFuY2gge1xuICAgICAgICBuYW1lXG4gICAgICAgIGlkXG4gICAgICB9XG4gICAgfVxuICB9XG4iXSk7CgogIF90ZW1wbGF0ZU9iamVjdDE1ID0gZnVuY3Rpb24gX3RlbXBsYXRlT2JqZWN0MTUoKSB7CiAgICByZXR1cm4gZGF0YTsKICB9OwoKICByZXR1cm4gZGF0YTsKfQoKZnVuY3Rpb24gX3RlbXBsYXRlT2JqZWN0MTQoKSB7CiAgdmFyIGRhdGEgPSBfdGFnZ2VkVGVtcGxhdGVMaXRlcmFsKFsiXG4gIHF1ZXJ5KCRmaXJzdDogSW50LCAkc2VhcmNoOiBTdHJpbmcsICRvcmRlckJ5OiBbT3JkZXJCeUNsYXVzZSFdLCAkcGFnZTogSW50KSB7XG4gICAgZGlzY291bnRzKGZpcnN0OiAkZmlyc3QsIHBhZ2U6ICRwYWdlLCBvcmRlckJ5OiAkb3JkZXJCeSwgc2VhcmNoOiAkc2VhcmNoKSB7XG4gICAgICBkYXRhIHtcbiAgICAgICAgaWRcbiAgICAgICAgdGl0bGVcbiAgICAgICAgdHlwZVxuICAgICAgICBicmFuY2gge1xuICAgICAgICAgIG5hbWVcbiAgICAgICAgfVxuXG4gICAgICAgIGNyZWF0ZWRfYXRcbiAgICAgIH1cbiAgICAgIHBhZ2luYXRvckluZm8ge1xuICAgICAgICBjdXJyZW50UGFnZVxuICAgICAgICB0b3RhbFxuICAgICAgICBwZXJQYWdlXG4gICAgICAgIGxhc3RQYWdlXG4gICAgICAgIGhhc01vcmVQYWdlc1xuICAgICAgICBmaXJzdEl0ZW1cbiAgICAgICAgbGFzdEl0ZW1cbiAgICAgIH1cbiAgICB9XG4gIH1cbiJdKTsKCiAgX3RlbXBsYXRlT2JqZWN0MTQgPSBmdW5jdGlvbiBfdGVtcGxhdGVPYmplY3QxNCgpIHsKICAgIHJldHVybiBkYXRhOwogIH07CgogIHJldHVybiBkYXRhOwp9CgpmdW5jdGlvbiBfdGVtcGxhdGVPYmplY3QxMygpIHsKICB2YXIgZGF0YSA9IF90YWdnZWRUZW1wbGF0ZUxpdGVyYWwoWyJcbiAgcXVlcnkoJGZpcnN0OiBJbnQsICRzZWFyY2g6IFN0cmluZywgJG9yZGVyQnk6IFtPcmRlckJ5Q2xhdXNlIV0sICRwYWdlOiBJbnQpIHtcbiAgICBlbXBsb3llZXMoZmlyc3Q6ICRmaXJzdCwgcGFnZTogJHBhZ2UsIG9yZGVyQnk6ICRvcmRlckJ5LCBzZWFyY2g6ICRzZWFyY2gpIHtcbiAgICAgIGRhdGEge1xuICAgICAgICBpZFxuICAgICAgICBuYW1lXG4gICAgICAgIGVtYWlsXG4gICAgICAgIHBob25lXG4gICAgICAgIHNhbGFyeVxuICAgICAgICBicmFuY2gge1xuICAgICAgICAgIG5hbWVcbiAgICAgICAgfVxuICAgICAgICBjcmVhdGVkX2F0XG4gICAgICB9XG4gICAgICBwYWdpbmF0b3JJbmZvIHtcbiAgICAgICAgY3VycmVudFBhZ2VcbiAgICAgICAgdG90YWxcbiAgICAgICAgcGVyUGFnZVxuICAgICAgICBsYXN0UGFnZVxuICAgICAgICBoYXNNb3JlUGFnZXNcbiAgICAgICAgZmlyc3RJdGVtXG4gICAgICAgIGxhc3RJdGVtXG4gICAgICB9XG4gICAgfVxuICB9XG4iXSk7CgogIF90ZW1wbGF0ZU9iamVjdDEzID0gZnVuY3Rpb24gX3RlbXBsYXRlT2JqZWN0MTMoKSB7CiAgICByZXR1cm4gZGF0YTsKICB9OwoKICByZXR1cm4gZGF0YTsKfQoKZnVuY3Rpb24gX3RlbXBsYXRlT2JqZWN0MTIoKSB7CiAgdmFyIGRhdGEgPSBfdGFnZ2VkVGVtcGxhdGVMaXRlcmFsKFsiXG4gIHF1ZXJ5KFxuICAgICRmaXJzdDogSW50XG4gICAgJGJyYW5jaDogSW50XG4gICAgJHNlYXJjaDogU3RyaW5nXG4gICAgJG9yZGVyQnk6IFtPcmRlckJ5Q2xhdXNlIV1cbiAgICAkcGFnZTogSW50XG4gICkge1xuICAgIHRyYW5zYWN0aW9ucyhcbiAgICAgIGZpcnN0OiAkZmlyc3RcbiAgICAgIHBhZ2U6ICRwYWdlXG4gICAgICBvcmRlckJ5OiAkb3JkZXJCeVxuICAgICAgc2VhcmNoOiAkc2VhcmNoXG4gICAgICBicmFuY2hfaWQ6ICRicmFuY2hcbiAgICApIHtcbiAgICAgIGRhdGEge1xuICAgICAgICBpZFxuICAgICAgICBhcHByb3ZlZFxuICAgICAgICBicmFuY2gge1xuICAgICAgICAgIG5hbWVcbiAgICAgICAgfVxuICAgICAgICBjcmVhdGVkX2F0XG4gICAgICB9XG4gICAgICBwYWdpbmF0b3JJbmZvIHtcbiAgICAgICAgY3VycmVudFBhZ2VcbiAgICAgICAgdG90YWxcbiAgICAgICAgcGVyUGFnZVxuICAgICAgICBsYXN0UGFnZVxuICAgICAgICBoYXNNb3JlUGFnZXNcbiAgICAgICAgZmlyc3RJdGVtXG4gICAgICAgIGxhc3RJdGVtXG4gICAgICB9XG4gICAgfVxuICB9XG4iXSk7CgogIF90ZW1wbGF0ZU9iamVjdDEyID0gZnVuY3Rpb24gX3RlbXBsYXRlT2JqZWN0MTIoKSB7CiAgICByZXR1cm4gZGF0YTsKICB9OwoKICByZXR1cm4gZGF0YTsKfQoKZnVuY3Rpb24gX3RlbXBsYXRlT2JqZWN0MTEoKSB7CiAgdmFyIGRhdGEgPSBfdGFnZ2VkVGVtcGxhdGVMaXRlcmFsKFsiXG4gIHF1ZXJ5KCRmaXJzdDogSW50LCAkc2VhcmNoOiBTdHJpbmcsICRvcmRlckJ5OiBbT3JkZXJCeUNsYXVzZSFdLCAkcGFnZTogSW50KSB7XG4gICAgYnJhbmNoZXMoZmlyc3Q6ICRmaXJzdCwgcGFnZTogJHBhZ2UsIG9yZGVyQnk6ICRvcmRlckJ5LCBzZWFyY2g6ICRzZWFyY2gpIHtcbiAgICAgIGRhdGEge1xuICAgICAgICBpZFxuICAgICAgICBuYW1lXG4gICAgICAgIGFkZHJlc3NcbiAgICAgICAgcGhvbmVcbiAgICAgICAgcmVudFxuICAgICAgICBjcmVhdGVkX2F0XG4gICAgICB9XG4gICAgICBwYWdpbmF0b3JJbmZvIHtcbiAgICAgICAgY3VycmVudFBhZ2VcbiAgICAgICAgdG90YWxcbiAgICAgICAgcGVyUGFnZVxuICAgICAgICBsYXN0UGFnZVxuICAgICAgICBoYXNNb3JlUGFnZXNcbiAgICAgICAgZmlyc3RJdGVtXG4gICAgICAgIGxhc3RJdGVtXG4gICAgICB9XG4gICAgfVxuICB9XG4iXSk7CgogIF90ZW1wbGF0ZU9iamVjdDExID0gZnVuY3Rpb24gX3RlbXBsYXRlT2JqZWN0MTEoKSB7CiAgICByZXR1cm4gZGF0YTsKICB9OwoKICByZXR1cm4gZGF0YTsKfQoKZnVuY3Rpb24gX3RlbXBsYXRlT2JqZWN0MTAoKSB7CiAgdmFyIGRhdGEgPSBfdGFnZ2VkVGVtcGxhdGVMaXRlcmFsKFsiXG4gIHF1ZXJ5KCRmaXJzdDogSW50LCAkc2VhcmNoOiBTdHJpbmcsICRvcmRlckJ5OiBbT3JkZXJCeUNsYXVzZSFdLCAkcGFnZTogSW50KSB7XG4gICAgb3V0Y29taW5nT3JkZXJzKFxuICAgICAgZmlyc3Q6ICRmaXJzdFxuICAgICAgcGFnZTogJHBhZ2VcbiAgICAgIG9yZGVyQnk6ICRvcmRlckJ5XG4gICAgICBzZWFyY2g6ICRzZWFyY2hcbiAgICApIHtcbiAgICAgIGRhdGEge1xuICAgICAgICBpZFxuICAgICAgICBub3RlXG4gICAgICAgIHRvdGFsXG4gICAgICAgIHN1cHBsaWVyIHtcbiAgICAgICAgICBpZFxuICAgICAgICAgIG5hbWVcbiAgICAgICAgfVxuICAgICAgICBjcmVhdGVkX2F0XG4gICAgICB9XG4gICAgICBwYWdpbmF0b3JJbmZvIHtcbiAgICAgICAgY3VycmVudFBhZ2VcbiAgICAgICAgdG90YWxcbiAgICAgICAgcGVyUGFnZVxuICAgICAgICBsYXN0UGFnZVxuICAgICAgICBoYXNNb3JlUGFnZXNcbiAgICAgICAgZmlyc3RJdGVtXG4gICAgICAgIGxhc3RJdGVtXG4gICAgICB9XG4gICAgfVxuICB9XG4iXSk7CgogIF90ZW1wbGF0ZU9iamVjdDEwID0gZnVuY3Rpb24gX3RlbXBsYXRlT2JqZWN0MTAoKSB7CiAgICByZXR1cm4gZGF0YTsKICB9OwoKICByZXR1cm4gZGF0YTsKfQoKZnVuY3Rpb24gX3RlbXBsYXRlT2JqZWN0OSgpIHsKICB2YXIgZGF0YSA9IF90YWdnZWRUZW1wbGF0ZUxpdGVyYWwoWyJcbiAgcXVlcnkoJGZpcnN0OiBJbnQsICRzZWFyY2g6IFN0cmluZywgJG9yZGVyQnk6IFtPcmRlckJ5Q2xhdXNlIV0sICRwYWdlOiBJbnQpIHtcbiAgICBzdXBwbGllcnMoZmlyc3Q6ICRmaXJzdCwgcGFnZTogJHBhZ2UsIG9yZGVyQnk6ICRvcmRlckJ5LCBzZWFyY2g6ICRzZWFyY2gpIHtcbiAgICAgIGRhdGEge1xuICAgICAgICBpZFxuICAgICAgICBuYW1lXG4gICAgICAgIGVtYWlsXG4gICAgICAgIHBob25lXG4gICAgICAgIGNyZWF0ZWRfYXRcbiAgICAgIH1cbiAgICAgIHBhZ2luYXRvckluZm8ge1xuICAgICAgICBjdXJyZW50UGFnZVxuICAgICAgICB0b3RhbFxuICAgICAgICBwZXJQYWdlXG4gICAgICAgIGxhc3RQYWdlXG4gICAgICAgIGhhc01vcmVQYWdlc1xuICAgICAgICBmaXJzdEl0ZW1cbiAgICAgICAgbGFzdEl0ZW1cbiAgICAgIH1cbiAgICB9XG4gIH1cbiJdKTsKCiAgX3RlbXBsYXRlT2JqZWN0OSA9IGZ1bmN0aW9uIF90ZW1wbGF0ZU9iamVjdDkoKSB7CiAgICByZXR1cm4gZGF0YTsKICB9OwoKICByZXR1cm4gZGF0YTsKfQoKZnVuY3Rpb24gX3RlbXBsYXRlT2JqZWN0OCgpIHsKICB2YXIgZGF0YSA9IF90YWdnZWRUZW1wbGF0ZUxpdGVyYWwoWyJcbiAgcXVlcnkoJGZpcnN0OiBJbnQsICRzZWFyY2g6IFN0cmluZywgJG9yZGVyQnk6IFtPcmRlckJ5Q2xhdXNlIV0sICRwYWdlOiBJbnQpIHtcbiAgICByZWJhdGVzKGZpcnN0OiAkZmlyc3QsIHBhZ2U6ICRwYWdlLCBvcmRlckJ5OiAkb3JkZXJCeSwgc2VhcmNoOiAkc2VhcmNoKSB7XG4gICAgICBkYXRhIHtcbiAgICAgICAgaWRcbiAgICAgICAgY2F1c2VcbiAgICAgICAgdmFsdWVcbiAgICAgICAgZW1wbG95ZWUge1xuICAgICAgICAgIG5hbWVcbiAgICAgICAgICBpZFxuICAgICAgICB9XG4gICAgICAgIGNyZWF0ZWRfYXRcbiAgICAgIH1cbiAgICAgIHBhZ2luYXRvckluZm8ge1xuICAgICAgICBjdXJyZW50UGFnZVxuICAgICAgICB0b3RhbFxuICAgICAgICBwZXJQYWdlXG4gICAgICAgIGxhc3RQYWdlXG4gICAgICAgIGhhc01vcmVQYWdlc1xuICAgICAgICBmaXJzdEl0ZW1cbiAgICAgICAgbGFzdEl0ZW1cbiAgICAgIH1cbiAgICB9XG4gIH1cbiJdKTsKCiAgX3RlbXBsYXRlT2JqZWN0OCA9IGZ1bmN0aW9uIF90ZW1wbGF0ZU9iamVjdDgoKSB7CiAgICByZXR1cm4gZGF0YTsKICB9OwoKICByZXR1cm4gZGF0YTsKfQoKZnVuY3Rpb24gX3RlbXBsYXRlT2JqZWN0NygpIHsKICB2YXIgZGF0YSA9IF90YWdnZWRUZW1wbGF0ZUxpdGVyYWwoWyJcbiAgcXVlcnkoXG4gICAgJGZpcnN0OiBJbnRcbiAgICAkc2VhcmNoOiBTdHJpbmdcbiAgICAkb3JkZXJCeTogW09yZGVyQnlDbGF1c2UhXVxuICAgICRwYWdlOiBJbnRcbiAgICAkYnJhbmNoOiBJbnRcbiAgKSB7XG4gICAgY3VzdG9tZXJzKFxuICAgICAgZmlyc3Q6ICRmaXJzdFxuICAgICAgcGFnZTogJHBhZ2VcbiAgICAgIG9yZGVyQnk6ICRvcmRlckJ5XG4gICAgICBzZWFyY2g6ICRzZWFyY2hcbiAgICAgIGJyYW5jaF9pZDogJGJyYW5jaFxuICAgICkge1xuICAgICAgZGF0YSB7XG4gICAgICAgIGlkXG4gICAgICAgIG5hbWVcbiAgICAgICAgYnJhbmNoIHtcbiAgICAgICAgICBuYW1lXG4gICAgICAgIH1cbiAgICAgICAgcGhvbmVcbiAgICAgICAgY3JlYXRlZF9hdFxuICAgICAgfVxuICAgICAgcGFnaW5hdG9ySW5mbyB7XG4gICAgICAgIGN1cnJlbnRQYWdlXG4gICAgICAgIHRvdGFsXG4gICAgICAgIHBlclBhZ2VcbiAgICAgICAgbGFzdFBhZ2VcbiAgICAgICAgaGFzTW9yZVBhZ2VzXG4gICAgICAgIGZpcnN0SXRlbVxuICAgICAgICBsYXN0SXRlbVxuICAgICAgfVxuICAgIH1cbiAgfVxuIl0pOwoKICBfdGVtcGxhdGVPYmplY3Q3ID0gZnVuY3Rpb24gX3RlbXBsYXRlT2JqZWN0NygpIHsKICAgIHJldHVybiBkYXRhOwogIH07CgogIHJldHVybiBkYXRhOwp9CgpmdW5jdGlvbiBfdGVtcGxhdGVPYmplY3Q2KCkgewogIHZhciBkYXRhID0gX3RhZ2dlZFRlbXBsYXRlTGl0ZXJhbChbIlxuICBxdWVyeSgkZmlyc3Q6IEludCwgJHNlYXJjaDogU3RyaW5nLCAkb3JkZXJCeTogW09yZGVyQnlDbGF1c2UhXSwgJHBhZ2U6IEludCkge1xuICAgIGV4cGVuc2VzKGZpcnN0OiAkZmlyc3QsIHBhZ2U6ICRwYWdlLCBvcmRlckJ5OiAkb3JkZXJCeSwgc2VhcmNoOiAkc2VhcmNoKSB7XG4gICAgICBkYXRhIHtcbiAgICAgICAgaWRcbiAgICAgICAgbm90ZVxuICAgICAgICB2YWx1ZVxuICAgICAgICBkYXRlXG4gICAgICAgIGJyYW5jaCB7XG4gICAgICAgICAgbmFtZVxuICAgICAgICB9XG4gICAgICAgIGNyZWF0ZWRfYXRcbiAgICAgIH1cbiAgICAgIHBhZ2luYXRvckluZm8ge1xuICAgICAgICBjdXJyZW50UGFnZVxuICAgICAgICB0b3RhbFxuICAgICAgICBwZXJQYWdlXG4gICAgICAgIGxhc3RQYWdlXG4gICAgICAgIGhhc01vcmVQYWdlc1xuICAgICAgICBmaXJzdEl0ZW1cbiAgICAgICAgbGFzdEl0ZW1cbiAgICAgIH1cbiAgICB9XG4gIH1cbiJdKTsKCiAgX3RlbXBsYXRlT2JqZWN0NiA9IGZ1bmN0aW9uIF90ZW1wbGF0ZU9iamVjdDYoKSB7CiAgICByZXR1cm4gZGF0YTsKICB9OwoKICByZXR1cm4gZGF0YTsKfQoKZnVuY3Rpb24gX3RlbXBsYXRlT2JqZWN0NSgpIHsKICB2YXIgZGF0YSA9IF90YWdnZWRUZW1wbGF0ZUxpdGVyYWwoWyJcbiAgcXVlcnkoXG4gICAgJGZpcnN0OiBJbnRcbiAgICAkc2VhcmNoOiBTdHJpbmdcbiAgICAkb3JkZXJCeTogW09yZGVyQnlDbGF1c2UhXVxuICAgICRwYWdlOiBJbnRcbiAgICAkYnJhbmNoOiBJbnRcbiAgKSB7XG4gICAgcHJvZHVjdHMoXG4gICAgICBmaXJzdDogJGZpcnN0XG4gICAgICBwYWdlOiAkcGFnZVxuICAgICAgb3JkZXJCeTogJG9yZGVyQnlcbiAgICAgIHNlYXJjaDogJHNlYXJjaFxuICAgICAgYnJhbmNoOiAkYnJhbmNoXG4gICAgKSB7XG4gICAgICBkYXRhIHtcbiAgICAgICAgaWRcbiAgICAgICAgbmFtZVxuICAgICAgICBpc2JuXG4gICAgICAgIHByaWNlXG4gICAgICAgIGNyZWF0ZWRfYXRcbiAgICAgIH1cbiAgICAgIHBhZ2luYXRvckluZm8ge1xuICAgICAgICBjdXJyZW50UGFnZVxuICAgICAgICB0b3RhbFxuICAgICAgICBwZXJQYWdlXG4gICAgICAgIGxhc3RQYWdlXG4gICAgICAgIGhhc01vcmVQYWdlc1xuICAgICAgICBmaXJzdEl0ZW1cbiAgICAgICAgbGFzdEl0ZW1cbiAgICAgIH1cbiAgICB9XG4gIH1cbiJdKTsKCiAgX3RlbXBsYXRlT2JqZWN0NSA9IGZ1bmN0aW9uIF90ZW1wbGF0ZU9iamVjdDUoKSB7CiAgICByZXR1cm4gZGF0YTsKICB9OwoKICByZXR1cm4gZGF0YTsKfQoKZnVuY3Rpb24gX3RlbXBsYXRlT2JqZWN0NCgpIHsKICB2YXIgZGF0YSA9IF90YWdnZWRUZW1wbGF0ZUxpdGVyYWwoWyJcbiAgcXVlcnkoXG4gICAgJGZyb206IERhdGVcbiAgICAkdG86IERhdGVcbiAgICAkY3JlYXRlZF9ieTogSW50XG4gICAgJGZpcnN0OiBJbnRcbiAgICAkYnJhbmNoOiBTdHJpbmdcbiAgICAkc2VhcmNoOiBTdHJpbmdcbiAgICAkb3JkZXJCeTogU3RyaW5nXG4gICAgJG9yZGVyRnVuYzogU3RyaW5nXG4gICAgJHBhZ2U6IEludFxuICApIHtcbiAgICBvcmRlcnNRdWVyeShcbiAgICAgIGZpcnN0OiAkZmlyc3RcbiAgICAgIGJyYW5jaF9pZDogJGJyYW5jaFxuICAgICAgY3JlYXRlZF9ieTogJGNyZWF0ZWRfYnlcbiAgICAgIGZyb206ICRmcm9tXG4gICAgICB0bzogJHRvXG4gICAgICBwYWdlOiAkcGFnZVxuICAgICAgb3JkZXJCeTogJG9yZGVyQnlcbiAgICAgIG9yZGVyRnVuYzogJG9yZGVyRnVuY1xuICAgICAgc2VhcmNoOiAkc2VhcmNoXG4gICAgKSB7XG4gICAgICBkYXRhIHtcbiAgICAgICAgaWRcbiAgICAgICAgdG90YWxcbiAgICAgICAgbm90ZVxuICAgICAgICBicmFuY2hfaWRcbiAgICAgICAgY3JlYXRlZF9hdFxuICAgICAgfVxuICAgICAgcGFnaW5hdG9ySW5mbyB7XG4gICAgICAgIGN1cnJlbnRQYWdlXG4gICAgICAgIHRvdGFsXG4gICAgICAgIHBlclBhZ2VcbiAgICAgICAgbGFzdFBhZ2VcbiAgICAgICAgaGFzTW9yZVBhZ2VzXG4gICAgICAgIGZpcnN0SXRlbVxuICAgICAgICBsYXN0SXRlbVxuICAgICAgfVxuICAgIH1cbiAgfVxuIl0pOwoKICBfdGVtcGxhdGVPYmplY3Q0ID0gZnVuY3Rpb24gX3RlbXBsYXRlT2JqZWN0NCgpIHsKICAgIHJldHVybiBkYXRhOwogIH07CgogIHJldHVybiBkYXRhOwp9CgpmdW5jdGlvbiBfdGVtcGxhdGVPYmplY3QzKCkgewogIHZhciBkYXRhID0gX3RhZ2dlZFRlbXBsYXRlTGl0ZXJhbChbIlxuICBxdWVyeSgkZmlyc3Q6IEludCwgJHNlYXJjaDogU3RyaW5nLCAkb3JkZXJCeTogW09yZGVyQnlDbGF1c2UhXSwgJHBhZ2U6IEludCkge1xuICAgIHJvbGVzKFxuICAgICAgc2x1ZzogXCJhZG1pblwiXG4gICAgICBmaXJzdDogJGZpcnN0XG4gICAgICBwYWdlOiAkcGFnZVxuICAgICAgb3JkZXJCeTogJG9yZGVyQnlcbiAgICAgIHNlYXJjaDogJHNlYXJjaFxuICAgICkge1xuICAgICAgZGF0YSB7XG4gICAgICAgIGlkXG4gICAgICAgIG5hbWVcbiAgICAgICAgZGVzY3JpcHRpb25cbiAgICAgICAgY3JlYXRlZF9hdFxuICAgICAgfVxuICAgICAgcGFnaW5hdG9ySW5mbyB7XG4gICAgICAgIGN1cnJlbnRQYWdlXG4gICAgICAgIHRvdGFsXG4gICAgICAgIHBlclBhZ2VcbiAgICAgICAgbGFzdFBhZ2VcbiAgICAgICAgaGFzTW9yZVBhZ2VzXG4gICAgICAgIGZpcnN0SXRlbVxuICAgICAgICBsYXN0SXRlbVxuICAgICAgfVxuICAgIH1cbiAgfVxuIl0pOwoKICBfdGVtcGxhdGVPYmplY3QzID0gZnVuY3Rpb24gX3RlbXBsYXRlT2JqZWN0MygpIHsKICAgIHJldHVybiBkYXRhOwogIH07CgogIHJldHVybiBkYXRhOwp9CgpmdW5jdGlvbiBfdGVtcGxhdGVPYmplY3QyKCkgewogIHZhciBkYXRhID0gX3RhZ2dlZFRlbXBsYXRlTGl0ZXJhbChbIlxuICBxdWVyeSgkZmlyc3Q6IEludCwgJHNlYXJjaDogU3RyaW5nLCAkb3JkZXJCeTogW09yZGVyQnlDbGF1c2UhXSwgJHBhZ2U6IEludCkge1xuICAgIHVzZXJzKGZpcnN0OiAkZmlyc3QsIHBhZ2U6ICRwYWdlLCBvcmRlckJ5OiAkb3JkZXJCeSwgc2VhcmNoOiAkc2VhcmNoKSB7XG4gICAgICBkYXRhIHtcbiAgICAgICAgaWRcbiAgICAgICAgbmFtZVxuICAgICAgICBlbWFpbFxuICAgICAgICBjcmVhdGVkX2F0XG4gICAgICB9XG4gICAgICBwYWdpbmF0b3JJbmZvIHtcbiAgICAgICAgY3VycmVudFBhZ2VcbiAgICAgICAgdG90YWxcbiAgICAgICAgcGVyUGFnZVxuICAgICAgICBsYXN0UGFnZVxuICAgICAgICBoYXNNb3JlUGFnZXNcbiAgICAgICAgZmlyc3RJdGVtXG4gICAgICAgIGxhc3RJdGVtXG4gICAgICB9XG4gICAgfVxuICB9XG4iXSk7CgogIF90ZW1wbGF0ZU9iamVjdDIgPSBmdW5jdGlvbiBfdGVtcGxhdGVPYmplY3QyKCkgewogICAgcmV0dXJuIGRhdGE7CiAgfTsKCiAgcmV0dXJuIGRhdGE7Cn0KCmZ1bmN0aW9uIF90ZW1wbGF0ZU9iamVjdCgpIHsKICB2YXIgZGF0YSA9IF90YWdnZWRUZW1wbGF0ZUxpdGVyYWwoWyJcbiAgcXVlcnkge1xuICAgIG1lIHtcbiAgICAgIGlkXG4gICAgICBuYW1lXG4gICAgICByb2xlcyB7XG4gICAgICAgIG5hbWVcbiAgICAgICAgc2x1Z1xuICAgICAgICBwZXJtaXNzaW9ucyB7XG4gICAgICAgICAgc2x1Z1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBlbXBsb3llZSB7XG4gICAgICAgIGJyYW5jaCB7XG4gICAgICAgICAgaWRcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxuIl0pOwoKICBfdGVtcGxhdGVPYmplY3QgPSBmdW5jdGlvbiBfdGVtcGxhdGVPYmplY3QoKSB7CiAgICByZXR1cm4gZGF0YTsKICB9OwoKICByZXR1cm4gZGF0YTsKfQoKaW1wb3J0IGdxbCBmcm9tICJncmFwaHFsLXRhZyI7CmV4cG9ydCB2YXIgbWVRdWVyeSA9IGdxbChfdGVtcGxhdGVPYmplY3QoKSk7CmV4cG9ydCB2YXIgY3JlYXRlVXNlck11dGF0aW9uID0gcmVxdWlyZSgiLi4vbXV0YXRpb25zL0NyZWF0ZVVzZXIuZ3FsIik7CmV4cG9ydCB2YXIgdXNlcnNRdWVyeSA9IGdxbChfdGVtcGxhdGVPYmplY3QyKCkpOwpleHBvcnQgdmFyIHJvbGVzUXVlcnkgPSBncWwoX3RlbXBsYXRlT2JqZWN0MygpKTsKZXhwb3J0IHZhciBvcmRlcnNRdWVyeSA9IGdxbChfdGVtcGxhdGVPYmplY3Q0KCkpOwpleHBvcnQgdmFyIHByb2R1Y3RzUXVlcnkgPSBncWwoX3RlbXBsYXRlT2JqZWN0NSgpKTsKZXhwb3J0IHZhciBleHBlbnNlc1F1ZXJ5ID0gZ3FsKF90ZW1wbGF0ZU9iamVjdDYoKSk7CmV4cG9ydCB2YXIgY3VzdG9tZXJzUXVlcnkgPSBncWwoX3RlbXBsYXRlT2JqZWN0NygpKTsKZXhwb3J0IHZhciByZWJhdGVzUXVlcnkgPSBncWwoX3RlbXBsYXRlT2JqZWN0OCgpKTsKZXhwb3J0IHZhciBzdXBwbGllcnNRdWVyeSA9IGdxbChfdGVtcGxhdGVPYmplY3Q5KCkpOwpleHBvcnQgdmFyIG91dGNvbWluZ09yZGVyc1F1ZXJ5ID0gZ3FsKF90ZW1wbGF0ZU9iamVjdDEwKCkpOwpleHBvcnQgdmFyIGJyYW5jaGVzUXVlcnkgPSBncWwoX3RlbXBsYXRlT2JqZWN0MTEoKSk7CmV4cG9ydCB2YXIgdHJhbnNhY3Rpb25zUXVlcnkgPSBncWwoX3RlbXBsYXRlT2JqZWN0MTIoKSk7CmV4cG9ydCB2YXIgZW1wbG95ZWVzUXVlcnkgPSBncWwoX3RlbXBsYXRlT2JqZWN0MTMoKSk7CmV4cG9ydCB2YXIgZGlzY291bnRzUXVlcnkgPSBncWwoX3RlbXBsYXRlT2JqZWN0MTQoKSk7CmV4cG9ydCB2YXIgZW1wbG95ZWVRdWVyeSA9IGdxbChfdGVtcGxhdGVPYmplY3QxNSgpKTsKZXhwb3J0IHZhciByZWJhdGVRdWVyeSA9IGdxbChfdGVtcGxhdGVPYmplY3QxNigpKTsKZXhwb3J0IHZhciBkaXNjb3VudFF1ZXJ5ID0gZ3FsKF90ZW1wbGF0ZU9iamVjdDE3KCkpOwpleHBvcnQgdmFyIG9yZGVyUXVlcnkgPSBncWwoX3RlbXBsYXRlT2JqZWN0MTgoKSk7CmV4cG9ydCB2YXIgcHJvZHVjdEJ5SXNibiA9IGdxbChfdGVtcGxhdGVPYmplY3QxOSgpKTsKZXhwb3J0IHZhciBvdXRjb21pbmdPcmRlclF1ZXJ5ID0gZ3FsKF90ZW1wbGF0ZU9iamVjdDIwKCkpOwpleHBvcnQgdmFyIGN1c3RvbWVyUXVlcnkgPSBncWwoX3RlbXBsYXRlT2JqZWN0MjEoKSk7CmV4cG9ydCB2YXIgYnJhbmNoUXVlcnkgPSBncWwoX3RlbXBsYXRlT2JqZWN0MjIoKSk7CmV4cG9ydCB2YXIgdHJhbnNhY3Rpb25RdWVyeSA9IGdxbChfdGVtcGxhdGVPYmplY3QyMygpKTsKZXhwb3J0IHZhciBzdXBwbGllclF1ZXJ5ID0gZ3FsKF90ZW1wbGF0ZU9iamVjdDI0KCkpOwpleHBvcnQgdmFyIHByb2R1Y3RRdWVyeSA9IGdxbChfdGVtcGxhdGVPYmplY3QyNSgpKTsKZXhwb3J0IHZhciBleHBlbnNlUXVlcnkgPSBncWwoX3RlbXBsYXRlT2JqZWN0MjYoKSk7CmV4cG9ydCB2YXIgcm9sZVF1ZXJ5ID0gZ3FsKF90ZW1wbGF0ZU9iamVjdDI3KCkpOwpleHBvcnQgdmFyIGNyZWF0ZVJvbGUgPSBncWwoX3RlbXBsYXRlT2JqZWN0MjgoKSk7CmV4cG9ydCB2YXIgY3JlYXRlQnJhbmNoID0gZ3FsKF90ZW1wbGF0ZU9iamVjdDI5KCkpOwpleHBvcnQgdmFyIGNyZWF0ZUJhbGFuY2UgPSBncWwoX3RlbXBsYXRlT2JqZWN0MzAoKSk7CmV4cG9ydCB2YXIgdXBkYXRlQnJhbmNoID0gZ3FsKF90ZW1wbGF0ZU9iamVjdDMxKCkpOwpleHBvcnQgdmFyIHVwZGF0ZURpc2NvdW50ID0gZ3FsKF90ZW1wbGF0ZU9iamVjdDMyKCkpOwpleHBvcnQgdmFyIGNyZWF0ZURpc2NvdW50ID0gZ3FsKF90ZW1wbGF0ZU9iamVjdDMzKCkpOwpleHBvcnQgdmFyIGNyZWF0ZURpc2NvdW50UHJvZHVjdCA9IGdxbChfdGVtcGxhdGVPYmplY3QzNCgpKTsKZXhwb3J0IHZhciBjcmVhdGVTdXBwbGllciA9IGdxbChfdGVtcGxhdGVPYmplY3QzNSgpKTsKZXhwb3J0IHZhciB1cGRhdGVTdXBwbGllciA9IGdxbChfdGVtcGxhdGVPYmplY3QzNigpKTsKZXhwb3J0IHZhciBjcmVhdGVDdXN0b21lciA9IGdxbChfdGVtcGxhdGVPYmplY3QzNygpKTsKZXhwb3J0IHZhciB1cGRhdGVDdXN0b21lciA9IGdxbChfdGVtcGxhdGVPYmplY3QzOCgpKTsKZXhwb3J0IHZhciBjcmVhdGVQcm9kdWN0ID0gZ3FsKF90ZW1wbGF0ZU9iamVjdDM5KCkpOwpleHBvcnQgdmFyIGNyZWF0ZVRyYW5zYWN0aW9uID0gZ3FsKF90ZW1wbGF0ZU9iamVjdDQwKCkpOwpleHBvcnQgdmFyIHVwZGF0ZVRyYW5zYWN0aW9uID0gZ3FsKF90ZW1wbGF0ZU9iamVjdDQxKCkpOwpleHBvcnQgdmFyIGNyZWF0ZVN0b2NrID0gZ3FsKF90ZW1wbGF0ZU9iamVjdDQyKCkpOwpleHBvcnQgdmFyIHVwZGF0ZVByb2R1Y3QgPSBncWwoX3RlbXBsYXRlT2JqZWN0NDMoKSk7CmV4cG9ydCB2YXIgY3JlYXRlRXhwZW5zZSA9IGdxbChfdGVtcGxhdGVPYmplY3Q0NCgpKTsKZXhwb3J0IHZhciBjcmVhdGVFbXBsb3llZSA9IGdxbChfdGVtcGxhdGVPYmplY3Q0NSgpKTsKZXhwb3J0IHZhciB1cGRhdGVFbXBsb3llZSA9IGdxbChfdGVtcGxhdGVPYmplY3Q0NigpKTsKZXhwb3J0IHZhciB1cGRhdGVFeHBlbnNlID0gZ3FsKF90ZW1wbGF0ZU9iamVjdDQ3KCkpOwpleHBvcnQgdmFyIHVwZGF0ZVJvbGUgPSBncWwoX3RlbXBsYXRlT2JqZWN0NDgoKSk7CmV4cG9ydCB2YXIgZGVsZXRlUm9sZXMgPSBncWwoX3RlbXBsYXRlT2JqZWN0NDkoKSk7CmV4cG9ydCB2YXIgcG9zRGF0YSA9IGdxbChfdGVtcGxhdGVPYmplY3Q1MCgpKTsKZXhwb3J0IHZhciBkZWxldGVSb2xlID0gZ3FsKF90ZW1wbGF0ZU9iamVjdDUxKCkpOwpleHBvcnQgdmFyIGRlbGV0ZVJlY29yZCA9IGdxbChfdGVtcGxhdGVPYmplY3Q1MigpKTsKZXhwb3J0IHZhciBkZWxldGVSZWNvcmRzID0gZ3FsKF90ZW1wbGF0ZU9iamVjdDUzKCkpOwpleHBvcnQgdmFyIGRlbGV0ZU9yZGVycyA9IGdxbChfdGVtcGxhdGVPYmplY3Q1NCgpKTsKZXhwb3J0IHZhciBkZWxldGVPcmRlciA9IGdxbChfdGVtcGxhdGVPYmplY3Q1NSgpKTsKZXhwb3J0IHZhciBkZWxldGVUcmFuc2FjdGlvbnMgPSBncWwoX3RlbXBsYXRlT2JqZWN0NTYoKSk7CmV4cG9ydCB2YXIgZGVsZXRlVHJhbnNhY3Rpb24gPSBncWwoX3RlbXBsYXRlT2JqZWN0NTcoKSk7CmV4cG9ydCB2YXIgZGVsZXRlRW1wbG95ZWVzID0gZ3FsKF90ZW1wbGF0ZU9iamVjdDU4KCkpOwpleHBvcnQgdmFyIGRlbGV0ZUVtcGxveWVlID0gZ3FsKF90ZW1wbGF0ZU9iamVjdDU5KCkpOwpleHBvcnQgdmFyIGRlbGV0ZVN1cHBsaWVycyA9IGdxbChfdGVtcGxhdGVPYmplY3Q2MCgpKTsKZXhwb3J0IHZhciBjcmVhdGVPcmRlclByb2R1Y3QgPSBncWwoX3RlbXBsYXRlT2JqZWN0NjEoKSk7CmV4cG9ydCB2YXIgY3JlYXRlT3V0Y29taW5nT3JkZXJQcm9kdWN0ID0gZ3FsKF90ZW1wbGF0ZU9iamVjdDYyKCkpOwpleHBvcnQgdmFyIHVwZGF0ZU91dGNvbWluZ09yZGVyUHJvZHVjdCA9IGdxbChfdGVtcGxhdGVPYmplY3Q2MygpKTsKZXhwb3J0IHZhciB1cGRhdGVPcmRlclByb2R1Y3QgPSBncWwoX3RlbXBsYXRlT2JqZWN0NjQoKSk7CmV4cG9ydCB2YXIgY3JlYXRlVHJhbnNhY3Rpb25Qcm9kdWN0ID0gZ3FsKF90ZW1wbGF0ZU9iamVjdDY1KCkpOwpleHBvcnQgdmFyIHVwZGF0ZVRyYW5zYWN0aW9uUHJvZHVjdCA9IGdxbChfdGVtcGxhdGVPYmplY3Q2NigpKTsKZXhwb3J0IHZhciBjcmVhdGVPcmRlciA9IGdxbChfdGVtcGxhdGVPYmplY3Q2NygpKTsKZXhwb3J0IHZhciBjcmVhdGVPdXRjb21pbmdPcmRlciA9IGdxbChfdGVtcGxhdGVPYmplY3Q2OCgpKTsKZXhwb3J0IHZhciB1cGRhdGVPdXRjb21pbmdPcmRlciA9IGdxbChfdGVtcGxhdGVPYmplY3Q2OSgpKTsKZXhwb3J0IHZhciB1cGRhdGVPcmRlciA9IGdxbChfdGVtcGxhdGVPYmplY3Q3MCgpKTsKZXhwb3J0IHZhciBkZWxldGVTdXBwbGllciA9IGdxbChfdGVtcGxhdGVPYmplY3Q3MSgpKTsKZXhwb3J0IHZhciBkZWxldGVDdXN0b21lcnMgPSBncWwoX3RlbXBsYXRlT2JqZWN0NzIoKSk7CmV4cG9ydCB2YXIgZGVsZXRlQ3VzdG9tZXIgPSBncWwoX3RlbXBsYXRlT2JqZWN0NzMoKSk7CmV4cG9ydCB2YXIgZGVsZXRlRGlzY291bnRzID0gZ3FsKF90ZW1wbGF0ZU9iamVjdDc0KCkpOwpleHBvcnQgdmFyIGRlbGV0ZURpc2NvdW50ID0gZ3FsKF90ZW1wbGF0ZU9iamVjdDc1KCkpOwpleHBvcnQgdmFyIGRlbGV0ZUJyYW5jaGVzID0gZ3FsKF90ZW1wbGF0ZU9iamVjdDc2KCkpOwpleHBvcnQgdmFyIGRlbGV0ZUJyYW5jaCA9IGdxbChfdGVtcGxhdGVPYmplY3Q3NygpKTsKZXhwb3J0IHZhciBkZWxldGVQcm9kdWN0cyA9IGdxbChfdGVtcGxhdGVPYmplY3Q3OCgpKTsKZXhwb3J0IHZhciBkZWxldGVQcm9kdWN0ID0gZ3FsKF90ZW1wbGF0ZU9iamVjdDc5KCkpOwpleHBvcnQgdmFyIGRlbGV0ZUV4cGVuc2VzID0gZ3FsKF90ZW1wbGF0ZU9iamVjdDgwKCkpOwpleHBvcnQgdmFyIGRlbGV0ZUV4cGVuc2UgPSBncWwoX3RlbXBsYXRlT2JqZWN0ODEoKSk7CmV4cG9ydCB2YXIgYWxsVXNlcnMgPSBncWwoX3RlbXBsYXRlT2JqZWN0ODIoKSk7CmV4cG9ydCB2YXIgYWxsU3VwcGxpZXJzID0gZ3FsKF90ZW1wbGF0ZU9iamVjdDgzKCkpOwpleHBvcnQgdmFyIGFsbEJyYW5jaGVzID0gZ3FsKF90ZW1wbGF0ZU9iamVjdDg0KCkpOwpleHBvcnQgdmFyIGFsbFByb2R1Y3RzID0gZ3FsKF90ZW1wbGF0ZU9iamVjdDg1KCkpOwpleHBvcnQgdmFyIGFsbEN1c3RvbWVycyA9IGdxbChfdGVtcGxhdGVPYmplY3Q4NigpKTsKZXhwb3J0IHZhciBhbGxQZXJtaXNzaW9ucyA9IGdxbChfdGVtcGxhdGVPYmplY3Q4NygpKTs="},{"version":3,"sources":["/root/ahmed/vueJs/systemfinal/src/graphql/queries/queries.js"],"names":["gql","meQuery","createUserMutation","require","usersQuery","rolesQuery","ordersQuery","productsQuery","expensesQuery","customersQuery","rebatesQuery","suppliersQuery","outcomingOrdersQuery","branchesQuery","transactionsQuery","employeesQuery","discountsQuery","employeeQuery","rebateQuery","discountQuery","orderQuery","productByIsbn","outcomingOrderQuery","customerQuery","branchQuery","transactionQuery","supplierQuery","productQuery","expenseQuery","roleQuery","createRole","createBranch","createBalance","updateBranch","updateDiscount","createDiscount","createDiscountProduct","createSupplier","updateSupplier","createCustomer","updateCustomer","createProduct","createTransaction","updateTransaction","createStock","updateProduct","createExpense","createEmployee","updateEmployee","updateExpense","updateRole","deleteRoles","posData","deleteRole","deleteRecord","deleteRecords","deleteOrders","deleteOrder","deleteTransactions","deleteTransaction","deleteEmployees","deleteEmployee","deleteSuppliers","createOrderProduct","createOutcomingOrderProduct","updateOutcomingOrderProduct","updateOrderProduct","createTransactionProduct","updateTransactionProduct","createOrder","createOutcomingOrder","updateOutcomingOrder","updateOrder","deleteSupplier","deleteCustomers","deleteCustomer","deleteDiscounts","deleteDiscount","deleteBranches","deleteBranch","deleteProducts","deleteProduct","deleteExpenses","deleteExpense","allUsers","allSuppliers","allBranches","allProducts","allCustomers","allPermissions"],"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","sourcesContent":["import gql from \"graphql-tag\";\n\nexport const meQuery = gql`\n  query {\n    me {\n      id\n      name\n      roles {\n        name\n        slug\n        permissions {\n          slug\n        }\n      }\n      employee {\n        branch {\n          id\n        }\n      }\n    }\n  }\n`;\nexport const createUserMutation = require(\"../mutations/CreateUser.gql\");\nexport const usersQuery = gql`\n  query($first: Int, $search: String, $orderBy: [OrderByClause!], $page: Int) {\n    users(first: $first, page: $page, orderBy: $orderBy, search: $search) {\n      data {\n        id\n        name\n        email\n        created_at\n      }\n      paginatorInfo {\n        currentPage\n        total\n        perPage\n        lastPage\n        hasMorePages\n        firstItem\n        lastItem\n      }\n    }\n  }\n`;\n\nexport const rolesQuery = gql`\n  query($first: Int, $search: String, $orderBy: [OrderByClause!], $page: Int) {\n    roles(\n      slug: \"admin\"\n      first: $first\n      page: $page\n      orderBy: $orderBy\n      search: $search\n    ) {\n      data {\n        id\n        name\n        description\n        created_at\n      }\n      paginatorInfo {\n        currentPage\n        total\n        perPage\n        lastPage\n        hasMorePages\n        firstItem\n        lastItem\n      }\n    }\n  }\n`;\n\nexport const ordersQuery = gql`\n  query(\n    $from: Date\n    $to: Date\n    $created_by: Int\n    $first: Int\n    $branch: String\n    $search: String\n    $orderBy: String\n    $orderFunc: String\n    $page: Int\n  ) {\n    ordersQuery(\n      first: $first\n      branch_id: $branch\n      created_by: $created_by\n      from: $from\n      to: $to\n      page: $page\n      orderBy: $orderBy\n      orderFunc: $orderFunc\n      search: $search\n    ) {\n      data {\n        id\n        total\n        note\n        branch_id\n        created_at\n      }\n      paginatorInfo {\n        currentPage\n        total\n        perPage\n        lastPage\n        hasMorePages\n        firstItem\n        lastItem\n      }\n    }\n  }\n`;\n\nexport const productsQuery = gql`\n  query(\n    $first: Int\n    $search: String\n    $orderBy: [OrderByClause!]\n    $page: Int\n    $branch: Int\n  ) {\n    products(\n      first: $first\n      page: $page\n      orderBy: $orderBy\n      search: $search\n      branch: $branch\n    ) {\n      data {\n        id\n        name\n        isbn\n        price\n        created_at\n      }\n      paginatorInfo {\n        currentPage\n        total\n        perPage\n        lastPage\n        hasMorePages\n        firstItem\n        lastItem\n      }\n    }\n  }\n`;\n\nexport const expensesQuery = gql`\n  query($first: Int, $search: String, $orderBy: [OrderByClause!], $page: Int) {\n    expenses(first: $first, page: $page, orderBy: $orderBy, search: $search) {\n      data {\n        id\n        note\n        value\n        date\n        branch {\n          name\n        }\n        created_at\n      }\n      paginatorInfo {\n        currentPage\n        total\n        perPage\n        lastPage\n        hasMorePages\n        firstItem\n        lastItem\n      }\n    }\n  }\n`;\n\nexport const customersQuery = gql`\n  query(\n    $first: Int\n    $search: String\n    $orderBy: [OrderByClause!]\n    $page: Int\n    $branch: Int\n  ) {\n    customers(\n      first: $first\n      page: $page\n      orderBy: $orderBy\n      search: $search\n      branch_id: $branch\n    ) {\n      data {\n        id\n        name\n        branch {\n          name\n        }\n        phone\n        created_at\n      }\n      paginatorInfo {\n        currentPage\n        total\n        perPage\n        lastPage\n        hasMorePages\n        firstItem\n        lastItem\n      }\n    }\n  }\n`;\n\nexport const rebatesQuery = gql`\n  query($first: Int, $search: String, $orderBy: [OrderByClause!], $page: Int) {\n    rebates(first: $first, page: $page, orderBy: $orderBy, search: $search) {\n      data {\n        id\n        cause\n        value\n        employee {\n          name\n          id\n        }\n        created_at\n      }\n      paginatorInfo {\n        currentPage\n        total\n        perPage\n        lastPage\n        hasMorePages\n        firstItem\n        lastItem\n      }\n    }\n  }\n`;\n\nexport const suppliersQuery = gql`\n  query($first: Int, $search: String, $orderBy: [OrderByClause!], $page: Int) {\n    suppliers(first: $first, page: $page, orderBy: $orderBy, search: $search) {\n      data {\n        id\n        name\n        email\n        phone\n        created_at\n      }\n      paginatorInfo {\n        currentPage\n        total\n        perPage\n        lastPage\n        hasMorePages\n        firstItem\n        lastItem\n      }\n    }\n  }\n`;\n\nexport const outcomingOrdersQuery = gql`\n  query($first: Int, $search: String, $orderBy: [OrderByClause!], $page: Int) {\n    outcomingOrders(\n      first: $first\n      page: $page\n      orderBy: $orderBy\n      search: $search\n    ) {\n      data {\n        id\n        note\n        total\n        supplier {\n          id\n          name\n        }\n        created_at\n      }\n      paginatorInfo {\n        currentPage\n        total\n        perPage\n        lastPage\n        hasMorePages\n        firstItem\n        lastItem\n      }\n    }\n  }\n`;\n\nexport const branchesQuery = gql`\n  query($first: Int, $search: String, $orderBy: [OrderByClause!], $page: Int) {\n    branches(first: $first, page: $page, orderBy: $orderBy, search: $search) {\n      data {\n        id\n        name\n        address\n        phone\n        rent\n        created_at\n      }\n      paginatorInfo {\n        currentPage\n        total\n        perPage\n        lastPage\n        hasMorePages\n        firstItem\n        lastItem\n      }\n    }\n  }\n`;\n\nexport const transactionsQuery = gql`\n  query(\n    $first: Int\n    $branch: Int\n    $search: String\n    $orderBy: [OrderByClause!]\n    $page: Int\n  ) {\n    transactions(\n      first: $first\n      page: $page\n      orderBy: $orderBy\n      search: $search\n      branch_id: $branch\n    ) {\n      data {\n        id\n        approved\n        branch {\n          name\n        }\n        created_at\n      }\n      paginatorInfo {\n        currentPage\n        total\n        perPage\n        lastPage\n        hasMorePages\n        firstItem\n        lastItem\n      }\n    }\n  }\n`;\n\nexport const employeesQuery = gql`\n  query($first: Int, $search: String, $orderBy: [OrderByClause!], $page: Int) {\n    employees(first: $first, page: $page, orderBy: $orderBy, search: $search) {\n      data {\n        id\n        name\n        email\n        phone\n        salary\n        branch {\n          name\n        }\n        created_at\n      }\n      paginatorInfo {\n        currentPage\n        total\n        perPage\n        lastPage\n        hasMorePages\n        firstItem\n        lastItem\n      }\n    }\n  }\n`;\n\nexport const discountsQuery = gql`\n  query($first: Int, $search: String, $orderBy: [OrderByClause!], $page: Int) {\n    discounts(first: $first, page: $page, orderBy: $orderBy, search: $search) {\n      data {\n        id\n        title\n        type\n        branch {\n          name\n        }\n\n        created_at\n      }\n      paginatorInfo {\n        currentPage\n        total\n        perPage\n        lastPage\n        hasMorePages\n        firstItem\n        lastItem\n      }\n    }\n  }\n`;\n\nexport const employeeQuery = gql`\n  query($id: ID!) {\n    employee(id: $id) {\n      name\n      email\n      phone\n      salary\n      target\n      rebates {\n        id\n        value\n      }\n      branch {\n        name\n        id\n      }\n    }\n  }\n`;\n\nexport const rebateQuery = gql`\n  query($id: ID!) {\n    rebate(id: $id) {\n      cause\n      value\n      employee {\n        name\n        id\n      }\n    }\n  }\n`;\n\nexport const discountQuery = gql`\n  query($id: ID!) {\n    discount(id: $id) {\n      id\n      title\n      type\n      value\n      percent\n      products {\n        id\n        name\n      }\n      branch {\n        id\n        name\n      }\n    }\n  }\n`;\n\nexport const orderQuery = gql`\n  query($id: ID!) {\n    order(id: $id) {\n      id\n      productsPivot {\n        qty\n        product {\n          isbn\n          name\n          id\n          price\n        }\n      }\n      branch {\n        id\n        name\n      }\n      customer {\n        name\n        id\n      }\n      products {\n        name\n        id\n        price\n      }\n      discount\n      payment\n      total\n      note\n      created_at\n    }\n  }\n`;\n\nexport const productByIsbn = gql`\n  query($isbn: String!) {\n    productByIsbn(isbn: $isbn) {\n      id\n      price\n    }\n  }\n`;\n\nexport const outcomingOrderQuery = gql`\n  query($id: ID!) {\n    outcomingOrder(id: $id) {\n      id\n      note\n      total\n      productsPivot {\n        qty\n        product {\n          name\n          id\n          purchased_price\n        }\n      }\n      branch {\n        id\n        name\n      }\n      supplier {\n        id\n        name\n      }\n\n      products {\n        id\n        name\n        purchased_price\n      }\n      created_at\n    }\n  }\n`;\n\nexport const customerQuery = gql`\n  query($id: ID!) {\n    customer(id: $id) {\n      id\n      name\n      email\n      intersts\n      phone\n      branch {\n        id\n        name\n      }\n    }\n  }\n`;\n\nexport const branchQuery = gql`\n  query($id: ID!) {\n    branch(id: $id) {\n      id\n      name\n      email\n      address\n      phone\n      rent\n      bills\n      employees {\n        id\n        name\n      }\n      orders {\n        id\n        total\n      }\n      expenses {\n        value\n      }\n    }\n  }\n`;\n\nexport const transactionQuery = gql`\n  query($id: ID!) {\n    transaction(id: $id) {\n      id\n      approved\n      branch {\n        name\n        id\n      }\n      productsPivot {\n        qty\n      }\n      products {\n        id\n        name\n        isbn\n        price\n        purchased_price\n      }\n    }\n  }\n`;\n\nexport const supplierQuery = gql`\n  query($id: ID!) {\n    supplier(id: $id) {\n      id\n      name\n      email\n      phone\n    }\n  }\n`;\n\nexport const productQuery = gql`\n  query($id: ID!, $branch: ID) {\n    product(id: $id, branch: $branch) {\n      id\n      isbn\n      name\n      purchased_price\n      price\n      qty\n      orders {\n        id\n      }\n    }\n  }\n`;\n\nexport const expenseQuery = gql`\n  query($id: ID!) {\n    expense(id: $id) {\n      id\n      date\n      branch {\n        name\n        id\n      }\n      value\n      note\n    }\n  }\n`;\n\nexport const roleQuery = gql`\n  query($id: ID!) {\n    roleById(id: $id) {\n      id\n      name\n      slug\n      description\n      users {\n        name\n        id\n      }\n      permissions {\n        name\n        id\n      }\n      created_at\n    }\n  }\n`;\n\nexport const createRole = gql`\n  mutation(\n    $name: String!\n    $slug: String!\n    $permissions: [ID!]!\n    $users: [ID!]\n    $description: String\n  ) {\n    createRole(\n      input: {\n        name: $name\n        slug: $slug\n        permissions: $permissions\n        level: 1\n        users: $users\n        description: $description\n      }\n    ) {\n      id\n      name\n    }\n  }\n`;\n\nexport const createBranch = gql`\n  mutation(\n    $name: String!\n    $email: String\n    $address: String\n    $phone: String\n    $rent: Int\n    $bills: Int\n  ) {\n    createBranch(\n      input: {\n        name: $name\n        email: $email\n        address: $address\n        phone: $phone\n        rent: $rent\n        bills: $bills\n      }\n    ) {\n      id\n      name\n    }\n  }\n`;\n\nexport const createBalance = gql`\n  mutation($branch: ID!, $balance: Int!) {\n    createBalance(input: { branch_id: $branch, balance: $balance }) {\n      id\n    }\n  }\n`;\n\nexport const updateBranch = gql`\n  mutation(\n    $id: ID!\n    $name: String!\n    $email: String!\n    $address: String\n    $phone: String\n    $rent: Int\n    $bills: Int\n  ) {\n    updateBranch(\n      input: {\n        id: $id\n        name: $name\n        email: $email\n        address: $address\n        phone: $phone\n        rent: $rent\n        bills: $bills\n      }\n    ) {\n      id\n      name\n    }\n  }\n`;\n\nexport const updateDiscount = gql`\n  mutation(\n    $id: ID!\n    $type: String!\n    $value: Int\n    $title: String\n    $percent: Int\n    $branch: ID\n  ) {\n    updateDiscount(\n      input: {\n        id: $id\n        type: $type\n        value: $value\n        title: $title\n        percent: $percent\n        branch_id: $branch\n      }\n    ) {\n      id\n      title\n    }\n  }\n`;\n\nexport const createDiscount = gql`\n  mutation(\n    $type: String!\n    $value: Int\n    $title: String\n    $percent: Int\n    $branch: ID\n  ) {\n    createDiscount(\n      input: {\n        type: $type\n        value: $value\n        title: $title\n        percent: $percent\n        branch_id: $branch\n      }\n    ) {\n      id\n      title\n    }\n  }\n`;\n\nexport const createDiscountProduct = gql`\n  mutation($discount: ID!, $products: [ID!]!) {\n    createDiscountProduct(input: { discount: $discount, products: $products }) {\n      id\n      title\n    }\n  }\n`;\n\nexport const createSupplier = gql`\n  mutation($name: String!, $email: String, $phone: String) {\n    createSupplier(input: { name: $name, email: $email, phone: $phone }) {\n      id\n      name\n    }\n  }\n`;\n\nexport const updateSupplier = gql`\n  mutation($id: ID!, $name: String!, $email: String, $phone: String) {\n    updateSupplier(\n      input: { id: $id, name: $name, email: $email, phone: $phone }\n    ) {\n      id\n      name\n    }\n  }\n`;\n\nexport const createCustomer = gql`\n  mutation(\n    $name: String!\n    $email: String\n    $intersts: String\n    $branch: Int\n    $phone: String\n  ) {\n    createCustomer(\n      input: {\n        name: $name\n        email: $email\n        intersts: $intersts\n        branch_id: $branch\n        phone: $phone\n      }\n    ) {\n      id\n      name\n    }\n  }\n`;\n\nexport const updateCustomer = gql`\n  mutation(\n    $id: ID!\n    $name: String!\n    $email: String\n    $intersts: String\n    $branch: Int\n    $phone: String\n  ) {\n    updateCustomer(\n      input: {\n        id: $id\n        name: $name\n        email: $email\n        intersts: $intersts\n        branch_id: $branch\n        phone: $phone\n      }\n    ) {\n      id\n      name\n    }\n  }\n`;\nexport const createProduct = gql`\n  mutation(\n    $name: String!\n    $isbn: String!\n    $purchased_price: Int!\n    $price: Int!\n  ) {\n    createProduct(\n      input: {\n        name: $name\n        isbn: $isbn\n        purchased_price: $purchased_price\n        price: $price\n      }\n    ) {\n      id\n      name\n    }\n  }\n`;\n\nexport const createTransaction = gql`\n  mutation($branch: ID!) {\n    createTransaction(input: { branch_id: $branch }) {\n      id\n    }\n  }\n`;\n\nexport const updateTransaction = gql`\n  mutation($branch: ID!, $id: ID!, $approved: Boolean) {\n    updateTransaction(\n      input: { id: $id, branch_id: $branch, approved: $approved }\n    ) {\n      id\n    }\n  }\n`;\n\nexport const createStock = gql`\n  mutation($product: ID!, $qty: Int!, $branch: ID) {\n    createStock(\n      input: { product_id: $product, qty: $qty, branch_id: $branch }\n    ) {\n      id\n    }\n  }\n`;\n\nexport const updateProduct = gql`\n  mutation(\n    $id: ID!\n    $name: String!\n    $isbn: String!\n    $purchased_price: Int!\n    $price: Int!\n  ) {\n    updateProduct(\n      input: {\n        id: $id\n        name: $name\n        isbn: $isbn\n        purchased_price: $purchased_price\n        price: $price\n      }\n    ) {\n      id\n      name\n    }\n  }\n`;\n\nexport const createExpense = gql`\n  mutation($note: String!, $date: Date!, $branch: ID, $value: Int!) {\n    createExpense(\n      input: { date: $date, note: $note, branch_id: $branch, value: $value }\n    ) {\n      id\n    }\n  }\n`;\n\nexport const createEmployee = gql`\n  mutation(\n    $name: String!\n    $branch: ID\n    $target: Int\n    $salary: Int!\n    $email: String\n    $phone: String\n  ) {\n    createEmployee(\n      input: {\n        name: $name\n        target: $target\n        branch_id: $branch\n        salary: $salary\n        email: $email\n        phone: $phone\n      }\n    ) {\n      id\n      name\n    }\n  }\n`;\n\nexport const updateEmployee = gql`\n  mutation(\n    $name: String!\n    $id: ID!\n    $branch: ID\n    $target: Int\n    $salary: Int!\n    $email: String\n    $phone: String\n  ) {\n    updateEmployee(\n      input: {\n        id: $id\n        name: $name\n        target: $target\n        branch_id: $branch\n        salary: $salary\n        email: $email\n        phone: $phone\n      }\n    ) {\n      id\n      name\n    }\n  }\n`;\n\nexport const updateExpense = gql`\n  mutation($note: String!, $date: Date!, $branch: ID, $id: ID!, $value: Int!) {\n    updateExpense(\n      input: {\n        date: $date\n        id: $id\n        note: $note\n        branch_id: $branch\n        value: $value\n      }\n    ) {\n      id\n      value\n    }\n  }\n`;\n\nexport const updateRole = gql`\n  mutation(\n    $id: ID!\n    $name: String!\n    $slug: String!\n    $permissions: [ID!]!\n    $users: [ID!]!\n    $description: String\n  ) {\n    updateRole(\n      input: {\n        id: $id\n        name: $name\n        slug: $slug\n        permissions: $permissions\n        level: 1\n        users: $users\n        description: $description\n      }\n    ) {\n      id\n      name\n    }\n  }\n`;\n\nexport const deleteRoles = gql`\n  mutation($id: [ID!]!) {\n    deleteRoles(id: $id) {\n      name\n    }\n  }\n`;\n\nexport const posData = gql`\n  mutation($id: ID!) {\n    posData(id: $id) {\n      target\n      over\n      rest\n      sales\n    }\n  }\n`;\n\nexport const deleteRole = gql`\n  mutation($id: ID!) {\n    deleteRole(id: $id) {\n      name\n    }\n  }\n`;\n\nexport const deleteRecord = gql`\n  mutation($id: ID!, $table: String!) {\n    deleteRecord(id: $id, table: $table)\n  }\n`;\n\nexport const deleteRecords = gql`\n  mutation($ids: [ID!]!, $table: String!) {\n    deleteRecords(ids: $ids, table: $table)\n  }\n`;\n\nexport const deleteOrders = gql`\n  mutation($id: [ID!]!) {\n    deleteOrders(id: $id) {\n      id\n    }\n  }\n`;\n\nexport const deleteOrder = gql`\n  mutation($id: ID!) {\n    deleteOrder(id: $id) {\n      id\n    }\n  }\n`;\n\nexport const deleteTransactions = gql`\n  mutation($id: [ID!]!) {\n    deleteTransactions(id: $id) {\n      id\n    }\n  }\n`;\n\nexport const deleteTransaction = gql`\n  mutation($id: ID!) {\n    deleteTransaction(id: $id) {\n      id\n    }\n  }\n`;\n\nexport const deleteEmployees = gql`\n  mutation($id: [ID!]!) {\n    deleteEmployees(id: $id) {\n      name\n    }\n  }\n`;\n\nexport const deleteEmployee = gql`\n  mutation($id: ID!) {\n    deleteEmployee(id: $id) {\n      name\n    }\n  }\n`;\n\nexport const deleteSuppliers = gql`\n  mutation($id: [ID!]!) {\n    deleteSuppliers(id: $id) {\n      name\n    }\n  }\n`;\n\nexport const createOrderProduct = gql`\n  mutation(\n    $created_by: ID!\n    $note: String\n    $payment: String!\n    $discount: Int\n    $total: Int!\n    $customer: ID\n    $products: [ID!]!\n    $branch: ID\n    $qtys: [Int!]!\n  ) {\n    createOrderProduct(\n      input: {\n        branch: $branch\n        products: $products\n        qtys: $qtys\n        created_by: $created_by\n        note: $note\n        payment: $payment\n        discount: $discount\n        total: $total\n        customer_id: $customer\n      }\n    ) {\n      total\n    }\n  }\n`;\nexport const createOutcomingOrderProduct = gql`\n  mutation(\n    $outcomingOrder: ID!\n    $products: [ID!]!\n    $branch: ID\n    $qtys: [Int!]!\n  ) {\n    createOutcomingOrderProduct(\n      input: {\n        outcomingOrder: $outcomingOrder\n        branch: $branch\n        products: $products\n        qtys: $qtys\n      }\n    ) {\n      total\n    }\n  }\n`;\n\nexport const updateOutcomingOrderProduct = gql`\n  mutation(\n    $outcomingOrder: ID!\n    $products: [ID!]!\n    $branch: ID\n    $qtys: [Int!]!\n  ) {\n    updateOutcomingOrderProduct(\n      input: {\n        outcomingOrder: $outcomingOrder\n        branch: $branch\n        products: $products\n        qtys: $qtys\n      }\n    ) {\n      total\n    }\n  }\n`;\n\nexport const updateOrderProduct = gql`\n  mutation(\n    $order: ID\n    $products: [ID!]!\n    $branch: ID\n    $qtys: [Int!]!\n    $note: String\n    $payment: String!\n    $discount: Int\n    $created_by: ID!\n    $total: Int!\n    $customer: ID\n  ) {\n    updateOrderProduct(\n      input: {\n        order: $order\n        branch: $branch\n        products: $products\n        qtys: $qtys\n        note: $note\n        payment: $payment\n        discount: $discount\n        created_by: $created_by\n        total: $total\n        customer_id: $customer\n      }\n    ) {\n      total\n    }\n  }\n`;\n\nexport const createTransactionProduct = gql`\n  mutation($branch: ID!, $from_branch: ID, $products: [ID!]!, $qtys: [Int!]!) {\n    createTransactionProduct(\n      input: {\n        products: $products\n        branch: $branch\n        qtys: $qtys\n        from_branch: $from_branch\n      }\n    ) {\n      id\n    }\n  }\n`;\n\nexport const updateTransactionProduct = gql`\n  mutation($transaction: ID!, $branch: ID!, $products: [ID!]!, $qtys: [Int!]!) {\n    updateTransactionProduct(\n      input: {\n        transaction: $transaction\n        branch: $branch\n        products: $products\n        qtys: $qtys\n      }\n    ) {\n      id\n    }\n  }\n`;\n\nexport const createOrder = gql`\n  mutation(\n    $note: String\n    $discount: Int\n    $payment: String!\n    $created_by: ID!\n    $total: Int!\n    $customer: ID\n    $branch: ID\n  ) {\n    createOrder(\n      input: {\n        note: $note\n        payment: $payment\n        created_by: $created_by\n        discount: $discount\n        total: $total\n        customer_id: $customer\n        branch_id: $branch\n      }\n    ) {\n      id\n    }\n  }\n`;\nexport const createOutcomingOrder = gql`\n  mutation(\n    $note: String\n    $created_by: ID!\n    $total: Int!\n    $supplier: ID\n    $branch: ID\n  ) {\n    createOutcomingOrder(\n      input: {\n        note: $note\n        created_by: $created_by\n        total: $total\n        supplier_id: $supplier\n        branch_id: $branch\n      }\n    ) {\n      id\n    }\n  }\n`;\n\nexport const updateOutcomingOrder = gql`\n  mutation(\n    $id: ID!\n    $note: String\n    $updated_by: ID!\n    $total: Int!\n    $supplier: ID\n    $branch: ID\n  ) {\n    updateOutcomingOrder(\n      input: {\n        id: $id\n        note: $note\n        updated_by: $updated_by\n        total: $total\n        supplier_id: $supplier\n        branch_id: $branch\n      }\n    ) {\n      id\n    }\n  }\n`;\n\nexport const updateOrder = gql`\n  mutation(\n    $id: ID!\n    $note: String\n    $payment: String!\n    $discount: Int\n    $updated_by: ID!\n    $total: Int!\n    $customer: ID\n    $branch: ID\n  ) {\n    updateOrder(\n      input: {\n        id: $id\n        note: $note\n        payment: $payment\n        updated_by: $updated_by\n        discount: $discount\n        total: $total\n        customer_id: $customer\n        branch_id: $branch\n      }\n    ) {\n      id\n    }\n  }\n`;\n\nexport const deleteSupplier = gql`\n  mutation($id: ID!) {\n    deleteSupplier(id: $id) {\n      name\n    }\n  }\n`;\n\nexport const deleteCustomers = gql`\n  mutation($id: [ID!]!) {\n    deleteCustomers(id: $id) {\n      name\n    }\n  }\n`;\n\nexport const deleteCustomer = gql`\n  mutation($id: ID!) {\n    deleteCustomer(id: $id) {\n      name\n    }\n  }\n`;\n\nexport const deleteDiscounts = gql`\n  mutation($id: [ID!]!) {\n    deleteDiscounts(id: $id) {\n      id\n    }\n  }\n`;\n\nexport const deleteDiscount = gql`\n  mutation($id: ID!) {\n    deleteDiscount(id: $id) {\n      id\n    }\n  }\n`;\n\nexport const deleteBranches = gql`\n  mutation($id: [ID!]!) {\n    deleteBranches(id: $id) {\n      name\n    }\n  }\n`;\n\nexport const deleteBranch = gql`\n  mutation($id: ID!) {\n    deleteBranch(id: $id) {\n      name\n    }\n  }\n`;\n\nexport const deleteProducts = gql`\n  mutation($id: [ID!]!) {\n    deleteProducts(id: $id) {\n      name\n    }\n  }\n`;\n\nexport const deleteProduct = gql`\n  mutation($id: ID!) {\n    deleteProduct(id: $id) {\n      name\n    }\n  }\n`;\n\nexport const deleteExpenses = gql`\n  mutation($id: [ID!]!) {\n    deleteExpenses(id: $id) {\n      id\n    }\n  }\n`;\n\nexport const deleteExpense = gql`\n  mutation($id: ID!) {\n    deleteExpense(id: $id) {\n      id\n    }\n  }\n`;\n\nexport const allUsers = gql`\n  query {\n    allUsers {\n      name\n      id\n    }\n  }\n`;\n\nexport const allSuppliers = gql`\n  query {\n    allSuppliers {\n      name\n      id\n    }\n  }\n`;\n\nexport const allBranches = gql`\n  query {\n    allBranches {\n      name\n      id\n    }\n  }\n`;\n\nexport const allProducts = gql`\n  query {\n    allProducts {\n      isbn\n      name\n      price\n      purchased_price\n      qty\n      id\n    }\n  }\n`;\n\nexport const allCustomers = gql`\n  query {\n    allCustomers {\n      name\n      id\n    }\n  }\n`;\n\nexport const allPermissions = gql`\n  query {\n    allPermissions {\n      name\n      id\n    }\n  }\n`;\n"]}]}