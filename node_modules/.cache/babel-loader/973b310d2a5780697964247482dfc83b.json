{"remainingRequest":"/root/ahmed/vueJs/systemfinal/node_modules/thread-loader/dist/cjs.js!/root/ahmed/vueJs/systemfinal/node_modules/babel-loader/lib/index.js!/root/ahmed/vueJs/systemfinal/node_modules/cache-loader/dist/cjs.js??ref--0-0!/root/ahmed/vueJs/systemfinal/node_modules/vue-loader/lib/index.js??vue-loader-options!/root/ahmed/vueJs/systemfinal/src/views/Dashboard.vue?vue&type=script&lang=js&","dependencies":[{"path":"/root/ahmed/vueJs/systemfinal/src/views/Dashboard.vue","mtime":1604602456988},{"path":"/root/ahmed/vueJs/systemfinal/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/root/ahmed/vueJs/systemfinal/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/root/ahmed/vueJs/systemfinal/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/root/ahmed/vueJs/systemfinal/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/root/ahmed/vueJs/systemfinal/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Dashboard.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div id=\"main\">\n    <div class=\"row\">\n      <div class=\"content-wrapper-before\"></div>\n      <div class=\"col s12 mt-65\">\n        <div class=\"container\">\n          <!-- Current balance & total transactions cards-->\n          <div class=\"row mt-4\">\n            <div class=\"col s12 m12 l4\">\n              <!-- Current Balance -->\n              <div class=\"card animated  fadeInLeft \">\n                <div class=\"card-content\">\n                  <h4 class=\"card-title mb-0\">\n                    {{ $t(\"bestseller\") }}\n                    <i class=\"material-icons float-right\">more_vert</i>\n                  </h4>\n                  <p class=\"medium-small\">{{ $t(\"bestseller_month\") }}</p>\n                  <canvas id=\"bestseller-chart\" />\n                </div>\n              </div>\n            </div>\n            <div class=\"col s12 m12 l8 animated  fadeInRight\">\n              <!-- Total Transaction -->\n              <div class=\"card\">\n                <div class=\"card-content\">\n                  <h4 class=\"card-title mb-0\">\n                    {{ $t(\"revenue\") }}\n                    <i class=\"material-icons float-right\">more_vert</i>\n                  </h4>\n                  <p class=\"medium-small\">{{ $t(\"revenue_month\") }}</p>\n                  <canvas id=\"revenue-chart\" />\n                </div>\n              </div>\n            </div>\n            <!-- <div class=\"col s12 animated  fadeInRight\" v-if=\"!branch\">\n             \n              <div class=\"card\">\n                <div class=\"card-content\">\n                  <h4 class=\"card-title mb-0\">\n                    {{ $t(\"profit\") }}\n                    <i class=\"material-icons float-right\">more_vert</i>\n                  </h4>\n                  <p class=\"medium-small\">{{ $t(\"profit_month\") }}</p>\n                  <canvas id=\"profit-chart\" />\n                </div>\n              </div>\n            </div> -->\n\n            <div class=\"col s12 m8 l8 animated  fadeInLeft\" v-if=\"!branch\">\n              <div class=\"card\">\n                <div class=\"card-content\">\n                  <h4 class=\"card-title mb-0\">\n                    {{ $t(\"expenses\") }}\n                    <i class=\"material-icons float-right\">more_vert</i>\n                  </h4>\n                  <p class=\"medium-small\">{{ $t(\"expenses_month\") }}</p>\n                  <canvas id=\"expenses-chart\" />\n                </div>\n              </div>\n            </div>\n            <div class=\"col s12 m4 l4\" v-if=\"!branch\">\n              <div class=\"card animated  fadeInRight\">\n                <div class=\"card-content\">\n                  <h4 class=\"card-title mb-0\">\n                    {{ $t(\"revenue_branch\") }}\n                    <i class=\"material-icons float-right\">more_vert</i>\n                  </h4>\n                  <p class=\"medium-small\">{{ $t(\"revenue_branch_month\") }}</p>\n                  <canvas id=\"branches-chart\" />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport bestsellerChartData from \"@/charts/bestseller-chart-data.js\";\nimport revenueChartData from \"@/charts/revenue-chart-data.js\";\nimport profitChartData from \"@/charts/profit-chart-data.js\";\nimport expensesChartData from \"@/charts/expenses-chart-data.js\";\nimport branchesChartData from \"@/charts/branches-chart-data.js\";\nimport Chart from \"chart.js\";\nimport axios from \"axios\";\nimport { allBranches } from \"@/graphql/queries/queries.js\";\nimport { setTimeout } from \"timers\";\n\nexport default {\n  name: \"dashboard\",\n  apollo: {\n    allBranches() {\n      return {\n        query: allBranches\n      };\n    }\n  },\n  store: {\n    branch: \"branch_id\",\n    isPos: \"isPos\"\n  },\n  data() {\n    return {\n      bestsellerData: {\n        type: \"polarArea\",\n        data: {\n          labels: [],\n          datasets: []\n        },\n        options: {\n          responsive: true,\n          maintainAspectRatio: true,\n          aspectRatio: 0.92\n        }\n      },\n      expensesData: {\n        type: \"line\",\n        data: {\n          labels: [],\n          datasets: []\n        },\n        options: {\n          responsive: true,\n          lineTension: 1\n        }\n      },\n      revenueData: {\n        type: \"line\",\n        data: {\n          labels: [],\n          datasets: []\n        },\n        options: {\n          responsive: true,\n          lineTension: 1\n        }\n      },\n      allBranches: [],\n      bestsellerChartData,\n      revenueChartData,\n      profitChartData,\n      expensesChartData,\n      branchesChartData\n    };\n  },\n  //mixins:[meMixin],\n  mounted() {\n    this.getRevenueData();\n    this.getBestsellerData();\n    this.getExpensesData();\n    setTimeout(() => {\n      this.createChart(\"bestseller-chart\", this.bestsellerData);\n      this.createChart(\"revenue-chart\", this.revenueData);\n      this.createChart(\"profit-chart\", this.profitChartData);\n      this.createChart(\"branches-chart\", this.branchesChartData);\n    }, 5000);\n  },\n\n  methods: {\n    createChart(chartId, chartData) {\n      const ctx = document.getElementById(chartId);\n      new Chart(ctx, {\n        type: chartData.type,\n        data: chartData.data,\n        options: chartData.options\n      });\n    },\n    getRevenueData() {\n      if (this.isPos == false) {\n        axios\n          .get(\"http://systemapi.esolve-eg.com/public/chart\", {}, {})\n          .then(response => {\n            let data = response.data;\n            let datasets = [];\n            let labels = [];\n            data.forEach(d => {\n              labels.push(`${d.month}/${d.day}`);\n              datasets.push(parseInt(d.total));\n            });\n            this.revenueData.data.labels = labels;\n            this.revenueData.data.datasets = [\n              {\n                // one line graph\n                label: \"Sales\",\n                backgroundColor: \"rgba(249, 86, 129, .8)\",\n                data: datasets\n              }\n            ];\n          });\n        setTimeout(() => {\n          this.allBranches.forEach(branch => {\n            axios\n              .get(\n                `http://systemapi.esolve-eg.com/public/chart/${branch.id}`,\n                {},\n                {}\n              )\n              .then(response => {\n                let data = response.data;\n                let datasets = [];\n                let labels = [];\n                data.forEach(d => {\n                  labels.push(`${d.month}`);\n                  datasets.push(parseInt(d.total));\n                });\n                this.revenueData.data.datasets.push({\n                  // one line graph\n                  label: branch.name,\n                  backgroundColor: \"rgba(5, 169, 244 , .8)\",\n                  data: datasets\n                });\n              });\n          });\n        }, 3000);\n      } else {\n        axios\n          .get(\n            `http://systemapi.esolve-eg.com/public/chart/${this.branch}`,\n            {},\n            {}\n          )\n          .then(response => {\n            let data = response.data;\n            let datasets = [];\n            let labels = [];\n            data.forEach(d => {\n              labels.push(`${d.month}`);\n              datasets.push(parseInt(d.total));\n            });\n\n            this.revenueData.data.datasets.push({\n              // one line graph\n              label: \"point 90\",\n              backgroundColor: \"rgba(5, 169, 244 , .8)\",\n              data: datasets\n            });\n          });\n      }\n    },\n    getBranchRevenueData(branch) {\n      axios\n        .get(`http://systemapi.esolve-eg.com/public/chart/${branch.id}`, {}, {})\n        .then(response => {\n          let data = response.data;\n          let datasets = [];\n          let labels = [];\n          data.forEach(d => {\n            labels.push(`${d.month}`);\n            datasets.push(parseInt(d.total));\n          });\n\n          this.revenueData.data.datasets.push({\n            // one line graph\n            label: branch.name,\n            backgroundColor: \"rgba(5, 169, 244 , .8)\",\n            data: datasets\n          });\n        });\n    },\n    getBestsellerData() {\n      axios\n        .get(\"http://systemapi.esolve-eg.com/public/bestseller\", {}, {})\n        .then(response => {\n          let data = response.data;\n          let datasets = [\n            {\n              // one line graph\n              label: \"Total Sales\",\n              backgroundColor: [\n                \"rgba(5, 169, 244 , .8)\",\n                \"rgba(249, 86, 129, .8)\",\n                \"rgba(159, 93, 176 , .8)\"\n              ],\n              data: []\n            }\n          ];\n          let labels = [];\n          data.forEach(d => {\n            labels.push(`${d.name}`);\n            datasets[0].data.push(parseInt(d.qty));\n          });\n\n          this.bestsellerData.data.labels = labels;\n          this.bestsellerData.data.datasets = datasets;\n        });\n    },\n    getExpensesData() {\n      axios\n        .get(\"http://systemapi.esolve-eg.com/public/expenses\", {}, {})\n        .then(response => {\n          let data = response.data;\n          let datasets = [\n            {\n              // one line graph\n              label: \"Total Expenses\",\n              backgroundColor: [\"rgb(56, 84, 165, .8)\"],\n              data: []\n            }\n          ];\n          let labels = [];\n          data.forEach(d => {\n            labels.push(`${d.month}`);\n            datasets[0].data.push(parseInt(d.value));\n          });\n          this.expensesData.data.labels = labels;\n          this.expensesData.data.datasets = datasets;\n\n          this.createChart(\"expenses-chart\", this.expensesData);\n        });\n    }\n  }\n};\n</script>\n<style>\n@import url(\"../sass/views/_dashboard.min.css\");\n</style>\n"],"sourceRoot":"src/views"}]}