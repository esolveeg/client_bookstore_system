{"remainingRequest":"/home/ahmed/ahmedashrafdevv/esolveeg/projects/bookstore_system/client/systemfinal/node_modules/babel-loader/lib/index.js!/home/ahmed/ahmedashrafdevv/esolveeg/projects/bookstore_system/client/systemfinal/node_modules/eslint-loader/index.js??ref--13-0!/home/ahmed/ahmedashrafdevv/esolveeg/projects/bookstore_system/client/systemfinal/src/graphql/queries/queries.js","dependencies":[{"path":"/home/ahmed/ahmedashrafdevv/esolveeg/projects/bookstore_system/client/systemfinal/src/graphql/queries/queries.js","mtime":1609793655879},{"path":"/home/ahmed/ahmedashrafdevv/esolveeg/projects/bookstore_system/client/systemfinal/node_modules/cache-loader/dist/cjs.js","mtime":1609793563794},{"path":"/home/ahmed/ahmedashrafdevv/esolveeg/projects/bookstore_system/client/systemfinal/node_modules/babel-loader/lib/index.js","mtime":1609793590147},{"path":"/home/ahmed/ahmedashrafdevv/esolveeg/projects/bookstore_system/client/systemfinal/node_modules/eslint-loader/index.js","mtime":1609793554208}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/ahmed/ahmedashrafdevv/esolveeg/projects/bookstore_system/client/systemfinal/src/graphql/queries/queries.js"],"names":["gql","meQuery","createUserMutation","require","usersQuery","rolesQuery","ordersQuery","productsQuery","expensesQuery","customersQuery","rebatesQuery","suppliersQuery","outcomingOrdersQuery","branchesQuery","transactionsQuery","employeesQuery","discountsQuery","employeeQuery","rebateQuery","discountQuery","orderQuery","productByIsbn","outcomingOrderQuery","customerQuery","branchQuery","transactionQuery","supplierQuery","productQuery","expenseQuery","roleQuery","createRole","createBranch","createBalance","updateBranch","updateDiscount","createDiscount","createDiscountProduct","createSupplier","updateSupplier","createCustomer","updateCustomer","createProduct","createTransaction","updateTransaction","createStock","updateProduct","createExpense","createEmployee","updateEmployee","updateExpense","updateRole","deleteRoles","posData","deleteRole","deleteRecord","deleteRecords","deleteOrders","deleteOrder","deleteTransactions","deleteTransaction","deleteEmployees","deleteEmployee","deleteSuppliers","createOrderProduct","createOutcomingOrderProduct","updateOutcomingOrderProduct","updateOrderProduct","createTransactionProduct","updateTransactionProduct","createOrder","createOutcomingOrder","updateOutcomingOrder","updateOrder","deleteSupplier","deleteCustomers","deleteCustomer","deleteDiscounts","deleteDiscount","deleteBranches","deleteBranch","deleteProducts","deleteProduct","deleteExpenses","deleteExpense","allUsers","allSuppliers","allBranches","allProducts","allCustomers","allPermissions"],"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","sourcesContent":["import gql from \"graphql-tag\";\n\nexport const meQuery = gql`\n  query {\n    me {\n      id\n      name\n      roles {\n        name\n        slug\n        permissions {\n          slug\n        }\n      }\n      employee {\n        branch {\n          id\n        }\n      }\n    }\n  }\n`;\nexport const createUserMutation = require(\"../mutations/CreateUser.gql\");\nexport const usersQuery = gql`\n  query($first: Int, $search: String, $orderBy: [OrderByClause!], $page: Int) {\n    users(first: $first, page: $page, orderBy: $orderBy, search: $search) {\n      data {\n        id\n        name\n        email\n        created_at\n      }\n      paginatorInfo {\n        currentPage\n        total\n        perPage\n        lastPage\n        hasMorePages\n        firstItem\n        lastItem\n      }\n    }\n  }\n`;\n\nexport const rolesQuery = gql`\n  query($first: Int, $search: String, $orderBy: [OrderByClause!], $page: Int) {\n    roles(\n      slug: \"admin\"\n      first: $first\n      page: $page\n      orderBy: $orderBy\n      search: $search\n    ) {\n      data {\n        id\n        name\n        description\n        created_at\n      }\n      paginatorInfo {\n        currentPage\n        total\n        perPage\n        lastPage\n        hasMorePages\n        firstItem\n        lastItem\n      }\n    }\n  }\n`;\n\nexport const ordersQuery = gql`\n  query(\n    $from: Date\n    $to: Date\n    $created_by: Int\n    $first: Int\n    $branch: String\n    $search: String\n    $orderBy: String\n    $orderFunc: String\n    $page: Int\n  ) {\n    ordersQuery(\n      first: $first\n      branch_id: $branch\n      created_by: $created_by\n      from: $from\n      to: $to\n      page: $page\n      orderBy: $orderBy\n      orderFunc: $orderFunc\n      search: $search\n    ) {\n      data {\n        id\n        total\n        note\n        branch_id\n        created_at\n      }\n      paginatorInfo {\n        currentPage\n        total\n        perPage\n        lastPage\n        hasMorePages\n        firstItem\n        lastItem\n      }\n    }\n  }\n`;\n\nexport const productsQuery = gql`\n  query(\n    $first: Int\n    $search: String\n    $orderBy: [OrderByClause!]\n    $page: Int\n    $branch: Int\n  ) {\n    products(\n      first: $first\n      page: $page\n      orderBy: $orderBy\n      search: $search\n      branch: $branch\n    ) {\n      data {\n        id\n        name\n        isbn\n        price\n        created_at\n      }\n      paginatorInfo {\n        currentPage\n        total\n        perPage\n        lastPage\n        hasMorePages\n        firstItem\n        lastItem\n      }\n    }\n  }\n`;\n\nexport const expensesQuery = gql`\n  query($first: Int, $search: String, $orderBy: [OrderByClause!], $page: Int) {\n    expenses(first: $first, page: $page, orderBy: $orderBy, search: $search) {\n      data {\n        id\n        note\n        value\n        date\n        branch {\n          name\n        }\n        created_at\n      }\n      paginatorInfo {\n        currentPage\n        total\n        perPage\n        lastPage\n        hasMorePages\n        firstItem\n        lastItem\n      }\n    }\n  }\n`;\n\nexport const customersQuery = gql`\n  query(\n    $first: Int\n    $search: String\n    $orderBy: [OrderByClause!]\n    $page: Int\n    $branch: Int\n  ) {\n    customers(\n      first: $first\n      page: $page\n      orderBy: $orderBy\n      search: $search\n      branch_id: $branch\n    ) {\n      data {\n        id\n        name\n        branch {\n          name\n        }\n        phone\n        created_at\n      }\n      paginatorInfo {\n        currentPage\n        total\n        perPage\n        lastPage\n        hasMorePages\n        firstItem\n        lastItem\n      }\n    }\n  }\n`;\n\nexport const rebatesQuery = gql`\n  query($first: Int, $search: String, $orderBy: [OrderByClause!], $page: Int) {\n    rebates(first: $first, page: $page, orderBy: $orderBy, search: $search) {\n      data {\n        id\n        cause\n        value\n        employee {\n          name\n          id\n        }\n        created_at\n      }\n      paginatorInfo {\n        currentPage\n        total\n        perPage\n        lastPage\n        hasMorePages\n        firstItem\n        lastItem\n      }\n    }\n  }\n`;\n\nexport const suppliersQuery = gql`\n  query($first: Int, $search: String, $orderBy: [OrderByClause!], $page: Int) {\n    suppliers(first: $first, page: $page, orderBy: $orderBy, search: $search) {\n      data {\n        id\n        name\n        email\n        phone\n        created_at\n      }\n      paginatorInfo {\n        currentPage\n        total\n        perPage\n        lastPage\n        hasMorePages\n        firstItem\n        lastItem\n      }\n    }\n  }\n`;\n\nexport const outcomingOrdersQuery = gql`\n  query($first: Int, $search: String, $orderBy: [OrderByClause!], $page: Int) {\n    outcomingOrders(\n      first: $first\n      page: $page\n      orderBy: $orderBy\n      search: $search\n    ) {\n      data {\n        id\n        note\n        total\n        supplier {\n          id\n          name\n        }\n        created_at\n      }\n      paginatorInfo {\n        currentPage\n        total\n        perPage\n        lastPage\n        hasMorePages\n        firstItem\n        lastItem\n      }\n    }\n  }\n`;\n\nexport const branchesQuery = gql`\n  query($first: Int, $search: String, $orderBy: [OrderByClause!], $page: Int) {\n    branches(first: $first, page: $page, orderBy: $orderBy, search: $search) {\n      data {\n        id\n        name\n        address\n        phone\n        rent\n        created_at\n      }\n      paginatorInfo {\n        currentPage\n        total\n        perPage\n        lastPage\n        hasMorePages\n        firstItem\n        lastItem\n      }\n    }\n  }\n`;\n\nexport const transactionsQuery = gql`\n  query(\n    $first: Int\n    $branch: Int\n    $search: String\n    $orderBy: [OrderByClause!]\n    $page: Int\n  ) {\n    transactions(\n      first: $first\n      page: $page\n      orderBy: $orderBy\n      search: $search\n      branch_id: $branch\n    ) {\n      data {\n        id\n        approved\n        branch {\n          name\n        }\n        created_at\n      }\n      paginatorInfo {\n        currentPage\n        total\n        perPage\n        lastPage\n        hasMorePages\n        firstItem\n        lastItem\n      }\n    }\n  }\n`;\n\nexport const employeesQuery = gql`\n  query($first: Int, $search: String, $orderBy: [OrderByClause!], $page: Int) {\n    employees(first: $first, page: $page, orderBy: $orderBy, search: $search) {\n      data {\n        id\n        name\n        email\n        phone\n        salary\n        branch {\n          name\n        }\n        created_at\n      }\n      paginatorInfo {\n        currentPage\n        total\n        perPage\n        lastPage\n        hasMorePages\n        firstItem\n        lastItem\n      }\n    }\n  }\n`;\n\nexport const discountsQuery = gql`\n  query($first: Int, $search: String, $orderBy: [OrderByClause!], $page: Int) {\n    discounts(first: $first, page: $page, orderBy: $orderBy, search: $search) {\n      data {\n        id\n        title\n        type\n        branch {\n          name\n        }\n\n        created_at\n      }\n      paginatorInfo {\n        currentPage\n        total\n        perPage\n        lastPage\n        hasMorePages\n        firstItem\n        lastItem\n      }\n    }\n  }\n`;\n\nexport const employeeQuery = gql`\n  query($id: ID!) {\n    employee(id: $id) {\n      name\n      email\n      phone\n      salary\n      target\n      rebates {\n        id\n        value\n      }\n      branch {\n        name\n        id\n      }\n    }\n  }\n`;\n\nexport const rebateQuery = gql`\n  query($id: ID!) {\n    rebate(id: $id) {\n      cause\n      value\n      employee {\n        name\n        id\n      }\n    }\n  }\n`;\n\nexport const discountQuery = gql`\n  query($id: ID!) {\n    discount(id: $id) {\n      id\n      title\n      type\n      value\n      percent\n      products {\n        id\n        name\n      }\n      branch {\n        id\n        name\n      }\n    }\n  }\n`;\n\nexport const orderQuery = gql`\n  query($id: ID!) {\n    order(id: $id) {\n      id\n      productsPivot {\n        qty\n        product {\n          isbn\n          name\n          id\n          price\n        }\n      }\n      branch {\n        id\n        name\n      }\n      customer {\n        name\n        id\n      }\n      products {\n        name\n        id\n        price\n      }\n      discount\n      payment\n      total\n      note\n      created_at\n    }\n  }\n`;\n\nexport const productByIsbn = gql`\n  query($isbn: String!) {\n    productByIsbn(isbn: $isbn) {\n      id\n      price\n    }\n  }\n`;\n\nexport const outcomingOrderQuery = gql`\n  query($id: ID!) {\n    outcomingOrder(id: $id) {\n      id\n      note\n      total\n      productsPivot {\n        qty\n        product {\n          name\n          id\n          purchased_price\n        }\n      }\n      branch {\n        id\n        name\n      }\n      supplier {\n        id\n        name\n      }\n\n      products {\n        id\n        name\n        purchased_price\n      }\n      created_at\n    }\n  }\n`;\n\nexport const customerQuery = gql`\n  query($id: ID!) {\n    customer(id: $id) {\n      id\n      name\n      email\n      intersts\n      phone\n      branch {\n        id\n        name\n      }\n    }\n  }\n`;\n\nexport const branchQuery = gql`\n  query($id: ID!) {\n    branch(id: $id) {\n      id\n      name\n      email\n      address\n      phone\n      rent\n      bills\n      employees {\n        id\n        name\n      }\n      orders {\n        id\n        total\n      }\n      expenses {\n        value\n      }\n    }\n  }\n`;\n\nexport const transactionQuery = gql`\n  query($id: ID!) {\n    transaction(id: $id) {\n      id\n      approved\n      branch {\n        name\n        id\n      }\n      productsPivot {\n        qty\n      }\n      products {\n        id\n        name\n        isbn\n        price\n        purchased_price\n      }\n    }\n  }\n`;\n\nexport const supplierQuery = gql`\n  query($id: ID!) {\n    supplier(id: $id) {\n      id\n      name\n      email\n      phone\n    }\n  }\n`;\n\nexport const productQuery = gql`\n  query($id: ID!, $branch: ID) {\n    product(id: $id, branch: $branch) {\n      id\n      isbn\n      name\n      purchased_price\n      price\n      qty\n      orders {\n        id\n      }\n    }\n  }\n`;\n\nexport const expenseQuery = gql`\n  query($id: ID!) {\n    expense(id: $id) {\n      id\n      date\n      branch {\n        name\n        id\n      }\n      value\n      note\n    }\n  }\n`;\n\nexport const roleQuery = gql`\n  query($id: ID!) {\n    roleById(id: $id) {\n      id\n      name\n      slug\n      description\n      users {\n        name\n        id\n      }\n      permissions {\n        name\n        id\n      }\n      created_at\n    }\n  }\n`;\n\nexport const createRole = gql`\n  mutation(\n    $name: String!\n    $slug: String!\n    $permissions: [ID!]!\n    $users: [ID!]\n    $description: String\n  ) {\n    createRole(\n      input: {\n        name: $name\n        slug: $slug\n        permissions: $permissions\n        level: 1\n        users: $users\n        description: $description\n      }\n    ) {\n      id\n      name\n    }\n  }\n`;\n\nexport const createBranch = gql`\n  mutation(\n    $name: String!\n    $email: String\n    $address: String\n    $phone: String\n    $rent: Int\n    $bills: Int\n  ) {\n    createBranch(\n      input: {\n        name: $name\n        email: $email\n        address: $address\n        phone: $phone\n        rent: $rent\n        bills: $bills\n      }\n    ) {\n      id\n      name\n    }\n  }\n`;\n\nexport const createBalance = gql`\n  mutation($branch: ID!, $balance: Int!) {\n    createBalance(input: { branch_id: $branch, balance: $balance }) {\n      id\n    }\n  }\n`;\n\nexport const updateBranch = gql`\n  mutation(\n    $id: ID!\n    $name: String!\n    $email: String!\n    $address: String\n    $phone: String\n    $rent: Int\n    $bills: Int\n  ) {\n    updateBranch(\n      input: {\n        id: $id\n        name: $name\n        email: $email\n        address: $address\n        phone: $phone\n        rent: $rent\n        bills: $bills\n      }\n    ) {\n      id\n      name\n    }\n  }\n`;\n\nexport const updateDiscount = gql`\n  mutation(\n    $id: ID!\n    $type: String!\n    $value: Int\n    $title: String\n    $percent: Int\n    $branch: ID\n  ) {\n    updateDiscount(\n      input: {\n        id: $id\n        type: $type\n        value: $value\n        title: $title\n        percent: $percent\n        branch_id: $branch\n      }\n    ) {\n      id\n      title\n    }\n  }\n`;\n\nexport const createDiscount = gql`\n  mutation(\n    $type: String!\n    $value: Int\n    $title: String\n    $percent: Int\n    $branch: ID\n  ) {\n    createDiscount(\n      input: {\n        type: $type\n        value: $value\n        title: $title\n        percent: $percent\n        branch_id: $branch\n      }\n    ) {\n      id\n      title\n    }\n  }\n`;\n\nexport const createDiscountProduct = gql`\n  mutation($discount: ID!, $products: [ID!]!) {\n    createDiscountProduct(input: { discount: $discount, products: $products }) {\n      id\n      title\n    }\n  }\n`;\n\nexport const createSupplier = gql`\n  mutation($name: String!, $email: String, $phone: String) {\n    createSupplier(input: { name: $name, email: $email, phone: $phone }) {\n      id\n      name\n    }\n  }\n`;\n\nexport const updateSupplier = gql`\n  mutation($id: ID!, $name: String!, $email: String, $phone: String) {\n    updateSupplier(\n      input: { id: $id, name: $name, email: $email, phone: $phone }\n    ) {\n      id\n      name\n    }\n  }\n`;\n\nexport const createCustomer = gql`\n  mutation(\n    $name: String!\n    $email: String\n    $intersts: String\n    $branch: Int\n    $phone: String\n  ) {\n    createCustomer(\n      input: {\n        name: $name\n        email: $email\n        intersts: $intersts\n        branch_id: $branch\n        phone: $phone\n      }\n    ) {\n      id\n      name\n    }\n  }\n`;\n\nexport const updateCustomer = gql`\n  mutation(\n    $id: ID!\n    $name: String!\n    $email: String\n    $intersts: String\n    $branch: Int\n    $phone: String\n  ) {\n    updateCustomer(\n      input: {\n        id: $id\n        name: $name\n        email: $email\n        intersts: $intersts\n        branch_id: $branch\n        phone: $phone\n      }\n    ) {\n      id\n      name\n    }\n  }\n`;\nexport const createProduct = gql`\n  mutation(\n    $name: String!\n    $isbn: String!\n    $purchased_price: Int!\n    $price: Int!\n  ) {\n    createProduct(\n      input: {\n        name: $name\n        isbn: $isbn\n        purchased_price: $purchased_price\n        price: $price\n      }\n    ) {\n      id\n      name\n    }\n  }\n`;\n\nexport const createTransaction = gql`\n  mutation($branch: ID!) {\n    createTransaction(input: { branch_id: $branch }) {\n      id\n    }\n  }\n`;\n\nexport const updateTransaction = gql`\n  mutation($branch: ID!, $id: ID!, $approved: Boolean) {\n    updateTransaction(\n      input: { id: $id, branch_id: $branch, approved: $approved }\n    ) {\n      id\n    }\n  }\n`;\n\nexport const createStock = gql`\n  mutation($product: ID!, $qty: Int!, $branch: ID) {\n    createStock(\n      input: { product_id: $product, qty: $qty, branch_id: $branch }\n    ) {\n      id\n    }\n  }\n`;\n\nexport const updateProduct = gql`\n  mutation(\n    $id: ID!\n    $name: String!\n    $isbn: String!\n    $purchased_price: Int!\n    $price: Int!\n  ) {\n    updateProduct(\n      input: {\n        id: $id\n        name: $name\n        isbn: $isbn\n        purchased_price: $purchased_price\n        price: $price\n      }\n    ) {\n      id\n      name\n    }\n  }\n`;\n\nexport const createExpense = gql`\n  mutation($note: String!, $date: Date!, $branch: ID, $value: Int!) {\n    createExpense(\n      input: { date: $date, note: $note, branch_id: $branch, value: $value }\n    ) {\n      id\n    }\n  }\n`;\n\nexport const createEmployee = gql`\n  mutation(\n    $name: String!\n    $branch: ID\n    $target: Int\n    $salary: Int!\n    $email: String\n    $phone: String\n  ) {\n    createEmployee(\n      input: {\n        name: $name\n        target: $target\n        branch_id: $branch\n        salary: $salary\n        email: $email\n        phone: $phone\n      }\n    ) {\n      id\n      name\n    }\n  }\n`;\n\nexport const updateEmployee = gql`\n  mutation(\n    $name: String!\n    $id: ID!\n    $branch: ID\n    $target: Int\n    $salary: Int!\n    $email: String\n    $phone: String\n  ) {\n    updateEmployee(\n      input: {\n        id: $id\n        name: $name\n        target: $target\n        branch_id: $branch\n        salary: $salary\n        email: $email\n        phone: $phone\n      }\n    ) {\n      id\n      name\n    }\n  }\n`;\n\nexport const updateExpense = gql`\n  mutation($note: String!, $date: Date!, $branch: ID, $id: ID!, $value: Int!) {\n    updateExpense(\n      input: {\n        date: $date\n        id: $id\n        note: $note\n        branch_id: $branch\n        value: $value\n      }\n    ) {\n      id\n      value\n    }\n  }\n`;\n\nexport const updateRole = gql`\n  mutation(\n    $id: ID!\n    $name: String!\n    $slug: String!\n    $permissions: [ID!]!\n    $users: [ID!]!\n    $description: String\n  ) {\n    updateRole(\n      input: {\n        id: $id\n        name: $name\n        slug: $slug\n        permissions: $permissions\n        level: 1\n        users: $users\n        description: $description\n      }\n    ) {\n      id\n      name\n    }\n  }\n`;\n\nexport const deleteRoles = gql`\n  mutation($id: [ID!]!) {\n    deleteRoles(id: $id) {\n      name\n    }\n  }\n`;\n\nexport const posData = gql`\n  mutation($id: ID!) {\n    posData(id: $id) {\n      target\n      over\n      rest\n      sales\n    }\n  }\n`;\n\nexport const deleteRole = gql`\n  mutation($id: ID!) {\n    deleteRole(id: $id) {\n      name\n    }\n  }\n`;\n\nexport const deleteRecord = gql`\n  mutation($id: ID!, $table: String!) {\n    deleteRecord(id: $id, table: $table)\n  }\n`;\n\nexport const deleteRecords = gql`\n  mutation($ids: [ID!]!, $table: String!) {\n    deleteRecords(ids: $ids, table: $table)\n  }\n`;\n\nexport const deleteOrders = gql`\n  mutation($id: [ID!]!) {\n    deleteOrders(id: $id) {\n      id\n    }\n  }\n`;\n\nexport const deleteOrder = gql`\n  mutation($id: ID!) {\n    deleteOrder(id: $id) {\n      id\n    }\n  }\n`;\n\nexport const deleteTransactions = gql`\n  mutation($id: [ID!]!) {\n    deleteTransactions(id: $id) {\n      id\n    }\n  }\n`;\n\nexport const deleteTransaction = gql`\n  mutation($id: ID!) {\n    deleteTransaction(id: $id) {\n      id\n    }\n  }\n`;\n\nexport const deleteEmployees = gql`\n  mutation($id: [ID!]!) {\n    deleteEmployees(id: $id) {\n      name\n    }\n  }\n`;\n\nexport const deleteEmployee = gql`\n  mutation($id: ID!) {\n    deleteEmployee(id: $id) {\n      name\n    }\n  }\n`;\n\nexport const deleteSuppliers = gql`\n  mutation($id: [ID!]!) {\n    deleteSuppliers(id: $id) {\n      name\n    }\n  }\n`;\n\nexport const createOrderProduct = gql`\n  mutation(\n    $created_by: ID!\n    $note: String\n    $payment: String!\n    $discount: Int\n    $total: Int!\n    $customer: ID\n    $products: [ID!]!\n    $branch: ID\n    $qtys: [Int!]!\n  ) {\n    createOrderProduct(\n      input: {\n        branch: $branch\n        products: $products\n        qtys: $qtys\n        created_by: $created_by\n        note: $note\n        payment: $payment\n        discount: $discount\n        total: $total\n        customer_id: $customer\n      }\n    ) {\n      total\n    }\n  }\n`;\nexport const createOutcomingOrderProduct = gql`\n  mutation(\n    $outcomingOrder: ID!\n    $products: [ID!]!\n    $branch: ID\n    $qtys: [Int!]!\n  ) {\n    createOutcomingOrderProduct(\n      input: {\n        outcomingOrder: $outcomingOrder\n        branch: $branch\n        products: $products\n        qtys: $qtys\n      }\n    ) {\n      total\n    }\n  }\n`;\n\nexport const updateOutcomingOrderProduct = gql`\n  mutation(\n    $outcomingOrder: ID!\n    $products: [ID!]!\n    $branch: ID\n    $qtys: [Int!]!\n  ) {\n    updateOutcomingOrderProduct(\n      input: {\n        outcomingOrder: $outcomingOrder\n        branch: $branch\n        products: $products\n        qtys: $qtys\n      }\n    ) {\n      total\n    }\n  }\n`;\n\nexport const updateOrderProduct = gql`\n  mutation(\n    $order: ID\n    $products: [ID!]!\n    $branch: ID\n    $qtys: [Int!]!\n    $note: String\n    $payment: String!\n    $discount: Int\n    $created_by: ID!\n    $total: Int!\n    $customer: ID\n  ) {\n    updateOrderProduct(\n      input: {\n        order: $order\n        branch: $branch\n        products: $products\n        qtys: $qtys\n        note: $note\n        payment: $payment\n        discount: $discount\n        created_by: $created_by\n        total: $total\n        customer_id: $customer\n      }\n    ) {\n      total\n    }\n  }\n`;\n\nexport const createTransactionProduct = gql`\n  mutation($branch: ID!, $from_branch: ID, $products: [ID!]!, $qtys: [Int!]!) {\n    createTransactionProduct(\n      input: {\n        products: $products\n        branch: $branch\n        qtys: $qtys\n        from_branch: $from_branch\n      }\n    ) {\n      id\n    }\n  }\n`;\n\nexport const updateTransactionProduct = gql`\n  mutation($transaction: ID!, $branch: ID!, $products: [ID!]!, $qtys: [Int!]!) {\n    updateTransactionProduct(\n      input: {\n        transaction: $transaction\n        branch: $branch\n        products: $products\n        qtys: $qtys\n      }\n    ) {\n      id\n    }\n  }\n`;\n\nexport const createOrder = gql`\n  mutation(\n    $note: String\n    $discount: Int\n    $payment: String!\n    $created_by: ID!\n    $total: Int!\n    $customer: ID\n    $branch: ID\n  ) {\n    createOrder(\n      input: {\n        note: $note\n        payment: $payment\n        created_by: $created_by\n        discount: $discount\n        total: $total\n        customer_id: $customer\n        branch_id: $branch\n      }\n    ) {\n      id\n    }\n  }\n`;\nexport const createOutcomingOrder = gql`\n  mutation(\n    $note: String\n    $created_by: ID!\n    $total: Int!\n    $supplier: ID\n    $branch: ID\n  ) {\n    createOutcomingOrder(\n      input: {\n        note: $note\n        created_by: $created_by\n        total: $total\n        supplier_id: $supplier\n        branch_id: $branch\n      }\n    ) {\n      id\n    }\n  }\n`;\n\nexport const updateOutcomingOrder = gql`\n  mutation(\n    $id: ID!\n    $note: String\n    $updated_by: ID!\n    $total: Int!\n    $supplier: ID\n    $branch: ID\n  ) {\n    updateOutcomingOrder(\n      input: {\n        id: $id\n        note: $note\n        updated_by: $updated_by\n        total: $total\n        supplier_id: $supplier\n        branch_id: $branch\n      }\n    ) {\n      id\n    }\n  }\n`;\n\nexport const updateOrder = gql`\n  mutation(\n    $id: ID!\n    $note: String\n    $payment: String!\n    $discount: Int\n    $updated_by: ID!\n    $total: Int!\n    $customer: ID\n    $branch: ID\n  ) {\n    updateOrder(\n      input: {\n        id: $id\n        note: $note\n        payment: $payment\n        updated_by: $updated_by\n        discount: $discount\n        total: $total\n        customer_id: $customer\n        branch_id: $branch\n      }\n    ) {\n      id\n    }\n  }\n`;\n\nexport const deleteSupplier = gql`\n  mutation($id: ID!) {\n    deleteSupplier(id: $id) {\n      name\n    }\n  }\n`;\n\nexport const deleteCustomers = gql`\n  mutation($id: [ID!]!) {\n    deleteCustomers(id: $id) {\n      name\n    }\n  }\n`;\n\nexport const deleteCustomer = gql`\n  mutation($id: ID!) {\n    deleteCustomer(id: $id) {\n      name\n    }\n  }\n`;\n\nexport const deleteDiscounts = gql`\n  mutation($id: [ID!]!) {\n    deleteDiscounts(id: $id) {\n      id\n    }\n  }\n`;\n\nexport const deleteDiscount = gql`\n  mutation($id: ID!) {\n    deleteDiscount(id: $id) {\n      id\n    }\n  }\n`;\n\nexport const deleteBranches = gql`\n  mutation($id: [ID!]!) {\n    deleteBranches(id: $id) {\n      name\n    }\n  }\n`;\n\nexport const deleteBranch = gql`\n  mutation($id: ID!) {\n    deleteBranch(id: $id) {\n      name\n    }\n  }\n`;\n\nexport const deleteProducts = gql`\n  mutation($id: [ID!]!) {\n    deleteProducts(id: $id) {\n      name\n    }\n  }\n`;\n\nexport const deleteProduct = gql`\n  mutation($id: ID!) {\n    deleteProduct(id: $id) {\n      name\n    }\n  }\n`;\n\nexport const deleteExpenses = gql`\n  mutation($id: [ID!]!) {\n    deleteExpenses(id: $id) {\n      id\n    }\n  }\n`;\n\nexport const deleteExpense = gql`\n  mutation($id: ID!) {\n    deleteExpense(id: $id) {\n      id\n    }\n  }\n`;\n\nexport const allUsers = gql`\n  query {\n    allUsers {\n      name\n      id\n    }\n  }\n`;\n\nexport const allSuppliers = gql`\n  query {\n    allSuppliers {\n      name\n      id\n    }\n  }\n`;\n\nexport const allBranches = gql`\n  query {\n    allBranches {\n      name\n      id\n    }\n  }\n`;\n\nexport const allProducts = gql`\n  query {\n    allProducts {\n      isbn\n      name\n      price\n      purchased_price\n      qty\n      id\n    }\n  }\n`;\n\nexport const allCustomers = gql`\n  query {\n    allCustomers {\n      name\n      id\n    }\n  }\n`;\n\nexport const allPermissions = gql`\n  query {\n    allPermissions {\n      name\n      id\n    }\n  }\n`;\n"]}]}