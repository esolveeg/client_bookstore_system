{"remainingRequest":"/root/ahmed/vueJs/systemfinal/node_modules/thread-loader/dist/cjs.js!/root/ahmed/vueJs/systemfinal/node_modules/babel-loader/lib/index.js!/root/ahmed/vueJs/systemfinal/node_modules/eslint-loader/index.js??ref--13-0!/root/ahmed/vueJs/systemfinal/src/vue-apollo.js","dependencies":[{"path":"/root/ahmed/vueJs/systemfinal/src/vue-apollo.js","mtime":1603903913178},{"path":"/root/ahmed/vueJs/systemfinal/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/root/ahmed/vueJs/systemfinal/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/root/ahmed/vueJs/systemfinal/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/root/ahmed/vueJs/systemfinal/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QuZ2V0LW93bi1wcm9wZXJ0eS1kZXNjcmlwdG9yIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmdldC1vd24tcHJvcGVydHktZGVzY3JpcHRvcnMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3Qua2V5cyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmciOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2RlZmluZVByb3BlcnR5IGZyb20gIi9yb290L2FobWVkL3Z1ZUpzL3N5c3RlbWZpbmFsL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS1jb3JlanMzL2hlbHBlcnMvZXNtL2RlZmluZVByb3BlcnR5IjsKCmZ1bmN0aW9uIG93bktleXMob2JqZWN0LCBlbnVtZXJhYmxlT25seSkgeyB2YXIga2V5cyA9IE9iamVjdC5rZXlzKG9iamVjdCk7IGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7IHZhciBzeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhvYmplY3QpOyBpZiAoZW51bWVyYWJsZU9ubHkpIHN5bWJvbHMgPSBzeW1ib2xzLmZpbHRlcihmdW5jdGlvbiAoc3ltKSB7IHJldHVybiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG9iamVjdCwgc3ltKS5lbnVtZXJhYmxlOyB9KTsga2V5cy5wdXNoLmFwcGx5KGtleXMsIHN5bWJvbHMpOyB9IHJldHVybiBrZXlzOyB9CgpmdW5jdGlvbiBfb2JqZWN0U3ByZWFkKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldICE9IG51bGwgPyBhcmd1bWVudHNbaV0gOiB7fTsgaWYgKGkgJSAyKSB7IG93bktleXMoc291cmNlLCB0cnVlKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsgX2RlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBzb3VyY2Vba2V5XSk7IH0pOyB9IGVsc2UgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMoc291cmNlKSk7IH0gZWxzZSB7IG93bktleXMoc291cmNlKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHNvdXJjZSwga2V5KSk7IH0pOyB9IH0gcmV0dXJuIHRhcmdldDsgfQoKaW1wb3J0IFZ1ZSBmcm9tICJ2dWUiOwppbXBvcnQgVnVlQXBvbGxvIGZyb20gInZ1ZS1hcG9sbG8iOwppbXBvcnQgeyBjcmVhdGVBcG9sbG9DbGllbnQsIHJlc3RhcnRXZWJzb2NrZXRzIH0gZnJvbSAidnVlLWNsaS1wbHVnaW4tYXBvbGxvL2dyYXBocWwtY2xpZW50IjsgLy8gSW5zdGFsbCB0aGUgdnVlIHBsdWdpbgoKVnVlLnVzZShWdWVBcG9sbG8pOyAvLyBOYW1lIG9mIHRoZSBsb2NhbFN0b3JhZ2UgaXRlbQoKdmFyIEFVVEhfVE9LRU4gPSAiYXBvbGxvLXRva2VuIjsgLy8gSHR0cCBlbmRwb2ludAoKdmFyIGh0dHBFbmRwb2ludCA9IHByb2Nlc3MuZW52LlZVRV9BUFBfR1JBUEhRTF9IVFRQOyAvLyBDb25maWcKCnZhciBkZWZhdWx0T3B0aW9ucyA9IHsKICAvLyBZb3UgY2FuIHVzZSBgaHR0cHNgIGZvciBzZWN1cmUgY29ubmVjdGlvbiAocmVjb21tZW5kZWQgaW4gcHJvZHVjdGlvbikKICBodHRwRW5kcG9pbnQ6IGh0dHBFbmRwb2ludCwKICAvLyBZb3UgY2FuIHVzZSBgd3NzYCBmb3Igc2VjdXJlIGNvbm5lY3Rpb24gKHJlY29tbWVuZGVkIGluIHByb2R1Y3Rpb24pCiAgLy8gVXNlIGBudWxsYCB0byBkaXNhYmxlIHN1YnNjcmlwdGlvbnMKICB3c0VuZHBvaW50OiBudWxsLAogIC8vIExvY2FsU3RvcmFnZSB0b2tlbgogIHRva2VuTmFtZTogQVVUSF9UT0tFTiwKICAvLyBFbmFibGUgQXV0b21hdGljIFF1ZXJ5IHBlcnNpc3Rpbmcgd2l0aCBBcG9sbG8gRW5naW5lCiAgcGVyc2lzdGluZzogZmFsc2UsCiAgLy8gVXNlIHdlYnNvY2tldHMgZm9yIGV2ZXJ5dGhpbmcgKG5vIEhUVFApCiAgLy8gWW91IG5lZWQgdG8gcGFzcyBhIGB3c0VuZHBvaW50YCBmb3IgdGhpcyB0byB3b3JrCiAgd2Vic29ja2V0c09ubHk6IGZhbHNlLAogIC8vIElzIGJlaW5nIHJlbmRlcmVkIG9uIHRoZSBzZXJ2ZXI/CiAgc3NyOiBmYWxzZSAvLyBPdmVycmlkZSBkZWZhdWx0IGFwb2xsbyBsaW5rCiAgLy8gbm90ZTogZG9uJ3Qgb3ZlcnJpZGUgaHR0cExpbmsgaGVyZSwgc3BlY2lmeSBodHRwTGluayBvcHRpb25zIGluIHRoZQogIC8vIGh0dHBMaW5rT3B0aW9ucyBwcm9wZXJ0eSBvZiBkZWZhdWx0T3B0aW9ucy4KICAvLyBsaW5rOiBteUxpbmsKICAvLyBPdmVycmlkZSBkZWZhdWx0IGNhY2hlCiAgLy8gY2FjaGU6IG15Q2FjaGUKICAvLyBPdmVycmlkZSB0aGUgd2F5IHRoZSBBdXRob3JpemF0aW9uIGhlYWRlciBpcyBzZXQKICAvLyBnZXRBdXRoOiAodG9rZW5OYW1lKSA9PiAuLi4KICAvLyBBZGRpdGlvbmFsIEFwb2xsb0NsaWVudCBvcHRpb25zCiAgLy8gYXBvbGxvOiB7IC4uLiB9CiAgLy8gQ2xpZW50IGxvY2FsIGRhdGEgKHNlZSBhcG9sbG8tbGluay1zdGF0ZSkKICAvLyBjbGllbnRTdGF0ZTogeyByZXNvbHZlcnM6IHsgLi4uIH0sIGRlZmF1bHRzOiB7IC4uLiB9IH0KCn07IC8vIENhbGwgdGhpcyBpbiB0aGUgVnVlIGFwcCBmaWxlCgpleHBvcnQgZnVuY3Rpb24gY3JlYXRlUHJvdmlkZXIoKSB7CiAgdmFyIG9wdGlvbnMgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IHt9OwoKICAvLyBDcmVhdGUgYXBvbGxvIGNsaWVudAogIHZhciBfY3JlYXRlQXBvbGxvQ2xpZW50ID0gY3JlYXRlQXBvbGxvQ2xpZW50KF9vYmplY3RTcHJlYWQoe30sIGRlZmF1bHRPcHRpb25zLCB7fSwgb3B0aW9ucykpLAogICAgICBhcG9sbG9DbGllbnQgPSBfY3JlYXRlQXBvbGxvQ2xpZW50LmFwb2xsb0NsaWVudCwKICAgICAgd3NDbGllbnQgPSBfY3JlYXRlQXBvbGxvQ2xpZW50LndzQ2xpZW50OwoKICBhcG9sbG9DbGllbnQud3NDbGllbnQgPSB3c0NsaWVudDsgLy8gQ3JlYXRlIHZ1ZSBhcG9sbG8gcHJvdmlkZXIKCiAgdmFyIGFwb2xsb1Byb3ZpZGVyID0gbmV3IFZ1ZUFwb2xsbyh7CiAgICBkZWZhdWx0Q2xpZW50OiBhcG9sbG9DbGllbnQsCiAgICBkZWZhdWx0T3B0aW9uczogewogICAgICAkcXVlcnk6IHsKICAgICAgICBmZXRjaFBvbGljeTogIm5vLWNhY2hlIgogICAgICB9CiAgICB9LAogICAgZXJyb3JIYW5kbGVyOiBmdW5jdGlvbiBlcnJvckhhbmRsZXIoZXJyb3IpIHsKICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnNvbGUKICAgICAgY29uc29sZS5sb2coIiVjRXJyb3IiLCAiYmFja2dyb3VuZDogcmVkOyBjb2xvcjogd2hpdGU7IHBhZGRpbmc6IDJweCA0cHg7IGJvcmRlci1yYWRpdXM6IDNweDsgZm9udC13ZWlnaHQ6IGJvbGQ7IiwgZXJyb3IubWVzc2FnZSk7CiAgICB9CiAgfSk7CiAgcmV0dXJuIGFwb2xsb1Byb3ZpZGVyOwp9IC8vIE1hbnVhbGx5IGNhbGwgdGhpcyB3aGVuIHVzZXIgbG9nIGluCgpleHBvcnQgZnVuY3Rpb24gb25Mb2dpbihhcG9sbG9DbGllbnQsIHRva2VuKSB7CiAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS5hc3luYyhmdW5jdGlvbiBvbkxvZ2luJChfY29udGV4dCkgewogICAgd2hpbGUgKDEpIHsKICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgIGNhc2UgMDoKICAgICAgICAgIGlmICh0eXBlb2YgbG9jYWxTdG9yYWdlICE9PSAidW5kZWZpbmVkIiAmJiB0b2tlbikgewogICAgICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShBVVRIX1RPS0VOLCB0b2tlbik7CiAgICAgICAgICB9CgogICAgICAgICAgaWYgKGFwb2xsb0NsaWVudC53c0NsaWVudCkgcmVzdGFydFdlYnNvY2tldHMoYXBvbGxvQ2xpZW50LndzQ2xpZW50KTsKICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAyOwogICAgICAgICAgX2NvbnRleHQubmV4dCA9IDU7CiAgICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLmF3cmFwKGFwb2xsb0NsaWVudC5yZXNldFN0b3JlKCkpOwoKICAgICAgICBjYXNlIDU6CiAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTA7CiAgICAgICAgICBicmVhazsKCiAgICAgICAgY2FzZSA3OgogICAgICAgICAgX2NvbnRleHQucHJldiA9IDc7CiAgICAgICAgICBfY29udGV4dC50MCA9IF9jb250ZXh0WyJjYXRjaCJdKDIpOwogICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnNvbGUKICAgICAgICAgIGNvbnNvbGUubG9nKCIlY0Vycm9yIG9uIGNhY2hlIHJlc2V0IChsb2dpbikiLCAiY29sb3I6IG9yYW5nZTsiLCBfY29udGV4dC50MC5tZXNzYWdlKTsKCiAgICAgICAgY2FzZSAxMDoKICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgfQogICAgfQogIH0sIG51bGwsIG51bGwsIFtbMiwgN11dKTsKfSAvLyBNYW51YWxseSBjYWxsIHRoaXMgd2hlbiB1c2VyIGxvZyBvdXQKCmV4cG9ydCBmdW5jdGlvbiBvbkxvZ291dChhcG9sbG9DbGllbnQpIHsKICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLmFzeW5jKGZ1bmN0aW9uIG9uTG9nb3V0JChfY29udGV4dDIpIHsKICAgIHdoaWxlICgxKSB7CiAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgIGNhc2UgMDoKICAgICAgICAgIGlmICh0eXBlb2YgbG9jYWxTdG9yYWdlICE9PSAidW5kZWZpbmVkIikgewogICAgICAgICAgICBsb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbShBVVRIX1RPS0VOKTsKICAgICAgICAgIH0KCiAgICAgICAgICBpZiAoYXBvbGxvQ2xpZW50LndzQ2xpZW50KSByZXN0YXJ0V2Vic29ja2V0cyhhcG9sbG9DbGllbnQud3NDbGllbnQpOwogICAgICAgICAgX2NvbnRleHQyLnByZXYgPSAyOwogICAgICAgICAgX2NvbnRleHQyLm5leHQgPSA1OwogICAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS5hd3JhcChhcG9sbG9DbGllbnQucmVzZXRTdG9yZSgpKTsKCiAgICAgICAgY2FzZSA1OgogICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAxMDsKICAgICAgICAgIGJyZWFrOwoKICAgICAgICBjYXNlIDc6CiAgICAgICAgICBfY29udGV4dDIucHJldiA9IDc7CiAgICAgICAgICBfY29udGV4dDIudDAgPSBfY29udGV4dDJbImNhdGNoIl0oMik7CiAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29uc29sZQogICAgICAgICAgY29uc29sZS5sb2coIiVjRXJyb3Igb24gY2FjaGUgcmVzZXQgKGxvZ291dCkiLCAiY29sb3I6IG9yYW5nZTsiLCBfY29udGV4dDIudDAubWVzc2FnZSk7CgogICAgICAgIGNhc2UgMTA6CiAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICB9CiAgICB9CiAgfSwgbnVsbCwgbnVsbCwgW1syLCA3XV0pOwp9"},{"version":3,"sources":["/root/ahmed/vueJs/systemfinal/src/vue-apollo.js"],"names":["Vue","VueApollo","createApolloClient","restartWebsockets","use","AUTH_TOKEN","httpEndpoint","process","env","VUE_APP_GRAPHQL_HTTP","defaultOptions","wsEndpoint","tokenName","persisting","websocketsOnly","ssr","createProvider","options","apolloClient","wsClient","apolloProvider","defaultClient","$query","fetchPolicy","errorHandler","error","console","log","message","onLogin","token","localStorage","setItem","resetStore","onLogout","removeItem"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SACEC,kBADF,EAEEC,iBAFF,QAGO,sCAHP,C,CAKA;;AACAH,GAAG,CAACI,GAAJ,CAAQH,SAAR,E,CAEA;;AACA,IAAMI,UAAU,GAAG,cAAnB,C,CAEA;;AACA,IAAMC,YAAY,GAAGC,OAAO,CAACC,GAAR,CAAYC,oBAAjC,C,CAEA;;AACA,IAAMC,cAAc,GAAG;AACrB;AACAJ,EAAAA,YAAY,EAAZA,YAFqB;AAGrB;AACA;AACAK,EAAAA,UAAU,EAAE,IALS;AAMrB;AACAC,EAAAA,SAAS,EAAEP,UAPU;AAQrB;AACAQ,EAAAA,UAAU,EAAE,KATS;AAUrB;AACA;AACAC,EAAAA,cAAc,EAAE,KAZK;AAarB;AACAC,EAAAA,GAAG,EAAE,KAdgB,CAgBrB;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;;AA/BqB,CAAvB,C,CAkCA;;AACA,OAAO,SAASC,cAAT,GAAsC;AAAA,MAAdC,OAAc,uEAAJ,EAAI;;AAC3C;AAD2C,4BAERf,kBAAkB,mBAChDQ,cADgD,MAEhDO,OAFgD,EAFV;AAAA,MAEnCC,YAFmC,uBAEnCA,YAFmC;AAAA,MAErBC,QAFqB,uBAErBA,QAFqB;;AAM3CD,EAAAA,YAAY,CAACC,QAAb,GAAwBA,QAAxB,CAN2C,CAQ3C;;AACA,MAAMC,cAAc,GAAG,IAAInB,SAAJ,CAAc;AACnCoB,IAAAA,aAAa,EAAEH,YADoB;AAEnCR,IAAAA,cAAc,EAAE;AACdY,MAAAA,MAAM,EAAE;AACNC,QAAAA,WAAW,EAAE;AADP;AADM,KAFmB;AAOnCC,IAAAA,YAPmC,wBAOtBC,KAPsB,EAOf;AAClB;AACAC,MAAAA,OAAO,CAACC,GAAR,CACE,SADF,EAEE,yFAFF,EAGEF,KAAK,CAACG,OAHR;AAKD;AAdkC,GAAd,CAAvB;AAiBA,SAAOR,cAAP;AACD,C,CAED;;AACA,OAAO,SAAeS,OAAf,CAAuBX,YAAvB,EAAqCY,KAArC;AAAA;AAAA;AAAA;AAAA;AACL,cAAI,OAAOC,YAAP,KAAwB,WAAxB,IAAuCD,KAA3C,EAAkD;AAChDC,YAAAA,YAAY,CAACC,OAAb,CAAqB3B,UAArB,EAAiCyB,KAAjC;AACD;;AACD,cAAIZ,YAAY,CAACC,QAAjB,EAA2BhB,iBAAiB,CAACe,YAAY,CAACC,QAAd,CAAjB;AAJtB;AAAA;AAAA,0CAMGD,YAAY,CAACe,UAAb,EANH;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAQH;AACAP,UAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ,EAA8C,gBAA9C,EAAgE,YAAEC,OAAlE;;AATG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,C,CAaP;;AACA,OAAO,SAAeM,QAAf,CAAwBhB,YAAxB;AAAA;AAAA;AAAA;AAAA;AACL,cAAI,OAAOa,YAAP,KAAwB,WAA5B,EAAyC;AACvCA,YAAAA,YAAY,CAACI,UAAb,CAAwB9B,UAAxB;AACD;;AACD,cAAIa,YAAY,CAACC,QAAjB,EAA2BhB,iBAAiB,CAACe,YAAY,CAACC,QAAd,CAAjB;AAJtB;AAAA;AAAA,0CAMGD,YAAY,CAACe,UAAb,EANH;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAQH;AACAP,UAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ,EAA+C,gBAA/C,EAAiE,aAAEC,OAAnE;;AATG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import Vue from \"vue\";\nimport VueApollo from \"vue-apollo\";\nimport {\n  createApolloClient,\n  restartWebsockets\n} from \"vue-cli-plugin-apollo/graphql-client\";\n\n// Install the vue plugin\nVue.use(VueApollo);\n\n// Name of the localStorage item\nconst AUTH_TOKEN = \"apollo-token\";\n\n// Http endpoint\nconst httpEndpoint = process.env.VUE_APP_GRAPHQL_HTTP;\n\n// Config\nconst defaultOptions = {\n  // You can use `https` for secure connection (recommended in production)\n  httpEndpoint,\n  // You can use `wss` for secure connection (recommended in production)\n  // Use `null` to disable subscriptions\n  wsEndpoint: null,\n  // LocalStorage token\n  tokenName: AUTH_TOKEN,\n  // Enable Automatic Query persisting with Apollo Engine\n  persisting: false,\n  // Use websockets for everything (no HTTP)\n  // You need to pass a `wsEndpoint` for this to work\n  websocketsOnly: false,\n  // Is being rendered on the server?\n  ssr: false\n\n  // Override default apollo link\n  // note: don't override httpLink here, specify httpLink options in the\n  // httpLinkOptions property of defaultOptions.\n  // link: myLink\n\n  // Override default cache\n  // cache: myCache\n\n  // Override the way the Authorization header is set\n  // getAuth: (tokenName) => ...\n\n  // Additional ApolloClient options\n  // apollo: { ... }\n\n  // Client local data (see apollo-link-state)\n  // clientState: { resolvers: { ... }, defaults: { ... } }\n};\n\n// Call this in the Vue app file\nexport function createProvider(options = {}) {\n  // Create apollo client\n  const { apolloClient, wsClient } = createApolloClient({\n    ...defaultOptions,\n    ...options\n  });\n  apolloClient.wsClient = wsClient;\n\n  // Create vue apollo provider\n  const apolloProvider = new VueApollo({\n    defaultClient: apolloClient,\n    defaultOptions: {\n      $query: {\n        fetchPolicy: \"no-cache\"\n      }\n    },\n    errorHandler(error) {\n      // eslint-disable-next-line no-console\n      console.log(\n        \"%cError\",\n        \"background: red; color: white; padding: 2px 4px; border-radius: 3px; font-weight: bold;\",\n        error.message\n      );\n    }\n  });\n\n  return apolloProvider;\n}\n\n// Manually call this when user log in\nexport async function onLogin(apolloClient, token) {\n  if (typeof localStorage !== \"undefined\" && token) {\n    localStorage.setItem(AUTH_TOKEN, token);\n  }\n  if (apolloClient.wsClient) restartWebsockets(apolloClient.wsClient);\n  try {\n    await apolloClient.resetStore();\n  } catch (e) {\n    // eslint-disable-next-line no-console\n    console.log(\"%cError on cache reset (login)\", \"color: orange;\", e.message);\n  }\n}\n\n// Manually call this when user log out\nexport async function onLogout(apolloClient) {\n  if (typeof localStorage !== \"undefined\") {\n    localStorage.removeItem(AUTH_TOKEN);\n  }\n  if (apolloClient.wsClient) restartWebsockets(apolloClient.wsClient);\n  try {\n    await apolloClient.resetStore();\n  } catch (e) {\n    // eslint-disable-next-line no-console\n    console.log(\"%cError on cache reset (logout)\", \"color: orange;\", e.message);\n  }\n}\n"]}]}